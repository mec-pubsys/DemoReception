{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { styles } from \"./ExistingLGaPIDDialogStyles\";\nimport { HiraginoKakuText } from \"../../components/StyledText\";\nimport { User } from \"../../models/User\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ExistingLGaPIDDialog = function ExistingLGaPIDDialog(_ref) {\n  var onAccept = _ref.onAccept,\n    onCancel = _ref.onCancel;\n  useEffect(function () {\n    ActivityLogger.insertInfoLogEntry(new User(), 'ExistingLGaPIDDialog', 'useEffect', 'screen open');\n  }, []);\n  return _jsx(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: true,\n    children: _jsx(View, {\n      style: styles.modalBackground,\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsxs(View, {\n          style: styles.mainContainer,\n          children: [_jsx(HiraginoKakuText, {\n            style: styles.titleText,\n            children: \"\\u3059\\u3067\\u306B\\u53D7\\u4ED8\\u6E08\\u307F\\u3067\\u3059\"\n          }), _jsx(View, {\n            style: styles.messageContainer,\n            children: _jsxs(HiraginoKakuText, {\n              normal: true,\n              style: styles.messageText,\n              children: [\"\\u3053\\u306E\\u307E\\u307E\\u53D7\\u4ED8\\u3092\\u7D9A\\u3051\\u307E\\u3059\\u304B\\uFF1F \", \"\\n\", \"\\u53D7\\u4ED8\\u3092\\u7D9A\\u3051\\u308B\\u5834\\u5408\\u3001\\u3059\\u3067\\u306B\\u53D7\\u4ED8\\u6E08\\u307F\\u306E\\u5185\\u5BB9\\u306F\\u4E0A\\u66F8\\u304D\\u3055\\u308C\\u307E\\u3059\\u3002\"]\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.button, styles.acceptButton],\n            onPress: onAccept,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.buttonText,\n              children: \"\\u7D9A\\u3051\\u308B\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.button],\n            onPress: onCancel,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.cancelButtonText,\n              children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n};\nexport default ExistingLGaPIDDialog;","map":{"version":3,"names":["React","useEffect","View","Modal","TouchableOpacity","styles","HiraginoKakuText","User","ActivityLogger","jsx","_jsx","jsxs","_jsxs","ExistingLGaPIDDialog","_ref","onAccept","onCancel","insertInfoLogEntry","animationType","transparent","visible","children","style","modalBackground","modalContainer","mainContainer","titleText","messageContainer","normal","messageText","buttonContainer","button","acceptButton","onPress","buttonText","cancelButtonText"],"sources":["/home/runner/work/DemoReception/DemoReception/example/src/screens/existing-lgap-id-dialog/ExistingLGaPIDDialog.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { View, Modal, TouchableOpacity, StyleSheet } from \"react-native\";\nimport { styles } from \"./ExistingLGaPIDDialogStyles\";\nimport { HiraginoKakuText } from \"../../components/StyledText\";\nimport { User } from \"../../models/User\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\n\ninterface Props {\n  onAccept: () => void;\n  onCancel: () => void;\n}\n\nconst ExistingLGaPIDDialog: React.FC<Props> = ({ onAccept, onCancel }) => {\n  useEffect(() => {\n    ActivityLogger.insertInfoLogEntry(new User(), 'ExistingLGaPIDDialog', 'useEffect', 'screen open');\n  }, []);\n\n  return (\n    <Modal animationType=\"fade\" transparent={true} visible={true}>\n      <View style={styles.modalBackground}>\n        <View style={styles.modalContainer}>\n          <View style={styles.mainContainer}>\n            <HiraginoKakuText style={styles.titleText}>\n              すでに受付済みです\n            </HiraginoKakuText>\n            <View style={styles.messageContainer}>\n              <HiraginoKakuText normal style={styles.messageText}>\n                このまま受付を続けますか？ {\"\\n\"}\n                受付を続ける場合、すでに受付済みの内容は上書きされます。\n              </HiraginoKakuText>\n            </View>\n          </View>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={[styles.button, styles.acceptButton]}\n              onPress={onAccept}\n            >\n              <HiraginoKakuText style={styles.buttonText}>\n                続ける\n              </HiraginoKakuText>\n            </TouchableOpacity>\n            <TouchableOpacity style={[styles.button]} onPress={onCancel}>\n              <HiraginoKakuText style={styles.cancelButtonText}>\n                キャンセル\n              </HiraginoKakuText>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nexport default ExistingLGaPIDDialog;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAEzC,SAASC,MAAM;AACf,SAASC,gBAAgB;AACzB,SAASC,IAAI;AACb,SAASC,cAAc;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAO1D,IAAMC,oBAAqC,GAAG,SAAxCA,oBAAqCA,CAAAC,IAAA,EAA+B;EAAA,IAAzBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EACjEf,SAAS,CAAC,YAAM;IACdO,cAAc,CAACS,kBAAkB,CAAC,IAAIV,IAAI,CAAC,CAAC,EAAE,sBAAsB,EAAE,WAAW,EAAE,aAAa,CAAC;EACnG,CAAC,EAAE,EAAE,CAAC;EAEN,OACEG,IAAA,CAACP,KAAK;IAACe,aAAa,EAAC,MAAM;IAACC,WAAW,EAAE,IAAK;IAACC,OAAO,EAAE,IAAK;IAAAC,QAAA,EAC3DX,IAAA,CAACR,IAAI;MAACoB,KAAK,EAAEjB,MAAM,CAACkB,eAAgB;MAAAF,QAAA,EAClCT,KAAA,CAACV,IAAI;QAACoB,KAAK,EAAEjB,MAAM,CAACmB,cAAe;QAAAH,QAAA,GACjCT,KAAA,CAACV,IAAI;UAACoB,KAAK,EAAEjB,MAAM,CAACoB,aAAc;UAAAJ,QAAA,GAChCX,IAAA,CAACJ,gBAAgB;YAACgB,KAAK,EAAEjB,MAAM,CAACqB,SAAU;YAAAL,QAAA,EAAC;UAE3C,CAAkB,CAAC,EACnBX,IAAA,CAACR,IAAI;YAACoB,KAAK,EAAEjB,MAAM,CAACsB,gBAAiB;YAAAN,QAAA,EACnCT,KAAA,CAACN,gBAAgB;cAACsB,MAAM;cAACN,KAAK,EAAEjB,MAAM,CAACwB,WAAY;cAAAR,QAAA,GAAC,iFACpC,EAAC,IAAI,EAAC,0KAEtB;YAAA,CAAkB;UAAC,CACf,CAAC;QAAA,CACH,CAAC,EACPT,KAAA,CAACV,IAAI;UAACoB,KAAK,EAAEjB,MAAM,CAACyB,eAAgB;UAAAT,QAAA,GAClCX,IAAA,CAACN,gBAAgB;YACfkB,KAAK,EAAE,CAACjB,MAAM,CAAC0B,MAAM,EAAE1B,MAAM,CAAC2B,YAAY,CAAE;YAC5CC,OAAO,EAAElB,QAAS;YAAAM,QAAA,EAElBX,IAAA,CAACJ,gBAAgB;cAACgB,KAAK,EAAEjB,MAAM,CAAC6B,UAAW;cAAAb,QAAA,EAAC;YAE5C,CAAkB;UAAC,CACH,CAAC,EACnBX,IAAA,CAACN,gBAAgB;YAACkB,KAAK,EAAE,CAACjB,MAAM,CAAC0B,MAAM,CAAE;YAACE,OAAO,EAAEjB,QAAS;YAAAK,QAAA,EAC1DX,IAAA,CAACJ,gBAAgB;cAACgB,KAAK,EAAEjB,MAAM,CAAC8B,gBAAiB;cAAAd,QAAA,EAAC;YAElD,CAAkB;UAAC,CACH,CAAC;QAAA,CACf,CAAC;MAAA,CACH;IAAC,CACH;EAAC,CACF,CAAC;AAEZ,CAAC;AAED,eAAeR,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}