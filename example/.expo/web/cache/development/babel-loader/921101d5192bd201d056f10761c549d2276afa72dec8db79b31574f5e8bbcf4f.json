{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { HiraginoKakuText } from \"../../components/StyledText\";\nimport styles from \"./SelectReceptionMethodStyles\";\nimport { Header } from \"../../components/basics/header\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Certification } from \"../certification/Certification\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { PravicyConsent } from \"../privacy-consent/PrivacyConsent\";\nimport { fetchEventNameById } from \"./SelectReceptionMethodService\";\nimport { SelfqrDescriptionParams } from \"../serlfqr-description/SelfqrDescriptionParams\";\nimport { CheckInParams } from \"../check-in/CheckInParams\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SelectReceptionMethod = function SelectReceptionMethod(_ref) {\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var _ref2 = route.params,\n    selectReceptionMethodParams = _ref2.selectReceptionMethodParams;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuVisible = _useState2[0],\n    setMenuVisible = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isCertificationModalVisible = _useState4[0],\n    setCertificationModalVisible = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isPrivacyModalVisible = _useState6[0],\n    setPrivacyModalVisible = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isPrivacyManualModalVisible = _useState8[0],\n    setPrivacyManualModalVisible = _useState8[1];\n  useEffect(function () {\n    ActivityLogger.insertInfoLogEntry(selectReceptionMethodParams.user, 'SelectReceptionMethod', 'useEffect', 'screen open');\n    handleEventNameRead();\n  });\n  var showMenu = function showMenu() {\n    setMenuVisible(!isMenuVisible);\n  };\n  var closeMenu = function closeMenu() {\n    if (isMenuVisible && !isCertificationModalVisible) {\n      setMenuVisible(false);\n    }\n  };\n  var showCertification = function showCertification() {\n    setMenuVisible(false);\n    setCertificationModalVisible(!isCertificationModalVisible);\n  };\n  var handleCancelButton = function handleCancelButton() {\n    setCertificationModalVisible(false);\n  };\n  var handleQrContainer = function handleQrContainer() {\n    setPrivacyModalVisible(true);\n  };\n  var handleQrCodeContainer = function handleQrCodeContainer() {\n    setPrivacyManualModalVisible(true);\n  };\n  var handleAgree = function handleAgree() {\n    setPrivacyModalVisible(false);\n    var selfqrDescriptionParams = new SelfqrDescriptionParams();\n    selfqrDescriptionParams.user.userId = selectReceptionMethodParams.user.userId;\n    selfqrDescriptionParams.eventId = selectReceptionMethodParams.eventId;\n    selfqrDescriptionParams.venueId = selectReceptionMethodParams.venueId;\n    selfqrDescriptionParams.receptionTypeCode = \"1\";\n    navigation.navigate(\"SelfqrDescription\", {\n      selfqrDescriptionParams: selfqrDescriptionParams\n    });\n    ActivityLogger.insertInfoLogEntry(selectReceptionMethodParams.user, 'SelectReceptionMethod', 'handleAgree', 'transition', 'SelfqrDescription', selfqrDescriptionParams);\n  };\n  var handleManualAgree = function handleManualAgree() {\n    setPrivacyManualModalVisible(false);\n    var checkInParams = new CheckInParams();\n    checkInParams.user.userId = selectReceptionMethodParams.user.userId;\n    checkInParams.eventId = selectReceptionMethodParams.eventId;\n    checkInParams.venueId = selectReceptionMethodParams.venueId;\n    checkInParams.receptionTypeCode = \"2\";\n    navigation.navigate(\"CheckIn\", {\n      checkInParams: checkInParams\n    });\n    ActivityLogger.insertInfoLogEntry(selectReceptionMethodParams.user, 'SelectReceptionMethod', 'handleManualAgree', 'transition', 'CheckIn', checkInParams);\n  };\n  var handleDisagree = function handleDisagree() {\n    setPrivacyModalVisible(false);\n    navigation.navigate(\"SelectReceptionMethod\", {\n      selectReceptionMethodParams: selectReceptionMethodParams\n    });\n    ActivityLogger.insertInfoLogEntry(selectReceptionMethodParams.user, 'SelectReceptionMethod', 'handleDisagree', 'transition', 'SelectReceptionMethod', selectReceptionMethodParams);\n  };\n  var handleManualDisagree = function handleManualDisagree() {\n    setPrivacyManualModalVisible(false);\n    navigation.navigate(\"SelectReceptionMethod\", {\n      selectReceptionMethodParams: selectReceptionMethodParams\n    });\n    ActivityLogger.insertInfoLogEntry(selectReceptionMethodParams.user, 'SelectReceptionMethod', 'handleManualDisagree', 'transition', 'SelectReceptionMethod', selectReceptionMethodParams);\n  };\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    eventName = _useState10[0],\n    setEventName = _useState10[1];\n  var handleEventNameRead = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var result = yield fetchEventNameById(selectReceptionMethodParams.eventId);\n      if (result.data) {\n        var getEventName = result.data[0].name;\n        setEventName(getEventName);\n      } else {\n        console.log(\"Error: イベントIDには該当するイベント名がありません。\");\n      }\n    });\n    return function handleEventNameRead() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: closeMenu,\n    children: _jsxs(SafeAreaView, {\n      style: styles.mainContainer,\n      children: [_jsx(StatusBar, {\n        barStyle: \"dark-content\"\n      }), _jsx(Header, {\n        titleName: \"\\u53D7\\u4ED8\",\n        buttonName: \"\",\n        buttonWidth: 52,\n        onPress: showMenu,\n        icon: _jsx(AntDesign, {\n          name: \"ellipsis1\",\n          size: 28,\n          style: styles.dotIcon,\n          color: \"black\"\n        }),\n        iconPosition: \"center\"\n      }), _jsxs(View, {\n        style: styles.bodyContainer,\n        children: [_jsxs(View, {\n          style: styles.bodyTextContainer,\n          children: [_jsxs(HiraginoKakuText, {\n            style: styles.bodyText,\n            children: [\"[\", eventName, \"]\\u306E\"]\n          }), _jsx(HiraginoKakuText, {\n            style: styles.bodyText,\n            children: \"\\u53D7\\u4ED8\\u65B9\\u6CD5\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n          })]\n        }), _jsxs(View, {\n          style: styles.selectionContainer,\n          children: [_jsxs(Pressable, {\n            style: styles.qrContainer,\n            onPress: handleQrContainer,\n            children: [_jsx(View, {\n              style: styles.qrRemark,\n              children: _jsx(HiraginoKakuText, {\n                style: styles.qrRemarkText,\n                children: \"\\u3054\\u5229\\u7528\\u306B\\u306F\\u3001[\\u81EA\\u6CBB\\u4F53\\u30A2\\u30D7\\u30EA]\\u304C\\u5FC5\\u8981\\u3067\\u3059\"\n              })\n            }), _jsx(View, {\n              style: styles.qrCode,\n              children: _jsx(Image, {\n                source: require(\"../../assets/images/qr_code.png\"),\n                style: styles.qrImage\n              })\n            }), _jsx(HiraginoKakuText, {\n              style: styles.qrText,\n              children: \"\\u81EA\\u5DF1QR\\u3067\\u53D7\\u4ED8\"\n            })]\n          }), _jsxs(Pressable, {\n            style: styles.inputContainer,\n            onPress: handleQrCodeContainer,\n            children: [_jsx(View, {\n              style: styles.qrCode,\n              children: _jsx(Image, {\n                source: require(\"../../assets/images/input.png\"),\n                style: styles.inputImage\n              })\n            }), _jsx(HiraginoKakuText, {\n              style: styles.inputText,\n              children: \"\\u3053\\u306E\\u5834\\u3067\\u5165\\u529B\\u3057\\u3066\\u53D7\\u4ED8\"\n            })]\n          })]\n        })]\n      }), isMenuVisible && _jsx(Pressable, {\n        style: styles.menu,\n        onPress: showCertification,\n        children: _jsxs(HiraginoKakuText, {\n          style: styles.menuLabel,\n          normal: true,\n          children: [\" \", \"\\u7BA1\\u7406\\u8005\\u753B\\u9762\\u3078\"]\n        })\n      }), isCertificationModalVisible && _jsx(Certification, {\n        onCancelButtonPress: handleCancelButton,\n        toggleModal: showCertification,\n        navigation: navigation,\n        user: selectReceptionMethodParams.user\n      }), isPrivacyModalVisible && _jsx(PravicyConsent, {\n        onHandleAgree: handleAgree,\n        onHandleDisagree: handleDisagree\n      }), isPrivacyManualModalVisible && _jsx(PravicyConsent, {\n        onHandleAgree: handleManualAgree,\n        onHandleDisagree: handleManualDisagree\n      })]\n    })\n  });\n};","map":{"version":3,"names":["React","useEffect","useState","View","StatusBar","SafeAreaView","Image","TouchableWithoutFeedback","Pressable","HiraginoKakuText","styles","Header","AntDesign","Certification","useRoute","PravicyConsent","fetchEventNameById","SelfqrDescriptionParams","CheckInParams","ActivityLogger","jsx","_jsx","jsxs","_jsxs","SelectReceptionMethod","_ref","navigation","route","_ref2","params","selectReceptionMethodParams","_useState","_useState2","_slicedToArray","isMenuVisible","setMenuVisible","_useState3","_useState4","isCertificationModalVisible","setCertificationModalVisible","_useState5","_useState6","isPrivacyModalVisible","setPrivacyModalVisible","_useState7","_useState8","isPrivacyManualModalVisible","setPrivacyManualModalVisible","insertInfoLogEntry","user","handleEventNameRead","showMenu","closeMenu","showCertification","handleCancelButton","handleQrContainer","handleQrCodeContainer","handleAgree","selfqrDescriptionParams","userId","eventId","venueId","receptionTypeCode","navigate","handleManualAgree","checkInParams","handleDisagree","handleManualDisagree","_useState9","_useState10","eventName","setEventName","_ref3","_asyncToGenerator","result","data","getEventName","name","console","log","apply","arguments","onPress","children","style","mainContainer","barStyle","titleName","buttonName","buttonWidth","icon","size","dotIcon","color","iconPosition","bodyContainer","bodyTextContainer","bodyText","selectionContainer","qrContainer","qrRemark","qrRemarkText","qrCode","source","require","qrImage","qrText","inputContainer","inputImage","inputText","menu","menuLabel","normal","onCancelButtonPress","toggleModal","onHandleAgree","onHandleDisagree"],"sources":["/home/runner/work/DemoReception/DemoReception/example/src/screens/select-reception-method/SelectReceptionMethod.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  StatusBar,\n  SafeAreaView,\n  Image,\n  TouchableWithoutFeedback,\n  Pressable,\n} from \"react-native\";\nimport { HiraginoKakuText } from \"../../components/StyledText\";\nimport styles from \"./SelectReceptionMethodStyles\";\nimport { Header } from \"../../components/basics/header\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Certification } from \"../certification/Certification\";\nimport { NavigationProp, useRoute } from \"@react-navigation/native\";\nimport { PravicyConsent } from \"../privacy-consent/PrivacyConsent\";\nimport { fetchEventNameById } from \"./SelectReceptionMethodService\";\nimport { SelectReceptionMethodParams } from \"./SelectReceptionMethodParams\";\nimport { SelfqrDescriptionParams } from \"../serlfqr-description/SelfqrDescriptionParams\";\nimport { CheckInParams } from \"../check-in/CheckInParams\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\n\ntype Props = {\n  navigation: NavigationProp<any, any>;\n};\ntype Params = {\n  selectReceptionMethodParams: SelectReceptionMethodParams;\n};\n\nexport const SelectReceptionMethod = ({ navigation }: Props) => {\n  const route = useRoute();\n  let { selectReceptionMethodParams } = route.params as Params;\n\n  const [isMenuVisible, setMenuVisible] = useState(false);\n  const [isCertificationModalVisible, setCertificationModalVisible] =\n    useState(false);\n  const [isPrivacyModalVisible, setPrivacyModalVisible] = useState(false);\n  const [isPrivacyManualModalVisible, setPrivacyManualModalVisible] =\n    useState(false);\n\n  useEffect(() => {\n    ActivityLogger.insertInfoLogEntry(selectReceptionMethodParams.user, 'SelectReceptionMethod', 'useEffect', 'screen open');\n    handleEventNameRead();\n  });\n\n  const showMenu = () => {\n    setMenuVisible(!isMenuVisible);\n  };\n\n  const closeMenu = () => {\n    if (isMenuVisible && !isCertificationModalVisible) {\n      setMenuVisible(false);\n    }\n  };\n\n  const showCertification = () => {\n    setMenuVisible(false);\n    setCertificationModalVisible(!isCertificationModalVisible);\n  };\n\n  const handleCancelButton = () => {\n    setCertificationModalVisible(false);\n  };\n\n  const handleQrContainer = () => {\n    setPrivacyModalVisible(true);\n  };\n\n  const handleQrCodeContainer = () => {\n    setPrivacyManualModalVisible(true);\n  };\n\n  const handleAgree = () => {\n    setPrivacyModalVisible(false);\n\n    const selfqrDescriptionParams = new SelfqrDescriptionParams();\n    selfqrDescriptionParams.user.userId =\n      selectReceptionMethodParams.user.userId;\n    selfqrDescriptionParams.eventId = selectReceptionMethodParams.eventId;\n    selfqrDescriptionParams.venueId = selectReceptionMethodParams.venueId;\n    selfqrDescriptionParams.receptionTypeCode = \"1\";\n\n    navigation.navigate(\"SelfqrDescription\", {\n      selfqrDescriptionParams,\n    });\n    ActivityLogger.insertInfoLogEntry(selectReceptionMethodParams.user, 'SelectReceptionMethod', 'handleAgree', 'transition', 'SelfqrDescription', selfqrDescriptionParams);\n  };\n\n  const handleManualAgree = () => {\n    setPrivacyManualModalVisible(false);\n\n    const checkInParams = new CheckInParams();\n    checkInParams.user.userId = selectReceptionMethodParams.user.userId;\n    checkInParams.eventId = selectReceptionMethodParams.eventId;\n    checkInParams.venueId = selectReceptionMethodParams.venueId;\n    checkInParams.receptionTypeCode = \"2\";\n\n    navigation.navigate(\"CheckIn\", {\n      checkInParams,\n    });\n    ActivityLogger.insertInfoLogEntry(selectReceptionMethodParams.user, 'SelectReceptionMethod', 'handleManualAgree', 'transition', 'CheckIn', checkInParams);\n  };\n\n  const handleDisagree = () => {\n    setPrivacyModalVisible(false);\n\n    navigation.navigate(\"SelectReceptionMethod\", {\n      selectReceptionMethodParams,\n    });\n    ActivityLogger.insertInfoLogEntry(selectReceptionMethodParams.user, 'SelectReceptionMethod', 'handleDisagree', 'transition', 'SelectReceptionMethod', selectReceptionMethodParams);\n  };\n  const handleManualDisagree = () => {\n    setPrivacyManualModalVisible(false);\n\n    navigation.navigate(\"SelectReceptionMethod\", {\n      selectReceptionMethodParams,\n    });\n    ActivityLogger.insertInfoLogEntry(selectReceptionMethodParams.user, 'SelectReceptionMethod', 'handleManualDisagree', 'transition', 'SelectReceptionMethod', selectReceptionMethodParams);\n  };\n\n  //AWS\n  const [eventName, setEventName] = useState<any[]>([]);\n\n  const handleEventNameRead = async () => {\n    const result = await fetchEventNameById(\n      selectReceptionMethodParams.eventId\n    );\n    if (result.data) {\n      var getEventName = result.data[0].name;\n      setEventName(getEventName);\n    } else {\n      console.log(\"Error: イベントIDには該当するイベント名がありません。\");\n    }\n  };\n  return (\n    <TouchableWithoutFeedback onPress={closeMenu}>\n      <SafeAreaView style={styles.mainContainer}>\n        <StatusBar barStyle=\"dark-content\" />\n        <Header\n          titleName=\"受付\"\n          buttonName=\"\"\n          buttonWidth={52}\n          onPress={showMenu}\n          icon={\n            <AntDesign\n              name=\"ellipsis1\"\n              size={28}\n              style={styles.dotIcon}\n              color=\"black\"\n            />\n          }\n          iconPosition=\"center\"\n        ></Header>\n        <View style={styles.bodyContainer}>\n          <View style={styles.bodyTextContainer}>\n            <HiraginoKakuText style={styles.bodyText}>\n              [{eventName}]の\n            </HiraginoKakuText>\n            <HiraginoKakuText style={styles.bodyText}>\n              受付方法を選択してください\n            </HiraginoKakuText>\n          </View>\n          <View style={styles.selectionContainer}>\n            <Pressable style={styles.qrContainer} onPress={handleQrContainer}>\n              <View style={styles.qrRemark}>\n                <HiraginoKakuText style={styles.qrRemarkText}>\n                  ご利用には、[自治体アプリ]が必要です\n                </HiraginoKakuText>\n              </View>\n              <View style={styles.qrCode}>\n                <Image\n                  source={require(\"../../assets/images/qr_code.png\")}\n                  style={styles.qrImage}\n                ></Image>\n              </View>\n              <HiraginoKakuText style={styles.qrText}>\n                自己QRで受付\n              </HiraginoKakuText>\n            </Pressable>\n            <Pressable\n              style={styles.inputContainer}\n              onPress={handleQrCodeContainer}\n            >\n              <View style={styles.qrCode}>\n                <Image\n                  source={require(\"../../assets/images/input.png\")}\n                  style={styles.inputImage}\n                ></Image>\n              </View>\n              <HiraginoKakuText style={styles.inputText}>\n                この場で入力して受付\n              </HiraginoKakuText>\n            </Pressable>\n          </View>\n        </View>\n        {isMenuVisible && (\n          <Pressable style={styles.menu} onPress={showCertification}>\n            <HiraginoKakuText style={styles.menuLabel} normal>\n              {\" \"}\n              管理者画面へ\n            </HiraginoKakuText>\n          </Pressable>\n        )}\n        {isCertificationModalVisible && (\n          <Certification\n            onCancelButtonPress={handleCancelButton}\n            toggleModal={showCertification}\n            navigation={navigation}\n            user={selectReceptionMethodParams.user}\n          />\n        )}\n        {isPrivacyModalVisible && (\n          <PravicyConsent\n            onHandleAgree={handleAgree}\n            onHandleDisagree={handleDisagree}\n          />\n        )}\n        {isPrivacyManualModalVisible && (\n          <PravicyConsent\n            onHandleAgree={handleManualAgree}\n            onHandleDisagree={handleManualDisagree}\n          />\n        )}\n      </SafeAreaView>\n    </TouchableWithoutFeedback>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}