{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport Hammer from '@egjs/hammerjs';\nimport IndiscreteGestureHandler from \"./IndiscreteGestureHandler\";\nvar PinchGestureHandler = function (_IndiscreteGestureHan) {\n  _inherits(PinchGestureHandler, _IndiscreteGestureHan);\n  var _super = _createSuper(PinchGestureHandler);\n  function PinchGestureHandler() {\n    _classCallCheck(this, PinchGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PinchGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'pinch';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return Hammer.Pinch;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref) {\n      var scale = _ref.scale,\n        velocity = _ref.velocity,\n        center = _ref.center;\n      return {\n        focalX: center.x,\n        focalY: center.y,\n        velocity: velocity,\n        scale: scale\n      };\n    }\n  }]);\n  return PinchGestureHandler;\n}(IndiscreteGestureHandler);\nexport default PinchGestureHandler;","map":{"version":3,"names":["Hammer","IndiscreteGestureHandler","PinchGestureHandler","_IndiscreteGestureHan","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","Pinch","value","transformNativeEvent","_ref","scale","velocity","center","focalX","x","focalY","y"],"sources":["/home/runner/work/DemoReception/DemoReception/example/node_modules/react-native-gesture-handler/src/web_hammer/PinchGestureHandler.ts"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\nimport { HammerInputExt } from './GestureHandler';\n\nimport IndiscreteGestureHandler from './IndiscreteGestureHandler';\n\nclass PinchGestureHandler extends IndiscreteGestureHandler {\n  get name() {\n    return 'pinch';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pinch;\n  }\n\n  transformNativeEvent({ scale, velocity, center }: HammerInputExt) {\n    return {\n      focalX: center.x,\n      focalY: center.y,\n      velocity,\n      scale,\n    };\n  }\n}\n\nexport default PinchGestureHandler;\n"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAM,MAAM,gBAAgB;AAGnC,OAAOC,wBAAwB;AAAkC,IAE3DC,mBAAmB,aAAAC,qBAAA;EAAAC,SAAA,CAAAF,mBAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,mBAAA;EAAA,SAAAA,oBAAA;IAAAK,eAAA,OAAAL,mBAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,mBAAA;IAAAS,GAAA;IAAAC,GAAA,EACvB,SAAAA,IAAA,EAAW;MACT,OAAO,OAAO;IAChB;EAAA;IAAAD,GAAA;IAAAC,GAAA,EAEA,SAAAA,IAAA,EAAyB;MACvB,OAAOZ,MAAM,CAACa,KAAK;IACrB;EAAA;IAAAF,GAAA;IAAAG,KAAA,EAEA,SAAAC,qBAAAC,IAAA,EAAkE;MAAA,IAA3CC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;QAAEC,MAAA,GAAAH,IAAA,CAAAG,MAAA;MACtC,OAAO;QACLC,MAAM,EAAED,MAAM,CAACE,CAAC;QAChBC,MAAM,EAAEH,MAAM,CAACI,CAAC;QAChBL,QAAQ,EAARA,QAAQ;QACRD,KAAA,EAAAA;MACF,CAAC;IACH;EAAA;EAAA,OAAAf,mBAAA;AAAA,EAhBgCD,wBAAwB;AAmB1D,eAAeC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}