{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useEffect, useState } from \"react\";\nimport * as Font from \"expo-font\";\nimport { Login } from \"./src/screens/login/Login\";\nimport { CheckIn } from \"./src/screens/check-in/CheckIn\";\nimport CheckInConfirmation from \"./src/screens/check-in-confirmation/CheckInConfirmation\";\nimport { CheckInEdit } from \"./src/screens/check-in-edit/CheckInEdit\";\nimport Completion from \"./src/screens/completion/Completion\";\nimport { EventDetail } from \"./src/screens/event-detail/EventDetail\";\nimport { EventList } from \"./src/screens/event-list/EventList\";\nimport GroupCheckInConfirmation from \"./src/screens/group-check-in-confirmation/GroupCheckInConfirmation\";\nimport GroupCheckInEdit from \"./src/screens/group-check-in-edit/GroupCheckInEdit\";\nimport { Logout } from \"./src/screens/logout/Logout\";\nimport { PreReceptionVerification } from \"./src/screens/pre-reception-verification/PreReceptionVerification\";\nimport { PravicyConsent } from \"./src/screens/privacy-consent/PrivacyConsent\";\nimport { SelectReceptionMethod } from \"./src/screens/select-reception-method/SelectReceptionMethod\";\nimport { SelfqrScanner } from \"./src/screens/selfqr-scanner/SelfqrScanner\";\nimport { SelfqrDescription } from \"./src/screens/serlfqr-description/SelfqrDescription\";\nimport { signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { userAuth } from \"./src/config/firebaseConfig\";\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontLoaded = _useState2[0],\n    setFontLoaded = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    initializing = _useState6[0],\n    setInitializing = _useState6[1];\n  useEffect(function () {\n    var loadFonts = function () {\n      var _ref = _asyncToGenerator(function* () {\n        yield Font.loadAsync({\n          SpaceMono: require(\"./src/assets/fonts/SpaceMono-Regular.ttf\"),\n          HiraginoKaku_GothicPro_Text: require(\"./src/assets/fonts/Hiragino-Kaku-Gothic-Pro-W3.otf\"),\n          HiraginoKaku_GothicPro_Text_Bold: require(\"./src/assets/fonts/Hiragino-Kaku-Gothic-Pro-W6.ttf\")\n        });\n        setFontLoaded(true);\n      });\n      return function loadFonts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    loadFonts();\n    signInWithEmailAndPassword(userAuth, \"city-staff-base@matsusaka.co.jp\", \"Pg37gRm20b58z3D5\").catch(function (error) {\n      console.log(\"Auto sign-in failed:\", error);\n    });\n    var unsubscribeAuthState = onAuthStateChanged(userAuth, function (currentUser) {\n      setUser(currentUser);\n      if (initializing) setInitializing(false);\n    });\n    return unsubscribeAuthState;\n  }, []);\n  if (!fontLoaded) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      screenOptions: {\n        headerShown: false,\n        animation: \"none\"\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login\n      }), _jsx(Stack.Screen, {\n        name: \"EventList\",\n        component: EventList\n      }), _jsx(Stack.Screen, {\n        name: \"EventDetail\",\n        component: EventDetail\n      }), _jsx(Stack.Screen, {\n        name: \"CheckIn\",\n        component: CheckIn\n      }), _jsx(Stack.Screen, {\n        name: \"CheckInConfirmation\",\n        component: CheckInConfirmation\n      }), _jsx(Stack.Screen, {\n        name: \"CheckInEdit\",\n        component: CheckInEdit\n      }), _jsx(Stack.Screen, {\n        name: \"Completion\",\n        component: Completion\n      }), _jsx(Stack.Screen, {\n        name: \"GroupCheckInConfirmation\",\n        component: GroupCheckInConfirmation\n      }), _jsx(Stack.Screen, {\n        name: \"GroupCheckInEdit\",\n        component: GroupCheckInEdit\n      }), _jsx(Stack.Screen, {\n        name: \"Logout\",\n        component: Logout\n      }), _jsx(Stack.Screen, {\n        name: \"PreReceptionVerification\",\n        component: PreReceptionVerification\n      }), _jsx(Stack.Screen, {\n        name: \"PravicyConsent\",\n        component: PravicyConsent\n      }), _jsx(Stack.Screen, {\n        name: \"SelectReceptionMethod\",\n        component: SelectReceptionMethod\n      }), _jsx(Stack.Screen, {\n        name: \"SelfqrScanner\",\n        component: SelfqrScanner\n      }), _jsx(Stack.Screen, {\n        name: \"SelfqrDescription\",\n        component: SelfqrDescription\n      })]\n    })\n  });\n}\nserviceWorkerRegistration.register();","map":{"version":3,"names":["createNativeStackNavigator","NavigationContainer","useEffect","useState","Font","Login","CheckIn","CheckInConfirmation","CheckInEdit","Completion","EventDetail","EventList","GroupCheckInConfirmation","GroupCheckInEdit","Logout","PreReceptionVerification","PravicyConsent","SelectReceptionMethod","SelfqrScanner","SelfqrDescription","signInWithEmailAndPassword","onAuthStateChanged","userAuth","serviceWorkerRegistration","jsx","_jsx","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","fontLoaded","setFontLoaded","_useState3","_useState4","user","setUser","_useState5","_useState6","initializing","setInitializing","loadFonts","_ref","_asyncToGenerator","loadAsync","SpaceMono","require","HiraginoKaku_GothicPro_Text","HiraginoKaku_GothicPro_Text_Bold","apply","arguments","catch","error","console","log","unsubscribeAuthState","currentUser","children","Navigator","initialRouteName","screenOptions","headerShown","animation","Screen","name","component","register"],"sources":["/home/runner/work/DemoReception/DemoReception/example/App.tsx"],"sourcesContent":["import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useEffect, useState } from \"react\";\nimport * as Font from \"expo-font\";\nimport { Login } from \"./src/screens/login/Login\";\nimport { CheckIn } from \"./src/screens/check-in/CheckIn\";\nimport CheckInConfirmation from \"./src/screens/check-in-confirmation/CheckInConfirmation\";\nimport { CheckInEdit } from \"./src/screens/check-in-edit/CheckInEdit\";\nimport Completion from \"./src/screens/completion/Completion\";\nimport { EventDetail } from \"./src/screens/event-detail/EventDetail\";\nimport { EventList } from \"./src/screens/event-list/EventList\";\nimport GroupCheckInConfirmation from \"./src/screens/group-check-in-confirmation/GroupCheckInConfirmation\";\nimport GroupCheckInEdit from \"./src/screens/group-check-in-edit/GroupCheckInEdit\";\nimport { Logout } from \"./src/screens/logout/Logout\";\nimport { PreReceptionVerification } from \"./src/screens/pre-reception-verification/PreReceptionVerification\";\nimport { PravicyConsent } from \"./src/screens/privacy-consent/PrivacyConsent\";\nimport { SelectReceptionMethod } from \"./src/screens/select-reception-method/SelectReceptionMethod\";\nimport { SelfqrScanner } from \"./src/screens/selfqr-scanner/SelfqrScanner\";\nimport { SelfqrDescription } from \"./src/screens/serlfqr-description/SelfqrDescription\";\nimport { signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { userAuth } from \"./src/config/firebaseConfig\";\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\n\nconst Stack = createNativeStackNavigator();\nexport default function App() {\n  const [fontLoaded, setFontLoaded] = useState(false);\n  const [user, setUser] = useState<any | null>(null);\n  const [initializing, setInitializing] = useState(true);\n\n  useEffect(() => {\n    const loadFonts = async () => {\n      await Font.loadAsync({\n        SpaceMono: require(\"./src/assets/fonts/SpaceMono-Regular.ttf\"),\n        HiraginoKaku_GothicPro_Text: require(\"./src/assets/fonts/Hiragino-Kaku-Gothic-Pro-W3.otf\"),\n        HiraginoKaku_GothicPro_Text_Bold: require(\"./src/assets/fonts/Hiragino-Kaku-Gothic-Pro-W6.ttf\"),\n      });\n\n      setFontLoaded(true);\n    };\n    loadFonts();\n\n    signInWithEmailAndPassword(\n      userAuth,\n      \"city-staff-base@matsusaka.co.jp\",\n      \"Pg37gRm20b58z3D5\"\n    ).catch((error) => {\n      console.log(\"Auto sign-in failed:\", error);\n    });\n\n    const unsubscribeAuthState = onAuthStateChanged(userAuth, (currentUser) => {\n      setUser(currentUser);\n      if (initializing) setInitializing(false);\n    });\n\n    return unsubscribeAuthState;\n  }, []);\n\n  if (!fontLoaded) {\n    return null;\n  }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        initialRouteName=\"Login\"\n        screenOptions={{\n          headerShown: false,\n          animation: \"none\",\n        }}\n      >\n        <Stack.Screen name=\"Login\" component={Login} />\n        <Stack.Screen name=\"EventList\" component={EventList} />\n        <Stack.Screen name=\"EventDetail\" component={EventDetail} />\n        <Stack.Screen name=\"CheckIn\" component={CheckIn} />\n        <Stack.Screen name=\"CheckInConfirmation\" component={CheckInConfirmation} />\n        <Stack.Screen name=\"CheckInEdit\" component={CheckInEdit} />\n        <Stack.Screen name=\"Completion\" component={Completion} />\n        <Stack.Screen name=\"GroupCheckInConfirmation\" component={GroupCheckInConfirmation} />\n        <Stack.Screen name=\"GroupCheckInEdit\" component={GroupCheckInEdit} />\n        <Stack.Screen name=\"Logout\" component={Logout} />\n        <Stack.Screen name=\"PreReceptionVerification\" component={PreReceptionVerification} />\n        <Stack.Screen name=\"PravicyConsent\" component={PravicyConsent} />\n        <Stack.Screen name=\"SelectReceptionMethod\" component={SelectReceptionMethod} />\n        <Stack.Screen name=\"SelfqrScanner\" component={SelfqrScanner} />\n        <Stack.Screen name=\"SelfqrDescription\" component={SelfqrDescription} />\n\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nserviceWorkerRegistration.register();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}