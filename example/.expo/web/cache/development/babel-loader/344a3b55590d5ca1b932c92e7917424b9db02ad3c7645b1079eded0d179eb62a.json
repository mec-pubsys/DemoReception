{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { State } from \"../../State\";\nimport { DEFAULT_TOUCH_SLOP } from \"../constants\";\nimport GestureHandler from \"./GestureHandler\";\nimport ScaleGestureDetector from \"../detectors/ScaleGestureDetector\";\nvar PinchGestureHandler = function (_GestureHandler) {\n  _inherits(PinchGestureHandler, _GestureHandler);\n  var _super = _createSuper(PinchGestureHandler);\n  function PinchGestureHandler() {\n    var _this;\n    _classCallCheck(this, PinchGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.scale = 1;\n    _this.velocity = 0;\n    _this.startingSpan = 0;\n    _this.spanSlop = DEFAULT_TOUCH_SLOP;\n    _this.scaleDetectorListener = {\n      onScaleBegin: function onScaleBegin(detector) {\n        _this.startingSpan = detector.currentSpan;\n        return true;\n      },\n      onScale: function onScale(detector) {\n        var prevScaleFactor = _this.scale;\n        _this.scale *= detector.calculateScaleFactor(_this.tracker.trackedPointersCount);\n        var delta = detector.timeDelta;\n        if (delta > 0) {\n          _this.velocity = (_this.scale - prevScaleFactor) / delta;\n        }\n        if (Math.abs(_this.startingSpan - detector.currentSpan) >= _this.spanSlop && _this.state === State.BEGAN) {\n          _this.activate();\n        }\n        return true;\n      },\n      onScaleEnd: function onScaleEnd(_detector) {}\n    };\n    _this.scaleGestureDetector = new ScaleGestureDetector(_this.scaleDetectorListener);\n    return _this;\n  }\n  _createClass(PinchGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n      this.shouldCancelWhenOutside = false;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      return {\n        focalX: this.scaleGestureDetector.focusX,\n        focalY: this.scaleGestureDetector.focusY,\n        velocity: this.velocity,\n        scale: this.scale\n      };\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"onPointerAdd\", this).call(this, event);\n      this.tryBegin();\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.state !== State.ACTIVE) {\n        return;\n      }\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      if (this.state === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"onPointerRemove\", this).call(this, event);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.state === State.ACTIVE && this.tracker.trackedPointersCount < 2) {\n        this.end();\n      }\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      if (this.tracker.trackedPointersCount < 2) {\n        return;\n      }\n      this.tracker.track(event);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      if (this.tracker.trackedPointersCount < 2) {\n        return;\n      }\n      this.tracker.track(event);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"onPointerOutOfBounds\", this).call(this, event);\n    }\n  }, {\n    key: \"tryBegin\",\n    value: function tryBegin() {\n      if (this.state !== State.UNDETERMINED) {\n        return;\n      }\n      this.resetProgress();\n      this.begin();\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(force) {\n      if (this.state !== State.ACTIVE) {\n        this.resetProgress();\n      }\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"activate\", this).call(this, force);\n    }\n  }, {\n    key: \"onReset\",\n    value: function onReset() {\n      this.resetProgress();\n    }\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {\n      if (this.state === State.ACTIVE) {\n        return;\n      }\n      this.velocity = 0;\n      this.scale = 1;\n    }\n  }]);\n  return PinchGestureHandler;\n}(GestureHandler);\nexport { PinchGestureHandler as default };","map":{"version":3,"names":["State","DEFAULT_TOUCH_SLOP","GestureHandler","ScaleGestureDetector","PinchGestureHandler","_GestureHandler","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","scale","velocity","startingSpan","spanSlop","scaleDetectorListener","onScaleBegin","detector","currentSpan","onScale","prevScaleFactor","calculateScaleFactor","tracker","trackedPointersCount","delta","timeDelta","Math","abs","state","BEGAN","activate","onScaleEnd","_detector","scaleGestureDetector","_createClass","key","value","init","ref","propsRef","_get","_getPrototypeOf","prototype","shouldCancelWhenOutside","transformNativeEvent","focalX","focusX","focalY","focusY","onPointerDown","event","addToTracker","tryToSendTouchEvent","onPointerAdd","tryBegin","onTouchEvent","onPointerUp","removeFromTracker","pointerId","ACTIVE","end","fail","onPointerRemove","onPointerMove","track","onPointerOutOfBounds","UNDETERMINED","resetProgress","begin","force","onReset","default"],"sources":["/home/runner/work/DemoReception/DemoReception/example/node_modules/react-native-gesture-handler/src/web/handlers/PinchGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport ScaleGestureDetector, {\n  ScaleGestureListener,\n} from '../detectors/ScaleGestureDetector';\n\nexport default class PinchGestureHandler extends GestureHandler {\n  private scale = 1;\n  private velocity = 0;\n\n  private startingSpan = 0;\n  private spanSlop = DEFAULT_TOUCH_SLOP;\n\n  private scaleDetectorListener: ScaleGestureListener = {\n    onScaleBegin: (detector: ScaleGestureDetector): boolean => {\n      this.startingSpan = detector.currentSpan;\n      return true;\n    },\n    onScale: (detector: ScaleGestureDetector): boolean => {\n      const prevScaleFactor: number = this.scale;\n      this.scale *= detector.calculateScaleFactor(\n        this.tracker.trackedPointersCount\n      );\n\n      const delta = detector.timeDelta;\n      if (delta > 0) {\n        this.velocity = (this.scale - prevScaleFactor) / delta;\n      }\n\n      if (\n        Math.abs(this.startingSpan - detector.currentSpan) >= this.spanSlop &&\n        this.state === State.BEGAN\n      ) {\n        this.activate();\n      }\n      return true;\n    },\n    onScaleEnd: (\n      _detector: ScaleGestureDetector\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ): void => {},\n  };\n\n  private scaleGestureDetector: ScaleGestureDetector = new ScaleGestureDetector(\n    this.scaleDetectorListener\n  );\n\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n\n    this.shouldCancelWhenOutside = false;\n  }\n\n  protected transformNativeEvent() {\n    return {\n      focalX: this.scaleGestureDetector.focusX,\n      focalY: this.scaleGestureDetector.focusY,\n      velocity: this.velocity,\n      scale: this.scale,\n    };\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.tryBegin();\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.state !== State.ACTIVE) {\n      return;\n    }\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n\n    if (this.state === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.state === State.ACTIVE && this.tracker.trackedPointersCount < 2) {\n      this.end();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerMove(event);\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerOutOfBounds(event);\n  }\n\n  private tryBegin(): void {\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.resetProgress();\n    this.begin();\n  }\n\n  public activate(force?: boolean): void {\n    if (this.state !== State.ACTIVE) {\n      this.resetProgress();\n    }\n\n    super.activate(force);\n  }\n\n  protected onReset(): void {\n    this.resetProgress();\n  }\n\n  protected resetProgress(): void {\n    if (this.state === State.ACTIVE) {\n      return;\n    }\n    this.velocity = 0;\n    this.scale = 1;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}