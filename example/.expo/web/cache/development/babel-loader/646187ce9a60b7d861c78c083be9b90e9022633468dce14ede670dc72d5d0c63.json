{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { invokeLambdaWithQuery } from \"../api/apiHandler\";\nexport var executeQuery = function () {\n  var _ref = _asyncToGenerator(function* (method, queryString) {\n    try {\n      var result = yield invokeLambdaWithQuery(method, queryString);\n      var parsedBody = JSON.parse(result.body);\n      var status = result.statusCode;\n      var data = parsedBody.result;\n      var message = \"\";\n      if (status === 400) {\n        message = \"No rows affected by query\";\n      } else if (status === 200) {\n        message = \"success\";\n      } else {\n        message = parsedBody.error;\n      }\n      return {\n        data: data,\n        message: message\n      };\n    } catch (error) {\n      throw new Error(\"Failed to execute query\");\n    }\n  });\n  return function executeQuery(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["invokeLambdaWithQuery","executeQuery","_ref","_asyncToGenerator","method","queryString","result","parsedBody","JSON","parse","body","status","statusCode","data","message","error","Error","_x","_x2","apply","arguments"],"sources":["/home/runner/work/DemoReception/DemoReception/example/src/aws/db/dbOperation.ts"],"sourcesContent":["import { invokeLambdaWithQuery } from \"../api/apiHandler\";\n\nexport const executeQuery = async (method: string, queryString: string) => {\n  try {\n    const result = await invokeLambdaWithQuery(method, queryString);\n    const parsedBody = JSON.parse(result.body);\n    const status = result.statusCode;\n    const data = parsedBody.result;\n\n    let message = \"\";\n    if (status === 400) {\n      message = \"No rows affected by query\";\n    } else if (status === 200) {\n      message = \"success\";\n    } else {\n      message = parsedBody.error;\n    }\n    return { data, message };\n  } catch (error) {\n    throw new Error(\"Failed to execute query\");\n  }\n};\n"],"mappings":";AAAA,SAASA,qBAAqB;AAE9B,OAAO,IAAMC,YAAY;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,MAAc,EAAEC,WAAmB,EAAK;IACzE,IAAI;MACF,IAAMC,MAAM,SAASN,qBAAqB,CAACI,MAAM,EAAEC,WAAW,CAAC;MAC/D,IAAME,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAACI,IAAI,CAAC;MAC1C,IAAMC,MAAM,GAAGL,MAAM,CAACM,UAAU;MAChC,IAAMC,IAAI,GAAGN,UAAU,CAACD,MAAM;MAE9B,IAAIQ,OAAO,GAAG,EAAE;MAChB,IAAIH,MAAM,KAAK,GAAG,EAAE;QAClBG,OAAO,GAAG,2BAA2B;MACvC,CAAC,MAAM,IAAIH,MAAM,KAAK,GAAG,EAAE;QACzBG,OAAO,GAAG,SAAS;MACrB,CAAC,MAAM;QACLA,OAAO,GAAGP,UAAU,CAACQ,KAAK;MAC5B;MACA,OAAO;QAAEF,IAAI,EAAJA,IAAI;QAAEC,OAAO,EAAPA;MAAQ,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;EACF,CAAC;EAAA,gBAnBYf,YAAYA,CAAAgB,EAAA,EAAAC,GAAA;IAAA,OAAAhB,IAAA,CAAAiB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAmBxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}