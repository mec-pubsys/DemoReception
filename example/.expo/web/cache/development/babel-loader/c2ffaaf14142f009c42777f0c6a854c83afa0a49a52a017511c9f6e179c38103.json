{"ast":null,"code":"'use strict';\nimport lrgb from \"./lrgb.js\";\nfunction convertLrgbToOklab(_ref) {\n  'worklet';\n\n  var _ref$r = _ref.r,\n    r = _ref$r === void 0 ? 0 : _ref$r,\n    _ref$g = _ref.g,\n    g = _ref$g === void 0 ? 0 : _ref$g,\n    _ref$b = _ref.b,\n    b = _ref$b === void 0 ? 0 : _ref$b,\n    alpha = _ref.alpha;\n  var L = Math.cbrt(0.41222147079999993 * r + 0.5363325363 * g + 0.0514459929 * b);\n  var M = Math.cbrt(0.2119034981999999 * r + 0.6806995450999999 * g + 0.1073969566 * b);\n  var S = Math.cbrt(0.08830246189999998 * r + 0.2817188376 * g + 0.6299787005000002 * b);\n  return {\n    l: 0.2104542553 * L + 0.793617785 * M - 0.0040720468 * S,\n    a: 1.9779984951 * L - 2.428592205 * M + 0.4505937099 * S,\n    b: 0.0259040371 * L + 0.7827717662 * M - 0.808675766 * S,\n    alpha: alpha\n  };\n}\nfunction convertRgbToOklab(rgb) {\n  'worklet';\n\n  var lrgbColor = lrgb.convert.fromRgb(rgb);\n  var result = convertLrgbToOklab(lrgbColor);\n  if (rgb.r === rgb.b && rgb.b === rgb.g) {\n    result.a = result.b = 0;\n  }\n  return result;\n}\nfunction convertOklabToLrgb(_ref2) {\n  'worklet';\n  var _ref2$l = _ref2.l,\n    l = _ref2$l === void 0 ? 0 : _ref2$l,\n    _ref2$a = _ref2.a,\n    a = _ref2$a === void 0 ? 0 : _ref2$a,\n    _ref2$b = _ref2.b,\n    b = _ref2$b === void 0 ? 0 : _ref2$b,\n    alpha = _ref2.alpha;\n  var L = Math.pow(l * 0.99999999845051981432 + 0.39633779217376785678 * a + 0.21580375806075880339 * b, 3);\n  var M = Math.pow(l * 1.0000000088817607767 - 0.1055613423236563494 * a - 0.063854174771705903402 * b, 3);\n  var S = Math.pow(l * 1.0000000546724109177 - 0.089484182094965759684 * a - 1.2914855378640917399 * b, 3);\n  return {\n    r: +4.076741661347994 * L - 3.307711590408193 * M + 0.230969928729428 * S,\n    g: -1.2684380040921763 * L + 2.6097574006633715 * M - 0.3413193963102197 * S,\n    b: -0.004196086541837188 * L - 0.7034186144594493 * M + 1.7076147009309444 * S,\n    alpha: alpha\n  };\n}\nfunction convertOklabToRgb(labColor) {\n  'worklet';\n\n  var roundChannel = function roundChannel(channel) {\n    return Math.ceil(channel * 100000) / 100000;\n  };\n  var lrgbColor = convertOklabToLrgb(labColor);\n  var rgbColor = lrgb.convert.toRgb(lrgbColor);\n  rgbColor.r = roundChannel(rgbColor.r);\n  rgbColor.g = roundChannel(rgbColor.g);\n  rgbColor.b = roundChannel(rgbColor.b);\n  return rgbColor;\n}\nexport default {\n  convert: {\n    fromRgb: convertRgbToOklab,\n    toRgb: convertOklabToRgb\n  }\n};","map":{"version":3,"names":["lrgb","convertLrgbToOklab","_ref","_ref$r","r","_ref$g","g","_ref$b","b","alpha","L","Math","cbrt","M","S","l","a","convertRgbToOklab","rgb","lrgbColor","convert","fromRgb","result","convertOklabToLrgb","_ref2","_ref2$l","_ref2$a","_ref2$b","pow","convertOklabToRgb","labColor","roundChannel","channel","ceil","rgbColor","toRgb"],"sources":["/home/runner/work/DemoReception/DemoReception/example/node_modules/react-native-reanimated/src/culori/oklab.ts"],"sourcesContent":["'use strict';\nimport type { LabColor, RgbColor } from './Colors';\n/*\n * The vast majority of the code exported by this module is a direct copy of the code from the culori package (see\n * https://culorijs.org/), which deserves full credit for it. In particular, code from the following path has been used:\n * - https://github.com/Evercoder/culori/tree/v4.0.1/src/oklab\n */\n// TODO Once we have the option to workletize external dependencies, we can replace most of the code below with\n//  a simple implementation based on their converter utils (see\n//  https://github.com/software-mansion/react-native-reanimated/pull/6782#pullrequestreview-2488830278,\n//  https://culorijs.org/api/#converter).\nimport lrgb from './lrgb';\n\nfunction convertLrgbToOklab({\n  r = 0,\n  g = 0,\n  b = 0,\n  alpha,\n}: RgbColor): LabColor {\n  'worklet';\n  const L = Math.cbrt(\n    0.41222147079999993 * r + 0.5363325363 * g + 0.0514459929 * b\n  );\n  const M = Math.cbrt(\n    0.2119034981999999 * r + 0.6806995450999999 * g + 0.1073969566 * b\n  );\n  const S = Math.cbrt(\n    0.08830246189999998 * r + 0.2817188376 * g + 0.6299787005000002 * b\n  );\n\n  return {\n    l: 0.2104542553 * L + 0.793617785 * M - 0.0040720468 * S,\n    a: 1.9779984951 * L - 2.428592205 * M + 0.4505937099 * S,\n    b: 0.0259040371 * L + 0.7827717662 * M - 0.808675766 * S,\n    alpha,\n  };\n}\n\nfunction convertRgbToOklab(rgb: RgbColor) {\n  'worklet';\n  const lrgbColor = lrgb.convert.fromRgb(rgb);\n  const result = convertLrgbToOklab(lrgbColor);\n  if (rgb.r === rgb.b && rgb.b === rgb.g) {\n    result.a = result.b = 0;\n  }\n  return result;\n}\n\nfunction convertOklabToLrgb({\n  l = 0,\n  a = 0,\n  b = 0,\n  alpha,\n}: LabColor): RgbColor {\n  'worklet';\n  /* eslint-disable @typescript-eslint/no-loss-of-precision */\n  const L = Math.pow(\n    l * 0.99999999845051981432 +\n      0.39633779217376785678 * a +\n      0.21580375806075880339 * b,\n    3\n  );\n  const M = Math.pow(\n    // eslint-disable-next-line @typescript-eslint/no-loss-of-precision\n    l * 1.0000000088817607767 -\n      0.1055613423236563494 * a -\n      0.063854174771705903402 * b,\n    3\n  );\n  const S = Math.pow(\n    // eslint-disable-next-line @typescript-eslint/no-loss-of-precision\n    l * 1.0000000546724109177 -\n      0.089484182094965759684 * a -\n      1.2914855378640917399 * b,\n    3\n  );\n  /* eslint-enable */\n\n  return {\n    r: +4.076741661347994 * L - 3.307711590408193 * M + 0.230969928729428 * S,\n    g:\n      -1.2684380040921763 * L + 2.6097574006633715 * M - 0.3413193963102197 * S,\n    b:\n      -0.004196086541837188 * L -\n      0.7034186144594493 * M +\n      1.7076147009309444 * S,\n    alpha,\n  };\n}\n\nfunction convertOklabToRgb(labColor: LabColor): RgbColor {\n  'worklet';\n  const roundChannel = (channel: number) =>\n    Math.ceil(channel * 100_000) / 100_000;\n\n  const lrgbColor = convertOklabToLrgb(labColor);\n  const rgbColor = lrgb.convert.toRgb(lrgbColor);\n  rgbColor.r = roundChannel(rgbColor.r);\n  rgbColor.g = roundChannel(rgbColor.g);\n  rgbColor.b = roundChannel(rgbColor.b);\n  return rgbColor;\n}\n\nexport default {\n  convert: {\n    fromRgb: convertRgbToOklab,\n    toRgb: convertOklabToRgb,\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}