{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"lightColor\", \"darkColor\"],\n  _excluded2 = [\"style\", \"lightColor\", \"darkColor\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport DefaultText from \"react-native-web/dist/exports/Text\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport DefaultView from \"react-native-web/dist/exports/View\";\nimport Colors from \"../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useThemeColor(props, colorName) {\n  var _useColorScheme;\n  var theme = (_useColorScheme = useColorScheme()) != null ? _useColorScheme : 'light';\n  var colorFromProps = props[theme];\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\nexport function Text(props) {\n  var style = props.style,\n    lightColor = props.lightColor,\n    darkColor = props.darkColor,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var color = useThemeColor({\n    light: lightColor,\n    dark: darkColor\n  }, 'text');\n  return _jsx(DefaultText, _objectSpread({\n    style: [{\n      color: color\n    }, style]\n  }, otherProps));\n}\nexport function View(props) {\n  var style = props.style,\n    lightColor = props.lightColor,\n    darkColor = props.darkColor,\n    otherProps = _objectWithoutProperties(props, _excluded2);\n  var backgroundColor = useThemeColor({\n    light: lightColor,\n    dark: darkColor\n  }, 'background');\n  return _jsx(DefaultView, _objectSpread({\n    style: [{\n      backgroundColor: backgroundColor\n    }, style]\n  }, otherProps));\n}","map":{"version":3,"names":["Colors","jsx","_jsx","useThemeColor","props","colorName","_useColorScheme","theme","useColorScheme","colorFromProps","Text","style","lightColor","darkColor","otherProps","_objectWithoutProperties","_excluded","color","light","dark","DefaultText","_objectSpread","View","_excluded2","backgroundColor","DefaultView"],"sources":["/home/runner/work/DemoReception/DemoReception/example/src/components/Themed.tsx"],"sourcesContent":["/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport { Text as DefaultText, useColorScheme, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme() ?? 'light';\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n"],"mappings":";;;;;;;;;AAOA,OAAOA,MAAM;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAUzC,OAAO,SAASC,aAAaA,CAC3BC,KAAwC,EACxCC,SAA+D,EAC/D;EAAA,IAAAC,eAAA;EACA,IAAMC,KAAK,IAAAD,eAAA,GAAGE,cAAc,CAAC,CAAC,YAAAF,eAAA,GAAI,OAAO;EACzC,IAAMG,cAAc,GAAGL,KAAK,CAACG,KAAK,CAAC;EAEnC,IAAIE,cAAc,EAAE;IAClB,OAAOA,cAAc;EACvB,CAAC,MAAM;IACL,OAAOT,MAAM,CAACO,KAAK,CAAC,CAACF,SAAS,CAAC;EACjC;AACF;AAEA,OAAO,SAASK,IAAIA,CAACN,KAAgB,EAAE;EACrC,IAAQO,KAAK,GAA2CP,KAAK,CAArDO,KAAK;IAAEC,UAAU,GAA+BR,KAAK,CAA9CQ,UAAU;IAAEC,SAAS,GAAoBT,KAAK,CAAlCS,SAAS;IAAKC,UAAU,GAAAC,wBAAA,CAAKX,KAAK,EAAAY,SAAA;EAC7D,IAAMC,KAAK,GAAGd,aAAa,CAAC;IAAEe,KAAK,EAAEN,UAAU;IAAEO,IAAI,EAAEN;EAAU,CAAC,EAAE,MAAM,CAAC;EAE3E,OAAOX,IAAA,CAACkB,WAAW,EAAAC,aAAA;IAACV,KAAK,EAAE,CAAC;MAAEM,KAAK,EAALA;IAAM,CAAC,EAAEN,KAAK;EAAE,GAAKG,UAAU,CAAG,CAAC;AACnE;AAEA,OAAO,SAASQ,IAAIA,CAAClB,KAAgB,EAAE;EACrC,IAAQO,KAAK,GAA2CP,KAAK,CAArDO,KAAK;IAAEC,UAAU,GAA+BR,KAAK,CAA9CQ,UAAU;IAAEC,SAAS,GAAoBT,KAAK,CAAlCS,SAAS;IAAKC,UAAU,GAAAC,wBAAA,CAAKX,KAAK,EAAAmB,UAAA;EAC7D,IAAMC,eAAe,GAAGrB,aAAa,CAAC;IAAEe,KAAK,EAAEN,UAAU;IAAEO,IAAI,EAAEN;EAAU,CAAC,EAAE,YAAY,CAAC;EAE3F,OAAOX,IAAA,CAACuB,WAAW,EAAAJ,aAAA;IAACV,KAAK,EAAE,CAAC;MAAEa,eAAe,EAAfA;IAAgB,CAAC,EAAEb,KAAK;EAAE,GAAKG,UAAU,CAAG,CAAC;AAC7E"},"metadata":{},"sourceType":"module","externalDependencies":[]}