{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport styles from \"./CheckInConfirmationStyles\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Header } from \"../../components/basics/header\";\nimport { HiraginoKakuText } from \"../../components/StyledText\";\nimport { Footer } from \"../../components/basics/footer\";\nimport { Button } from \"../../components/basics/Button\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { colors } from \"../../styles/color\";\nimport Completion from \"../completion/Completion\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { deleteDataFromReception, fetchGenderName, getCountOfReceivedItems, getReceptionId, insertIntoReceptionHistory, insertReceptionData } from \"./CheckInConfirmationService\";\nimport { format } from \"date-fns\";\nimport { SelectReceptionMethodParams } from \"../select-reception-method/SelectReceptionMethodParams\";\nimport { CheckInEditParams } from \"../check-in-edit/CheckInEditParams\";\nimport ExistingLGaPIDDialog from \"../existing-lgap-id-dialog/ExistingLGaPIDDialog\";\nimport { DeviceInfo } from \"../../environments/DeviceInfo\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var CheckInConfirmation = function CheckInConfirmation(_ref) {\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var _ref2 = route.params,\n    checkInConfirmationParams = _ref2.checkInConfirmationParams;\n  var lgapId = checkInConfirmationParams.entrantRecord.originalEntrant.lgapId;\n  var DEVICE_ID = DeviceInfo();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scrollEnabled = _useState4[0],\n    setScrollEnabled = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLgapIdDialogVisible = _useState6[0],\n    setIsLgapIdDialogVisible = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    postCode = _useState8[0],\n    setPostCode = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    formattedDate = _useState10[0],\n    setformattedDate = _useState10[1];\n  var handleCompletion = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var acceptedItemsCount = yield fetchCountOfReceivedItems(checkInConfirmationParams.eventId, lgapId);\n        setIsLgapIdDialogVisible(false);\n        if (acceptedItemsCount > 0) {\n          var クエリ結果_target_reception_ids = yield getReceptionId(checkInConfirmationParams.eventId, lgapId);\n          if (クエリ結果_target_reception_ids.data.length > 0) {\n            try {\n              var receptionIDs = クエリ結果_target_reception_ids.data;\n              var result = yield insertIntoReceptionHistory(checkInConfirmationParams.eventId, receptionIDs);\n              if (result.message == \"success\") {\n                var d = yield deleteDataFromReception(checkInConfirmationParams.eventId, receptionIDs);\n              }\n            } catch (error) {\n              console.error(\"Error:\", error);\n            }\n          }\n        }\n        openCompletionModal();\n      } catch (error) {\n        console.error(\"Error fetching count of received items:\", error);\n      }\n    });\n    return function handleCompletion() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    ActivityLogger.insertInfoLogEntry(checkInConfirmationParams.user, 'CheckInConfirmation', 'useEffect', 'screen open');\n  }, []);\n  useEffect(function () {\n    if (lgapId && checkInConfirmationParams.isScanner) {\n      fetchCountOfReceivedItems(checkInConfirmationParams.eventId, lgapId);\n    }\n    var entrantDateOfBirth = checkInConfirmationParams.entrantRecord.modifiedEntrant.dateOfBirth;\n    var formattedDate;\n    if (entrantDateOfBirth) {\n      formattedDate = format(entrantDateOfBirth, \"yyyy年MM月dd日\");\n    } else {\n      formattedDate = \"Invalid date\";\n    }\n    setformattedDate(formattedDate);\n    var formattedPostCode = checkInConfirmationParams.entrantRecord.modifiedEntrant.postalCode.replace(\"-\", \"\");\n    setPostCode(formattedPostCode);\n    fetchGenderNamebyGenderCode(checkInConfirmationParams.entrantRecord.modifiedEntrant.genderCode);\n  }, [formattedDate, checkInConfirmationParams]);\n  useEffect(function () {\n    if (isModalVisible === true) {\n      var timeOut = setTimeout(function () {\n        closeModal();\n      }, 10000);\n      return function () {\n        return clearTimeout(timeOut);\n      };\n    }\n  });\n  var openCompletionModal = function openCompletionModal() {\n    setModalVisible(true);\n  };\n  var closeModal = function closeModal() {\n    handleReceptionInsert();\n    setModalVisible(false);\n  };\n  var handleEdit = function handleEdit() {\n    var checkInEditParams = new CheckInEditParams();\n    checkInEditParams.user = checkInConfirmationParams.user;\n    checkInEditParams.eventId = checkInConfirmationParams.eventId;\n    checkInEditParams.venueId = checkInConfirmationParams.venueId;\n    checkInEditParams.entrantRecord = checkInConfirmationParams.entrantRecord;\n    checkInEditParams.entrantRecord.originalEntrant = checkInConfirmationParams.entrantRecord.originalEntrant;\n    navigation.navigate(\"CheckInEdit\", {\n      checkInEditParams: checkInEditParams\n    });\n    ActivityLogger.insertInfoLogEntry(checkInConfirmationParams.user, 'CheckInConfirmation', 'handleEdit', 'transition', 'CheckInEdit', checkInEditParams);\n  };\n  var handleSelectReceptionMethod = function handleSelectReceptionMethod() {\n    var selectReceptionMethodParams = new SelectReceptionMethodParams();\n    selectReceptionMethodParams.user = checkInConfirmationParams.user;\n    selectReceptionMethodParams.eventId = checkInConfirmationParams.eventId;\n    selectReceptionMethodParams.venueId = checkInConfirmationParams.venueId;\n    selectReceptionMethodParams.receptionTypeCode = checkInConfirmationParams.entrantRecord.modifiedEntrant.receptionTypeCode;\n    navigation.navigate(\"SelectReceptionMethod\", {\n      selectReceptionMethodParams: selectReceptionMethodParams\n    });\n    ActivityLogger.insertInfoLogEntry(checkInConfirmationParams.user, 'CheckInConfirmation', 'handleSelectReceptionMethod', 'transition', 'SelectReceptionMethod', selectReceptionMethodParams);\n  };\n  var onLayoutHandler = function onLayoutHandler(e) {\n    var height = e.nativeEvent.layout.height;\n    if (height > 400) {\n      setScrollEnabled(true);\n    } else {\n      setScrollEnabled(false);\n    }\n  };\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    genderName = _useState12[0],\n    setGenderName = _useState12[1];\n  var _useState13 = useState(),\n    _useState14 = _slicedToArray(_useState13, 2),\n    message = _useState14[0],\n    setMessage = _useState14[1];\n  var handleReceptionInsert = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var result = yield insertReceptionData(checkInConfirmationParams.eventId, checkInConfirmationParams.venueId, checkInConfirmationParams.user.userId, DEVICE_ID, checkInConfirmationParams.entrantRecord.modifiedEntrant.lgapId, checkInConfirmationParams.entrantRecord.modifiedEntrant.userRank, checkInConfirmationParams.entrantRecord.modifiedEntrant.lastName, checkInConfirmationParams.entrantRecord.modifiedEntrant.firstName, checkInConfirmationParams.entrantRecord.modifiedEntrant.lastNameKana, checkInConfirmationParams.entrantRecord.modifiedEntrant.firstNameKana, checkInConfirmationParams.entrantRecord.modifiedEntrant.dateOfBirth, checkInConfirmationParams.entrantRecord.modifiedEntrant.genderCode, postCode, checkInConfirmationParams.entrantRecord.modifiedEntrant.address, checkInConfirmationParams.entrantRecord.modifiedEntrant.receptionTypeCode);\n        var _message = result.message;\n        if (_message === \"success\") {\n          var selectReceptionMethodParams = new SelectReceptionMethodParams();\n          selectReceptionMethodParams.user = checkInConfirmationParams.user;\n          selectReceptionMethodParams.eventId = checkInConfirmationParams.eventId;\n          selectReceptionMethodParams.venueId = checkInConfirmationParams.venueId;\n          selectReceptionMethodParams.receptionTypeCode = checkInConfirmationParams.entrantRecord.modifiedEntrant.receptionTypeCode;\n          navigation.navigate(\"SelectReceptionMethod\", {\n            selectReceptionMethodParams: selectReceptionMethodParams\n          });\n          ActivityLogger.insertInfoLogEntry(checkInConfirmationParams.user, 'CheckInConfirmation', 'handleReceptionInsert', 'transition', 'SelectReceptionMethod', selectReceptionMethodParams);\n          setMessage(\"Inserted Successfully!!\");\n        } else {\n          setMessage(_message);\n        }\n      } catch (error) {\n        console.error(\"Error from ReceptionCreateFun:\", error);\n      }\n    });\n    return function handleReceptionInsert() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var fetchGenderNamebyGenderCode = function () {\n    var _ref5 = _asyncToGenerator(function* (genderCode) {\n      try {\n        var result = yield fetchGenderName(genderCode);\n        var _message2 = result.message;\n        if (_message2 === \"success\") {\n          setMessage(\"Optained Successfully!!\");\n          setGenderName(result.data[0].name);\n        } else {\n          setMessage(_message2);\n        }\n      } catch (error) {\n        console.error(\"Error from GetGenderNameFun:\", error);\n      }\n    });\n    return function fetchGenderNamebyGenderCode(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var fetchCountOfReceivedItems = function () {\n    var _ref6 = _asyncToGenerator(function* (eventId, lgapId) {\n      try {\n        var クエリ結果_受付済み件数 = yield getCountOfReceivedItems(eventId, lgapId);\n        if (クエリ結果_受付済み件数.data.length > 0) {\n          var count = クエリ結果_受付済み件数.data[0].count;\n          if (count > 0) {\n            setIsLgapIdDialogVisible(true);\n            return count;\n          } else {\n            return 0;\n          }\n        } else {\n          console.warn(\"No data received from getCountOfReceivedItems\");\n          return 0;\n        }\n      } catch (error) {\n        console.error(\"Error from fetchCountOfReceivedItems:\", error);\n        return 0;\n      }\n    });\n    return function fetchCountOfReceivedItems(_x2, _x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handleAccept = function handleAccept() {\n    setIsLgapIdDialogVisible(false);\n  };\n  var handleCancel = function handleCancel() {\n    var selectReceptionMethodParams = new SelectReceptionMethodParams();\n    selectReceptionMethodParams.user = checkInConfirmationParams.user;\n    selectReceptionMethodParams.eventId = checkInConfirmationParams.eventId;\n    selectReceptionMethodParams.venueId = checkInConfirmationParams.venueId;\n    selectReceptionMethodParams.receptionTypeCode = checkInConfirmationParams.entrantRecord.modifiedEntrant.receptionTypeCode;\n    navigation.navigate(\"SelectReceptionMethod\", {\n      selectReceptionMethodParams: selectReceptionMethodParams\n    });\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.mainContainer,\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\"\n    }), _jsx(Header, {\n      titleName: \"\\u53D7\\u4ED8\\u5185\\u5BB9\\u78BA\\u8A8D\",\n      buttonName: \"\\u53D7\\u4ED8\\u3092\\u3084\\u3081\\u308B\",\n      onPress: handleSelectReceptionMethod\n    }), _jsxs(ScrollView, {\n      scrollEnabled: scrollEnabled,\n      children: [_jsxs(View, {\n        style: styles.bodyContainer,\n        children: [_jsx(View, {\n          style: styles.innerMainTitle,\n          children: _jsx(HiraginoKakuText, {\n            style: styles.innerMainTitleText,\n            children: \"\\u3053\\u306E\\u5185\\u5BB9\\u3067\\u53D7\\u4ED8\\u3057\\u307E\\u3059\\u304B\\uFF1F\"\n          })\n        }), _jsxs(View, {\n          style: styles.innerBodyContainer,\n          onLayout: onLayoutHandler,\n          children: [_jsxs(View, {\n            style: styles.bodyTitle,\n            children: [_jsx(HiraginoKakuText, {\n              style: styles.bodyTitleText,\n              children: \"\\u53D7\\u4ED8\\u5185\\u5BB9\"\n            }), _jsx(View, {\n              style: styles.buttonContainer,\n              children: _jsx(Button, {\n                text: \"\\u5185\\u5BB9\\u3092\\u4FEE\\u6B63\\u3059\\u308B\",\n                type: \"ButtonMSecondary\",\n                style: styles.btnModify,\n                icon: _jsx(MaterialIcons, {\n                  name: \"mode-edit\",\n                  size: 24,\n                  color: colors.primary,\n                  style: styles.iconStyle\n                }),\n                iconPosition: \"behind\",\n                onPress: handleEdit\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.rowGroup,\n            children: [_jsxs(View, {\n              style: styles.row,\n              children: [_jsxs(View, {\n                style: styles.rowContent,\n                children: [_jsx(View, {\n                  style: styles.firstContent,\n                  children: _jsx(HiraginoKakuText, {\n                    style: styles.innerBodyBoldText,\n                    children: \"\\u304A\\u540D\\u524D\"\n                  })\n                }), _jsx(View, {\n                  style: !checkInConfirmationParams.entrantRecord.modifiedFlags.isNameModified ? styles.secondContent : styles.secondContentCorrected,\n                  children: _jsxs(HiraginoKakuText, {\n                    style: styles.innerBodyText,\n                    normal: true,\n                    children: [checkInConfirmationParams.entrantRecord.modifiedEntrant.lastName, \"　\", checkInConfirmationParams.entrantRecord.modifiedEntrant.firstName]\n                  })\n                })]\n              }), checkInConfirmationParams.entrantRecord.modifiedFlags.isNameModified && _jsx(View, {\n                style: styles.correctedBadge,\n                children: _jsx(HiraginoKakuText, {\n                  style: styles.correctedText,\n                  children: \"\\u4FEE\\u6B63\\u6E08\"\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.row,\n              children: [_jsxs(View, {\n                style: styles.rowContent,\n                children: [_jsx(View, {\n                  style: styles.firstContent,\n                  children: _jsx(HiraginoKakuText, {\n                    style: styles.innerBodyBoldText,\n                    children: \"\\u304A\\u540D\\u524D\\uFF08\\u30AB\\u30CA\\uFF09\"\n                  })\n                }), _jsx(View, {\n                  style: !checkInConfirmationParams.entrantRecord.modifiedFlags.isKanaNameModified ? styles.secondContent : styles.secondContentCorrected,\n                  children: _jsxs(HiraginoKakuText, {\n                    style: styles.innerBodyText,\n                    normal: true,\n                    children: [checkInConfirmationParams.entrantRecord.modifiedEntrant.lastNameKana, \"　\", checkInConfirmationParams.entrantRecord.modifiedEntrant.firstNameKana]\n                  })\n                })]\n              }), checkInConfirmationParams.entrantRecord.modifiedFlags.isKanaNameModified && _jsx(View, {\n                style: styles.correctedBadge,\n                children: _jsx(HiraginoKakuText, {\n                  style: styles.correctedText,\n                  children: \"\\u4FEE\\u6B63\\u6E08\"\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.row,\n              children: [_jsxs(View, {\n                style: styles.rowContent,\n                children: [_jsx(View, {\n                  style: styles.firstContent,\n                  children: _jsx(HiraginoKakuText, {\n                    style: styles.innerBodyBoldText,\n                    children: \"\\u751F\\u5E74\\u6708\\u65E5\"\n                  })\n                }), _jsx(View, {\n                  style: !checkInConfirmationParams.entrantRecord.modifiedFlags.isDateOfBirthModified ? styles.secondContent : styles.secondContentCorrected,\n                  children: _jsx(HiraginoKakuText, {\n                    style: styles.innerBodyText,\n                    normal: true,\n                    children: formattedDate\n                  })\n                })]\n              }), checkInConfirmationParams.entrantRecord.modifiedFlags.isDateOfBirthModified && _jsx(View, {\n                style: styles.correctedBadge,\n                children: _jsx(HiraginoKakuText, {\n                  style: styles.correctedText,\n                  children: \"\\u4FEE\\u6B63\\u6E08\"\n                })\n              })]\n            }), checkInConfirmationParams.entrantRecord.modifiedEntrant.genderCode != \"0\" && _jsxs(View, {\n              style: styles.row,\n              children: [_jsxs(View, {\n                style: styles.rowContent,\n                children: [_jsx(View, {\n                  style: styles.firstContent,\n                  children: _jsx(HiraginoKakuText, {\n                    style: styles.innerBodyBoldText,\n                    children: \"\\u6027\\u5225\"\n                  })\n                }), _jsx(View, {\n                  style: !checkInConfirmationParams.entrantRecord.modifiedFlags.isGenderModified ? styles.secondContent : styles.secondContentCorrected,\n                  children: _jsx(HiraginoKakuText, {\n                    style: styles.innerBodyText,\n                    normal: true,\n                    children: genderName\n                  })\n                })]\n              }), checkInConfirmationParams.entrantRecord.modifiedFlags.isGenderModified && _jsx(View, {\n                style: styles.correctedBadge,\n                children: _jsx(HiraginoKakuText, {\n                  style: styles.correctedText,\n                  children: \"\\u4FEE\\u6B63\\u6E08\"\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.row,\n              children: [_jsxs(View, {\n                style: styles.rowContent,\n                children: [_jsx(View, {\n                  style: styles.firstContent,\n                  children: _jsx(HiraginoKakuText, {\n                    style: styles.innerBodyBoldText,\n                    children: \"\\u90F5\\u4FBF\\u756A\\u53F7\"\n                  })\n                }), _jsx(View, {\n                  style: !checkInConfirmationParams.entrantRecord.modifiedFlags.isPostalCodeModified ? styles.secondContent : styles.secondContentCorrected,\n                  children: _jsx(HiraginoKakuText, {\n                    style: styles.innerBodyText,\n                    normal: true,\n                    children: checkInConfirmationParams.entrantRecord.modifiedEntrant.postalCode\n                  })\n                })]\n              }), checkInConfirmationParams.entrantRecord.modifiedFlags.isPostalCodeModified && _jsx(View, {\n                style: styles.correctedBadge,\n                children: _jsx(HiraginoKakuText, {\n                  style: styles.correctedText,\n                  children: \"\\u4FEE\\u6B63\\u6E08\"\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.rowAddress,\n              children: [_jsxs(View, {\n                style: styles.rowContent,\n                children: [_jsx(View, {\n                  style: styles.firstContent,\n                  children: _jsx(HiraginoKakuText, {\n                    style: styles.innerBodyBoldText,\n                    children: \"\\u4F4F\\u6240\"\n                  })\n                }), _jsx(View, {\n                  style: !checkInConfirmationParams.entrantRecord.modifiedFlags.isAddressModified ? styles.secondContentAddress : styles.secondContentAddressCorrected,\n                  children: _jsx(HiraginoKakuText, {\n                    style: styles.innerBodyText,\n                    normal: true,\n                    children: checkInConfirmationParams.entrantRecord.modifiedEntrant.address\n                  })\n                })]\n              }), checkInConfirmationParams.entrantRecord.modifiedFlags.isAddressModified && _jsx(View, {\n                style: styles.correctedBadge,\n                children: _jsx(HiraginoKakuText, {\n                  style: styles.correctedText,\n                  children: \"\\u4FEE\\u6B63\\u6E08\"\n                })\n              })]\n            })]\n          })]\n        })]\n      }), isLgapIdDialogVisible && _jsx(ExistingLGaPIDDialog, {\n        onAccept: handleAccept,\n        onCancel: handleCancel\n      })]\n    }), _jsx(Footer, {\n      rightButtonText: \"\\u53D7\\u4ED8\\u3059\\u308B\",\n      hasPreviousButton: false,\n      showNextIcon: false,\n      onPressNext: handleCompletion\n    }), isModalVisible && _jsx(Completion, {\n      closeModal: closeModal\n    })]\n  });\n};\nexport default CheckInConfirmation;","map":{"version":3,"names":["React","useEffect","useState","SafeAreaView","View","ScrollView","styles","StatusBar","Header","HiraginoKakuText","Footer","Button","MaterialIcons","colors","Completion","useRoute","deleteDataFromReception","fetchGenderName","getCountOfReceivedItems","getReceptionId","insertIntoReceptionHistory","insertReceptionData","format","SelectReceptionMethodParams","CheckInEditParams","ExistingLGaPIDDialog","DeviceInfo","ActivityLogger","jsx","_jsx","jsxs","_jsxs","CheckInConfirmation","_ref","navigation","route","_ref2","params","checkInConfirmationParams","lgapId","entrantRecord","originalEntrant","DEVICE_ID","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","_useState3","_useState4","scrollEnabled","setScrollEnabled","_useState5","_useState6","isLgapIdDialogVisible","setIsLgapIdDialogVisible","_useState7","_useState8","postCode","setPostCode","_useState9","_useState10","formattedDate","setformattedDate","handleCompletion","_ref3","_asyncToGenerator","acceptedItemsCount","fetchCountOfReceivedItems","eventId","クエリ結果_target_reception_ids","data","length","receptionIDs","result","message","d","error","console","openCompletionModal","apply","arguments","insertInfoLogEntry","user","isScanner","entrantDateOfBirth","modifiedEntrant","dateOfBirth","formattedPostCode","postalCode","replace","fetchGenderNamebyGenderCode","genderCode","timeOut","setTimeout","closeModal","clearTimeout","handleReceptionInsert","handleEdit","checkInEditParams","venueId","navigate","handleSelectReceptionMethod","selectReceptionMethodParams","receptionTypeCode","onLayoutHandler","e","height","nativeEvent","layout","_useState11","_useState12","genderName","setGenderName","_useState13","_useState14","setMessage","_ref4","userId","userRank","lastName","firstName","lastNameKana","firstNameKana","address","_ref5","name","_x","_ref6","クエリ結果_受付済み件数","count","warn","_x2","_x3","handleAccept","handleCancel","style","mainContainer","children","barStyle","titleName","buttonName","onPress","bodyContainer","innerMainTitle","innerMainTitleText","innerBodyContainer","onLayout","bodyTitle","bodyTitleText","buttonContainer","text","type","btnModify","icon","size","color","primary","iconStyle","iconPosition","rowGroup","row","rowContent","firstContent","innerBodyBoldText","modifiedFlags","isNameModified","secondContent","secondContentCorrected","innerBodyText","normal","correctedBadge","correctedText","isKanaNameModified","isDateOfBirthModified","isGenderModified","isPostalCodeModified","rowAddress","isAddressModified","secondContentAddress","secondContentAddressCorrected","onAccept","onCancel","rightButtonText","hasPreviousButton","showNextIcon","onPressNext"],"sources":["/home/runner/work/DemoReception/DemoReception/example/src/screens/check-in-confirmation/CheckInConfirmation.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { SafeAreaView, View, ScrollView } from \"react-native\";\nimport styles from \"./CheckInConfirmationStyles\";\nimport { StatusBar } from \"react-native\";\nimport { Header } from \"../../components/basics/header\";\nimport { HiraginoKakuText } from \"../../components/StyledText\";\nimport { Footer } from \"../../components/basics/footer\";\nimport { Button } from \"../../components/basics/Button\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { colors } from \"../../styles/color\";\nimport Completion from \"../completion/Completion\";\nimport { NavigationProp, useRoute } from \"@react-navigation/native\";\nimport {\n  deleteDataFromReception,\n  fetchGenderName,\n  getCountOfReceivedItems,\n  getReceptionId,\n  insertIntoReceptionHistory,\n  insertReceptionData,\n} from \"./CheckInConfirmationService\";\nimport { format } from \"date-fns\";\nimport { SelectReceptionMethodParams } from \"../select-reception-method/SelectReceptionMethodParams\";\nimport { CheckInConfirmationParams } from \"./CheckInConfirmationParams\";\nimport { CheckInEditParams } from \"../check-in-edit/CheckInEditParams\";\nimport ExistingLGaPIDDialog from \"../existing-lgap-id-dialog/ExistingLGaPIDDialog\";\nimport { DeviceInfo } from \"../../environments/DeviceInfo\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\n\ntype Props = {\n  navigation: NavigationProp<any, any>;\n};\n\ntype Params = {\n  checkInConfirmationParams: CheckInConfirmationParams;\n};\n\nexport const CheckInConfirmation = ({ navigation }: Props) => {\n  const route = useRoute();\n  const { checkInConfirmationParams } = route.params as Params;\n  const lgapId = checkInConfirmationParams.entrantRecord.originalEntrant.lgapId;\n  const DEVICE_ID = DeviceInfo();\n\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [scrollEnabled, setScrollEnabled] = useState(false);\n  const [isLgapIdDialogVisible, setIsLgapIdDialogVisible] = useState(false);\n  const [postCode, setPostCode] = useState(\"\");\n  const [formattedDate, setformattedDate] = useState(\"\");\n\n  const handleCompletion = async () => {\n    try {\n      const acceptedItemsCount = await fetchCountOfReceivedItems(\n        checkInConfirmationParams.eventId,\n        lgapId\n      );\n      setIsLgapIdDialogVisible(false);\n\n      if (acceptedItemsCount > 0) {\n        const クエリ結果_target_reception_ids = await getReceptionId(\n          checkInConfirmationParams.eventId,\n          lgapId\n        );\n\n        if (クエリ結果_target_reception_ids.data.length > 0) {\n          try {\n            const receptionIDs = クエリ結果_target_reception_ids.data;\n            const result = await insertIntoReceptionHistory(\n              checkInConfirmationParams.eventId,\n              receptionIDs\n            );\n            if (result.message == \"success\") {\n              const d = await deleteDataFromReception(\n                checkInConfirmationParams.eventId,\n                receptionIDs\n              );\n            }\n          } catch (error) {\n            console.error(\"Error:\", error);\n          }\n        }\n      }\n      openCompletionModal();\n    } catch (error) {\n      console.error(\"Error fetching count of received items:\", error);\n    }\n  };\n\n  useEffect(() => {\n    ActivityLogger.insertInfoLogEntry(checkInConfirmationParams.user, 'CheckInConfirmation', 'useEffect', 'screen open');\n  }, []);\n\n  useEffect(() => {\n    //LGaP_ID\n    if (lgapId && checkInConfirmationParams.isScanner) {\n      fetchCountOfReceivedItems(checkInConfirmationParams.eventId, lgapId);\n    }\n    const entrantDateOfBirth =\n      checkInConfirmationParams.entrantRecord.modifiedEntrant.dateOfBirth;\n    let formattedDate: string;\n\n    if (entrantDateOfBirth) {\n      formattedDate = format(entrantDateOfBirth, \"yyyy年MM月dd日\");\n    } else {\n      formattedDate = \"Invalid date\";\n    }\n\n    setformattedDate(formattedDate);\n\n    const formattedPostCode =\n      checkInConfirmationParams.entrantRecord.modifiedEntrant.postalCode.replace(\n        \"-\",\n        \"\"\n      );\n    setPostCode(formattedPostCode);\n    // get Gender\n    fetchGenderNamebyGenderCode(\n      checkInConfirmationParams.entrantRecord.modifiedEntrant.genderCode\n    );\n  }, [formattedDate, checkInConfirmationParams]);\n  useEffect(() => {\n    if (isModalVisible === true) {\n      let timeOut = setTimeout(() => {\n        closeModal();\n      }, 10000);\n      return () => clearTimeout(timeOut);\n    }\n  });\n\n  const openCompletionModal = () => {\n    setModalVisible(true);\n  };\n\n  const closeModal = () => {\n    handleReceptionInsert();\n    setModalVisible(false);\n  };\n\n  const handleEdit = () => {\n    const checkInEditParams = new CheckInEditParams();\n    checkInEditParams.user = checkInConfirmationParams.user;\n    checkInEditParams.eventId = checkInConfirmationParams.eventId;\n    checkInEditParams.venueId = checkInConfirmationParams.venueId;\n    checkInEditParams.entrantRecord = checkInConfirmationParams.entrantRecord;\n    checkInEditParams.entrantRecord.originalEntrant =\n      checkInConfirmationParams.entrantRecord.originalEntrant;\n\n    navigation.navigate(\"CheckInEdit\", {\n      checkInEditParams,\n    });\n    ActivityLogger.insertInfoLogEntry(checkInConfirmationParams.user, 'CheckInConfirmation', 'handleEdit', 'transition', 'CheckInEdit', checkInEditParams);    \n  };\n\n  const handleSelectReceptionMethod = () => {\n    const selectReceptionMethodParams = new SelectReceptionMethodParams();\n    selectReceptionMethodParams.user = checkInConfirmationParams.user;\n    selectReceptionMethodParams.eventId = checkInConfirmationParams.eventId;\n    selectReceptionMethodParams.venueId = checkInConfirmationParams.venueId;\n    selectReceptionMethodParams.receptionTypeCode =\n      checkInConfirmationParams.entrantRecord.modifiedEntrant.receptionTypeCode;\n\n    navigation.navigate(\"SelectReceptionMethod\", {\n      selectReceptionMethodParams,\n    });\n    ActivityLogger.insertInfoLogEntry(checkInConfirmationParams.user, 'CheckInConfirmation', 'handleSelectReceptionMethod', 'transition', 'SelectReceptionMethod', selectReceptionMethodParams);\n  };\n\n  const onLayoutHandler = (e: any) => {\n    var { height } = e.nativeEvent.layout;\n\n    if (height > 400) {\n      setScrollEnabled(true);\n    } else {\n      setScrollEnabled(false);\n    }\n  };\n  //AWS\n  const [genderName, setGenderName] = useState<string>();\n  const [message, setMessage] = useState<string>();\n\n  // INSERTION RECEPTION\n  const handleReceptionInsert = async () => {\n    try {\n      const result = await insertReceptionData(\n        checkInConfirmationParams.eventId,\n        checkInConfirmationParams.venueId,\n        checkInConfirmationParams.user.userId,\n        DEVICE_ID, // Temp acceptedTerminalId\n        checkInConfirmationParams.entrantRecord.modifiedEntrant.lgapId,\n        checkInConfirmationParams.entrantRecord.modifiedEntrant.userRank,\n        checkInConfirmationParams.entrantRecord.modifiedEntrant.lastName,\n        checkInConfirmationParams.entrantRecord.modifiedEntrant.firstName,\n        checkInConfirmationParams.entrantRecord.modifiedEntrant.lastNameKana,\n        checkInConfirmationParams.entrantRecord.modifiedEntrant.firstNameKana,\n        checkInConfirmationParams.entrantRecord.modifiedEntrant.dateOfBirth,\n        checkInConfirmationParams.entrantRecord.modifiedEntrant.genderCode,\n        postCode,\n        checkInConfirmationParams.entrantRecord.modifiedEntrant.address,\n        checkInConfirmationParams.entrantRecord.modifiedEntrant\n          .receptionTypeCode\n      );\n\n      const message = result.message;\n      if (message === \"success\") {\n        const selectReceptionMethodParams = new SelectReceptionMethodParams();\n        selectReceptionMethodParams.user = checkInConfirmationParams.user;\n        selectReceptionMethodParams.eventId = checkInConfirmationParams.eventId;\n        selectReceptionMethodParams.venueId = checkInConfirmationParams.venueId;\n        selectReceptionMethodParams.receptionTypeCode =\n          checkInConfirmationParams.entrantRecord.modifiedEntrant.receptionTypeCode;\n        navigation.navigate(\"SelectReceptionMethod\", {\n          selectReceptionMethodParams,\n        });\n        ActivityLogger.insertInfoLogEntry(checkInConfirmationParams.user, 'CheckInConfirmation', 'handleReceptionInsert', 'transition', 'SelectReceptionMethod', selectReceptionMethodParams);\n        setMessage(\"Inserted Successfully!!\");\n      } else {\n        setMessage(message);\n      }\n    } catch (error) {\n      console.error(\"Error from ReceptionCreateFun:\", error);\n    }\n  };\n  const fetchGenderNamebyGenderCode = async (genderCode: string) => {\n    try {\n      const result = await fetchGenderName(genderCode);\n      const message = result.message;\n      if (message === \"success\") {\n        setMessage(\"Optained Successfully!!\");\n        setGenderName(result.data[0].name);\n      } else {\n        setMessage(message);\n      }\n    } catch (error) {\n      console.error(\"Error from GetGenderNameFun:\", error);\n    }\n  };\n\n  // LGaP_ID\n  const fetchCountOfReceivedItems = async (eventId: number, lgapId: string) => {\n    try {\n      const クエリ結果_受付済み件数 = await getCountOfReceivedItems(\n        eventId,\n        lgapId\n      );\n\n      if (クエリ結果_受付済み件数.data.length > 0) {\n        const count = クエリ結果_受付済み件数.data[0].count;\n\n        if (count > 0) {\n          setIsLgapIdDialogVisible(true);\n          return count;\n        } else {\n          return 0;\n        }\n      } else {\n        console.warn(\"No data received from getCountOfReceivedItems\");\n        return 0;\n      }\n    } catch (error) {\n      console.error(\"Error from fetchCountOfReceivedItems:\", error);\n      return 0;\n    }\n  };\n\n  const handleAccept = () => {\n    setIsLgapIdDialogVisible(false);\n  };\n\n  const handleCancel = () => {\n    const selectReceptionMethodParams = new SelectReceptionMethodParams();\n    selectReceptionMethodParams.user = checkInConfirmationParams.user;\n    selectReceptionMethodParams.eventId = checkInConfirmationParams.eventId;\n    selectReceptionMethodParams.venueId = checkInConfirmationParams.venueId;\n    selectReceptionMethodParams.receptionTypeCode =\n      checkInConfirmationParams.entrantRecord.modifiedEntrant.receptionTypeCode;\n\n    navigation.navigate(\"SelectReceptionMethod\", {\n      selectReceptionMethodParams,\n    });\n  };\n\n  return (\n    <SafeAreaView style={styles.mainContainer}>\n      <StatusBar barStyle=\"dark-content\"></StatusBar>\n      <Header\n        titleName=\"受付内容確認\"\n        buttonName=\"受付をやめる\"\n        onPress={handleSelectReceptionMethod}\n      ></Header>\n      <ScrollView scrollEnabled={scrollEnabled}>\n        <View style={styles.bodyContainer}>\n          <View style={styles.innerMainTitle}>\n            <HiraginoKakuText style={styles.innerMainTitleText}>\n              この内容で受付しますか？\n            </HiraginoKakuText>\n          </View>\n\n          <View style={styles.innerBodyContainer} onLayout={onLayoutHandler}>\n            <View style={styles.bodyTitle}>\n              <HiraginoKakuText style={styles.bodyTitleText}>\n                受付内容\n              </HiraginoKakuText>\n              <View style={styles.buttonContainer}>\n                <Button\n                  text=\"内容を修正する\"\n                  type=\"ButtonMSecondary\"\n                  style={styles.btnModify}\n                  icon={\n                    <MaterialIcons\n                      name=\"mode-edit\"\n                      size={24}\n                      color={colors.primary}\n                      style={styles.iconStyle}\n                    />\n                  }\n                  iconPosition=\"behind\"\n                  onPress={handleEdit}\n                ></Button>\n              </View>\n            </View>\n            <View style={styles.rowGroup}>\n              <View style={styles.row}>\n                <View style={styles.rowContent}>\n                  <View style={styles.firstContent}>\n                    <HiraginoKakuText style={styles.innerBodyBoldText}>\n                      お名前\n                    </HiraginoKakuText>\n                  </View>\n                  <View\n                    style={\n                      !checkInConfirmationParams.entrantRecord.modifiedFlags\n                        .isNameModified\n                        ? styles.secondContent\n                        : styles.secondContentCorrected\n                    }\n                  >\n                    <HiraginoKakuText style={styles.innerBodyText} normal>\n                      {\n                        checkInConfirmationParams.entrantRecord.modifiedEntrant\n                          .lastName\n                      }\n                      {\"　\"}\n                      {\n                        checkInConfirmationParams.entrantRecord.modifiedEntrant\n                          .firstName\n                      }\n                    </HiraginoKakuText>\n                  </View>\n                </View>\n                {checkInConfirmationParams.entrantRecord.modifiedFlags\n                  .isNameModified && (\n                  <View style={styles.correctedBadge}>\n                    <HiraginoKakuText style={styles.correctedText}>\n                      修正済\n                    </HiraginoKakuText>\n                  </View>\n                )}\n              </View>\n              <View style={styles.row}>\n                <View style={styles.rowContent}>\n                  <View style={styles.firstContent}>\n                    <HiraginoKakuText style={styles.innerBodyBoldText}>\n                      お名前（カナ）\n                    </HiraginoKakuText>\n                  </View>\n                  <View\n                    style={\n                      !checkInConfirmationParams.entrantRecord.modifiedFlags\n                        .isKanaNameModified\n                        ? styles.secondContent\n                        : styles.secondContentCorrected\n                    }\n                  >\n                    <HiraginoKakuText style={styles.innerBodyText} normal>\n                      {\n                        checkInConfirmationParams.entrantRecord.modifiedEntrant\n                          .lastNameKana\n                      }\n                      {\"　\"}\n                      {\n                        checkInConfirmationParams.entrantRecord.modifiedEntrant\n                          .firstNameKana\n                      }\n                    </HiraginoKakuText>\n                  </View>\n                </View>\n                {checkInConfirmationParams.entrantRecord.modifiedFlags\n                  .isKanaNameModified && (\n                  <View style={styles.correctedBadge}>\n                    <HiraginoKakuText style={styles.correctedText}>\n                      修正済\n                    </HiraginoKakuText>\n                  </View>\n                )}\n              </View>\n              <View style={styles.row}>\n                <View style={styles.rowContent}>\n                  <View style={styles.firstContent}>\n                    <HiraginoKakuText style={styles.innerBodyBoldText}>\n                      生年月日\n                    </HiraginoKakuText>\n                  </View>\n                  <View\n                    style={\n                      !checkInConfirmationParams.entrantRecord.modifiedFlags\n                        .isDateOfBirthModified\n                        ? styles.secondContent\n                        : styles.secondContentCorrected\n                    }\n                  >\n                    <HiraginoKakuText style={styles.innerBodyText} normal>\n                      {formattedDate}\n                    </HiraginoKakuText>\n                  </View>\n                </View>\n                {checkInConfirmationParams.entrantRecord.modifiedFlags\n                  .isDateOfBirthModified && (\n                  <View style={styles.correctedBadge}>\n                    <HiraginoKakuText style={styles.correctedText}>\n                      修正済\n                    </HiraginoKakuText>\n                  </View>\n                )}\n              </View>\n              {/* // 性別(Female/male/other) is optional. */}\n              {checkInConfirmationParams.entrantRecord.modifiedEntrant\n                .genderCode != \"0\" && (\n                <View style={styles.row}>\n                  <View style={styles.rowContent}>\n                    <View style={styles.firstContent}>\n                      <HiraginoKakuText style={styles.innerBodyBoldText}>\n                        性別\n                      </HiraginoKakuText>\n                    </View>\n                    <View\n                      style={\n                        !checkInConfirmationParams.entrantRecord.modifiedFlags\n                          .isGenderModified\n                          ? styles.secondContent\n                          : styles.secondContentCorrected\n                      }\n                    >\n                      <HiraginoKakuText style={styles.innerBodyText} normal>\n                        {genderName}\n                      </HiraginoKakuText>\n                    </View>\n                  </View>\n                  {checkInConfirmationParams.entrantRecord.modifiedFlags\n                    .isGenderModified && (\n                    <View style={styles.correctedBadge}>\n                      <HiraginoKakuText style={styles.correctedText}>\n                        修正済\n                      </HiraginoKakuText>\n                    </View>\n                  )}\n                </View>\n              )}\n\n              <View style={styles.row}>\n                <View style={styles.rowContent}>\n                  <View style={styles.firstContent}>\n                    <HiraginoKakuText style={styles.innerBodyBoldText}>\n                      郵便番号\n                    </HiraginoKakuText>\n                  </View>\n                  <View\n                    style={\n                      !checkInConfirmationParams.entrantRecord.modifiedFlags\n                        .isPostalCodeModified\n                        ? styles.secondContent\n                        : styles.secondContentCorrected\n                    }\n                  >\n                    <HiraginoKakuText style={styles.innerBodyText} normal>\n                      {\n                        checkInConfirmationParams.entrantRecord.modifiedEntrant\n                          .postalCode\n                      }\n                    </HiraginoKakuText>\n                  </View>\n                </View>\n                {checkInConfirmationParams.entrantRecord.modifiedFlags\n                  .isPostalCodeModified && (\n                  <View style={styles.correctedBadge}>\n                    <HiraginoKakuText style={styles.correctedText}>\n                      修正済\n                    </HiraginoKakuText>\n                  </View>\n                )}\n              </View>\n              <View style={styles.rowAddress}>\n                <View style={styles.rowContent}>\n                  <View style={styles.firstContent}>\n                    <HiraginoKakuText style={styles.innerBodyBoldText}>\n                      住所\n                    </HiraginoKakuText>\n                  </View>\n                  <View\n                    style={\n                      !checkInConfirmationParams.entrantRecord.modifiedFlags\n                        .isAddressModified\n                        ? styles.secondContentAddress\n                        : styles.secondContentAddressCorrected\n                    }\n                  >\n                    <HiraginoKakuText style={styles.innerBodyText} normal>\n                      {\n                        checkInConfirmationParams.entrantRecord.modifiedEntrant\n                          .address\n                      }\n                    </HiraginoKakuText>\n                  </View>\n                </View>\n                {checkInConfirmationParams.entrantRecord.modifiedFlags\n                  .isAddressModified && (\n                  <View style={styles.correctedBadge}>\n                    <HiraginoKakuText style={styles.correctedText}>\n                      修正済\n                    </HiraginoKakuText>\n                  </View>\n                )}\n              </View>\n            </View>\n          </View>\n        </View>\n        {isLgapIdDialogVisible && (\n          <ExistingLGaPIDDialog\n            onAccept={handleAccept}\n            onCancel={handleCancel}\n          />\n        )}\n      </ScrollView>\n      <Footer\n        rightButtonText=\"受付する\"\n        hasPreviousButton={false}\n        showNextIcon={false}\n        onPressNext={handleCompletion}\n      ></Footer>\n      {isModalVisible && <Completion closeModal={closeModal} />}\n    </SafeAreaView>\n  );\n};\n\nexport default CheckInConfirmation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}