{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Children, Component, createContext, useEffect, useRef } from 'react';\nimport { setShouldAnimateExitingForTag } from \"../core.js\";\nimport { isReact19 } from \"../PlatformChecker.js\";\nimport { findNodeHandle } from \"../platformFunctions/findNodeHandle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar IS_REACT_19 = isReact19();\nexport var SkipEnteringContext = createContext(null);\nfunction SkipEntering(props) {\n  var skipValueRef = useRef(props.shouldSkip);\n  useEffect(function () {\n    skipValueRef.current = false;\n  }, [skipValueRef]);\n  var Provider = IS_REACT_19 ? SkipEnteringContext : SkipEnteringContext.Provider;\n  return _jsx(Provider, {\n    value: skipValueRef,\n    children: props.children\n  });\n}\nexport var LayoutAnimationConfig = function (_Component) {\n  _inherits(LayoutAnimationConfig, _Component);\n  var _super = _createSuper(LayoutAnimationConfig);\n  function LayoutAnimationConfig() {\n    _classCallCheck(this, LayoutAnimationConfig);\n    return _super.apply(this, arguments);\n  }\n  _createClass(LayoutAnimationConfig, [{\n    key: \"getMaybeWrappedChildren\",\n    value: function getMaybeWrappedChildren() {\n      return Children.count(this.props.children) > 1 && this.props.skipExiting ? Children.map(this.props.children, function (child) {\n        return _jsx(LayoutAnimationConfig, {\n          skipExiting: true,\n          children: child\n        });\n      }) : this.props.children;\n    }\n  }, {\n    key: \"setShouldAnimateExiting\",\n    value: function setShouldAnimateExiting() {\n      if (Children.count(this.props.children) === 1) {\n        var tag = findNodeHandle(this);\n        if (tag) {\n          setShouldAnimateExitingForTag(tag, !this.props.skipExiting);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.skipExiting !== undefined) {\n        this.setShouldAnimateExiting();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.getMaybeWrappedChildren();\n      if (this.props.skipEntering === undefined) {\n        return children;\n      }\n      return _jsx(SkipEntering, {\n        shouldSkip: this.props.skipEntering,\n        children: children\n      });\n    }\n  }]);\n  return LayoutAnimationConfig;\n}(Component);","map":{"version":3,"names":["_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","React","Children","Component","createContext","useEffect","useRef","setShouldAnimateExitingForTag","isReact19","findNodeHandle","jsx","_jsx","IS_REACT_19","SkipEnteringContext","SkipEntering","props","skipValueRef","shouldSkip","current","Provider","value","children","LayoutAnimationConfig","_Component","_super","key","getMaybeWrappedChildren","count","skipExiting","map","child","setShouldAnimateExiting","tag","componentWillUnmount","undefined","render","skipEntering"],"sources":["/home/runner/work/DemoReception/DemoReception/example/node_modules/react-native-reanimated/src/component/LayoutAnimationConfig.tsx"],"sourcesContent":["'use strict';\nimport type { ReactNode } from 'react';\nimport React, {\n  Children,\n  Component,\n  createContext,\n  useEffect,\n  useRef,\n} from 'react';\n\nimport { setShouldAnimateExitingForTag } from '../core';\nimport { isReact19 } from '../PlatformChecker';\nimport { findNodeHandle } from '../platformFunctions/findNodeHandle';\n\nconst IS_REACT_19 = isReact19();\n\nexport const SkipEnteringContext =\n  createContext<React.MutableRefObject<boolean> | null>(null);\n\n// skipEntering - don't animate entering of children on wrapper mount\n// skipExiting - don't animate exiting of children on wrapper unmount\ninterface LayoutAnimationConfigProps {\n  skipEntering?: boolean;\n  skipExiting?: boolean;\n  children: ReactNode;\n}\n\nfunction SkipEntering(props: { shouldSkip: boolean; children: ReactNode }) {\n  const skipValueRef = useRef(props.shouldSkip);\n\n  useEffect(() => {\n    skipValueRef.current = false;\n  }, [skipValueRef]);\n\n  const Provider = IS_REACT_19\n    ? SkipEnteringContext\n    : SkipEnteringContext.Provider;\n\n  return <Provider value={skipValueRef}>{props.children}</Provider>;\n}\n\n// skipExiting (unlike skipEntering) cannot be done by conditionally\n// configuring the animation in `createAnimatedComponent`, since at this stage\n// we don't know if the wrapper is going to be unmounted or not.\n// That's why we need to pass the skipExiting flag to the native side\n// when the wrapper is unmounted to prevent the animation.\n// Since `ReactNode` can be a list of nodes, we wrap every child with our wrapper\n// so we are able to access its tag with `findNodeHandle`.\n/**\n * A component that lets you skip entering and exiting animations.\n *\n * @param skipEntering - A boolean indicating whether children's entering\n *   animations should be skipped when `LayoutAnimationConfig` is mounted.\n * @param skipExiting - A boolean indicating whether children's exiting\n *   animations should be skipped when LayoutAnimationConfig is unmounted.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/layout-animation-config/\n */\nexport class LayoutAnimationConfig extends Component<LayoutAnimationConfigProps> {\n  getMaybeWrappedChildren() {\n    return Children.count(this.props.children) > 1 && this.props.skipExiting\n      ? Children.map(this.props.children, (child) => (\n          <LayoutAnimationConfig skipExiting>{child}</LayoutAnimationConfig>\n        ))\n      : this.props.children;\n  }\n\n  setShouldAnimateExiting() {\n    if (Children.count(this.props.children) === 1) {\n      const tag = findNodeHandle(this);\n      if (tag) {\n        setShouldAnimateExitingForTag(tag, !this.props.skipExiting);\n      }\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.props.skipExiting !== undefined) {\n      this.setShouldAnimateExiting();\n    }\n  }\n\n  render(): ReactNode {\n    const children = this.getMaybeWrappedChildren();\n\n    if (this.props.skipEntering === undefined) {\n      return children;\n    }\n\n    return (\n      <SkipEntering shouldSkip={this.props.skipEntering}>\n        {children}\n      </SkipEntering>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}