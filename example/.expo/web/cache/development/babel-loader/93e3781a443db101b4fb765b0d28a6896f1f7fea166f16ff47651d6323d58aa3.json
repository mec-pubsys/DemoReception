{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport Dialog from \"../../components/basics/Dialog\";\nimport { User } from \"../../models/User\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Logout = function Logout(props) {\n  var defaultOnPress = function defaultOnPress() {};\n  useEffect(function () {\n    ActivityLogger.insertInfoLogEntry(new User(), 'Logout', 'useEffect', 'screen open');\n  }, []);\n  return _jsx(Dialog, {\n    dialogTitle: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\",\n    text: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\\u3057\\u307E\\u3059\\u304B\\uFF1F\",\n    onFirstButtonPress: props.onLogOutButtonPress || defaultOnPress,\n    firstButtonText: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\",\n    iconVisible: false,\n    secondButtonVisible: true,\n    secondButtonText: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\",\n    onSecondButtonPress: props.onCancelButtonPress || defaultOnPress,\n    containerHeight: 332,\n    containerGap: 40,\n    btnContainerHeight: 120\n  });\n};","map":{"version":3,"names":["React","useEffect","Dialog","User","ActivityLogger","jsx","_jsx","Logout","props","defaultOnPress","insertInfoLogEntry","dialogTitle","text","onFirstButtonPress","onLogOutButtonPress","firstButtonText","iconVisible","secondButtonVisible","secondButtonText","onSecondButtonPress","onCancelButtonPress","containerHeight","containerGap","btnContainerHeight"],"sources":["/home/runner/work/DemoReception/DemoReception/example/src/screens/logout/Logout.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport Dialog from \"../../components/basics/Dialog\";\nimport { Int32 } from \"react-native/Libraries/Types/CodegenTypes\";\nimport { User } from \"../../models/User\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\n\ntype LogoutProps = {\n  dialogHeight?: Int32;\n  iconVisible?: boolean;\n  dialogTitle?: string;\n  text?: string;\n  firstButtonText?: string;\n  secondButtonText?: string;\n  secondButtonVisible?: boolean;\n  onLogOutButtonPress?: () => void;\n  onCancelButtonPress?: () => void;\n};\n\nexport const Logout = (props: LogoutProps) => {\n  const defaultOnPress = () => {};\n  \n  useEffect(() => {\n    ActivityLogger.insertInfoLogEntry(new User(), 'Logout', 'useEffect', 'screen open');\n  }, []);\n\n  return (\n    <Dialog\n      dialogTitle=\"ログアウト\"\n      text=\"ログアウトしますか？\"\n      onFirstButtonPress={props.onLogOutButtonPress || defaultOnPress}\n      firstButtonText=\"ログアウト\"\n      iconVisible={false}\n      secondButtonVisible={true}\n      secondButtonText=\"キャンセル\"\n      onSecondButtonPress={props.onCancelButtonPress || defaultOnPress}\n      containerHeight={332}\n      containerGap={40}\n      btnContainerHeight={120}\n    />\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM;AAEb,SAASC,IAAI;AACb,SAASC,cAAc;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAc1D,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAIC,KAAkB,EAAK;EAC5C,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS,CAAC,CAAC;EAE/BR,SAAS,CAAC,YAAM;IACdG,cAAc,CAACM,kBAAkB,CAAC,IAAIP,IAAI,CAAC,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,aAAa,CAAC;EACrF,CAAC,EAAE,EAAE,CAAC;EAEN,OACEG,IAAA,CAACJ,MAAM;IACLS,WAAW,EAAC,gCAAO;IACnBC,IAAI,EAAC,8DAAY;IACjBC,kBAAkB,EAAEL,KAAK,CAACM,mBAAmB,IAAIL,cAAe;IAChEM,eAAe,EAAC,gCAAO;IACvBC,WAAW,EAAE,KAAM;IACnBC,mBAAmB,EAAE,IAAK;IAC1BC,gBAAgB,EAAC,gCAAO;IACxBC,mBAAmB,EAAEX,KAAK,CAACY,mBAAmB,IAAIX,cAAe;IACjEY,eAAe,EAAE,GAAI;IACrBC,YAAY,EAAE,EAAG;IACjBC,kBAAkB,EAAE;EAAI,CACzB,CAAC;AAEN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}