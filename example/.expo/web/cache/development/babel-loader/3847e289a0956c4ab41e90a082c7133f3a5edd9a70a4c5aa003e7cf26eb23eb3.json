{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { colors } from \"../../styles/color\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from \"react-native-responsive-screen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var CustomCalendar = function CustomCalendar(_ref) {\n  var onDateSelect = _ref.onDateSelect,\n    selectedDate = _ref.selectedDate,\n    minDate = _ref.minDate;\n  var today = new Date();\n  var handleDayPress = function handleDayPress(date) {\n    onDateSelect(date.dateString);\n  };\n  LocaleConfig.locales.jp = {\n    monthNames: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\", \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"],\n    monthNamesShort: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\", \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"],\n    dayNames: [\"日曜日\", \"月曜日\", \"火曜日\", \"水曜日\", \"木曜日\", \"金曜日\", \"土曜日\"],\n    dayNamesShort: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n  };\n  LocaleConfig.defaultLocale = \"jp\";\n  return _jsx(View, {\n    style: styles.calendarPositionContainer,\n    children: _jsx(Calendar, {\n      current: selectedDate != null ? selectedDate : today.toDateString(),\n      minDate: minDate ? minDate.toString() : \"\",\n      style: styles.calendarMainContainer,\n      theme: {\n        backgroundColor: colors.secondary,\n        calendarBackground: colors.secondary,\n        todayTextColor: colors.calendarBlueColor,\n        arrowHeight: 25,\n        arrowWidth: 16,\n        arrowColor: colors.calendarBlueColor,\n        selectedDayBackgroundColor: colors.selectedDayBgColor,\n        selectedDayTextColor: colors.calendarBlueColor,\n        textMonthFontFamily: \"HiraginoKaku_GothicPro_Text\",\n        textMonthFontSize: 17,\n        textDayHeaderFontFamily: \"HiraginoKaku_GothicPro_Text\",\n        textDayHeaderFontWeight: \"300\",\n        textDayHeaderFontSize: 13,\n        textDayFontSize: 20,\n        textDayFontWeight: \"600\",\n        weekVerticalMargin: 3\n      },\n      onDayPress: handleDayPress,\n      markingType: 'custom',\n      markedDates: _defineProperty({}, selectedDate, _objectSpread({\n        selected: true,\n        customStyles: {\n          container: {\n            width: 35,\n            height: 35,\n            borderRadius: 20\n          }\n        }\n      }, Platform.select({\n        web: {\n          customStyles: {\n            container: {\n              width: 40,\n              height: 40,\n              borderRadius: 20\n            }\n          }\n        }\n      }))),\n      monthFormat: \"yyyy年 M月\",\n      hideExtraDays: true\n    })\n  });\n};\nexport var styles = StyleSheet.create({\n  calendarPositionContainer: {\n    position: \"absolute\",\n    top: hp(\"4.7%\")\n  },\n  calendarMainContainer: _objectSpread(_objectSpread({\n    shadowColor: \"rgba(0, 0, 0, 0.3)\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 1,\n    shadowRadius: wp(\"1.1%\"),\n    borderRadius: wp(\"1.1%\"),\n    width: wp(\"30.25%\"),\n    maxWidth: 361\n  }, Platform.select({\n    web: {\n      boxShadow: `0px 1px 99px 0px rgba(0, 0, 0, 0.3)`\n    }\n  })), {}, {\n    backgroundColor: colors.secondary,\n    paddingBottom: hp(\"1.2%\")\n  })\n});","map":{"version":3,"names":["React","Calendar","LocaleConfig","StyleSheet","View","Platform","colors","widthPercentageToDP","wp","heightPercentageToDP","hp","jsx","_jsx","CustomCalendar","_ref","onDateSelect","selectedDate","minDate","today","Date","handleDayPress","date","dateString","locales","jp","monthNames","monthNamesShort","dayNames","dayNamesShort","defaultLocale","style","styles","calendarPositionContainer","children","current","toDateString","toString","calendarMainContainer","theme","backgroundColor","secondary","calendarBackground","todayTextColor","calendarBlueColor","arrowHeight","arrowWidth","arrowColor","selectedDayBackgroundColor","selectedDayBgColor","selectedDayTextColor","textMonthFontFamily","textMonthFontSize","textDayHeaderFontFamily","textDayHeaderFontWeight","textDayHeaderFontSize","textDayFontSize","textDayFontWeight","weekVerticalMargin","onDayPress","markingType","markedDates","_defineProperty","_objectSpread","selected","customStyles","container","width","height","borderRadius","select","web","monthFormat","hideExtraDays","create","position","top","shadowColor","shadowOffset","shadowOpacity","shadowRadius","maxWidth","boxShadow","paddingBottom"],"sources":["/home/runner/work/DemoReception/DemoReception/example/src/components/basics/Calendar.tsx"],"sourcesContent":["import React from 'react';\nimport { Calendar, DateData, LocaleConfig } from 'react-native-calendars';\nimport { StyleSheet, View, Platform } from 'react-native';\nimport { colors } from '../../styles/color';\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from \"react-native-responsive-screen\";\n\ninterface CustomCalendarProps {\n  onDateSelect: (date: string) => void;\n  selectedDate: string;\n  minDate: string;\n}\n\nexport const CustomCalendar : React.FC<CustomCalendarProps> = ({ onDateSelect, selectedDate, minDate }) => { \n  const today = new Date();\n\n  const handleDayPress = (date: DateData) => {\n    onDateSelect(date.dateString);  \n  };\n  \n  LocaleConfig.locales.jp = {\n    monthNames: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\", \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"],\n    monthNamesShort: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\", \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"],\n    dayNames: [\"日曜日\", \"月曜日\", \"火曜日\", \"水曜日\", \"木曜日\", \"金曜日\", \"土曜日\"],\n    dayNamesShort: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\n  };\n  LocaleConfig.defaultLocale = \"jp\";\n\n  return (\n    <View style={styles.calendarPositionContainer}>\n      <Calendar\n        current={selectedDate!= null ? selectedDate: today.toDateString()}\n        minDate={minDate ? minDate.toString() : \"\"}\n        style={styles.calendarMainContainer}\n        theme={{\n          backgroundColor: colors.secondary,\n          calendarBackground: colors.secondary,\n          todayTextColor: colors.calendarBlueColor,\n          arrowHeight: 25,\n          arrowWidth: 16,\n          arrowColor: colors.calendarBlueColor,\n          selectedDayBackgroundColor: colors.selectedDayBgColor,\n          selectedDayTextColor: colors.calendarBlueColor,\n          textMonthFontFamily: \"HiraginoKaku_GothicPro_Text\",\n          textMonthFontSize: 17,\n          textDayHeaderFontFamily: \"HiraginoKaku_GothicPro_Text\",\n          textDayHeaderFontWeight: \"300\",\n          textDayHeaderFontSize: 13,\n          textDayFontSize: 20,\n          textDayFontWeight: \"600\",\n          weekVerticalMargin: 3,\n        }}\n        onDayPress={handleDayPress}\n        markingType={'custom'}\n        markedDates={{\n          [selectedDate]: {\n            selected: true,\n            customStyles: { container: { width: 35, height: 35, borderRadius: 20 } },\n            ...Platform.select({\n              web: {\n                customStyles: { container: { width: 40, height: 40, borderRadius: 20 } }\n              }\n            })\n          },\n        }}\n        monthFormat={\"yyyy年 M月\"}\n        hideExtraDays\n      />\n    </View>\n  );\n};\n\nexport const styles = StyleSheet.create({\n \n  calendarPositionContainer: {\n    position: \"absolute\",\n    top: hp(\"4.7%\"),    \n  },\n  calendarMainContainer: {\n    shadowColor: \"rgba(0, 0, 0, 0.3)\",\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 1,\n    shadowRadius: wp(\"1.1%\"),\n    borderRadius: wp(\"1.1%\"),\n    width: wp(\"30.25%\"),\n    maxWidth: 361,\n    ...Platform.select({\n      web: {\n        boxShadow: `0px 1px 99px 0px rgba(0, 0, 0, 0.3)`,\n      }\n    }),\n    backgroundColor: colors.secondary,  \n    paddingBottom: hp(\"1.2%\"),  \n  },  \n});\n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}