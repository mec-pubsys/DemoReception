{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"enabled\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { State } from \"../../State\";\nimport { EventTypes } from \"../interfaces\";\nimport GestureHandler from \"./GestureHandler\";\nvar DEFAULT_MAX_DURATION_MS = 500;\nvar DEFAULT_MAX_DELAY_MS = 500;\nvar DEFAULT_NUMBER_OF_TAPS = 1;\nvar DEFAULT_MIN_NUMBER_OF_POINTERS = 1;\nvar TapGestureHandler = function (_GestureHandler) {\n  _inherits(TapGestureHandler, _GestureHandler);\n  var _super = _createSuper(TapGestureHandler);\n  function TapGestureHandler() {\n    var _this;\n    _classCallCheck(this, TapGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n    _this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n    _this.maxDistSq = Number.MIN_SAFE_INTEGER;\n    _this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n    _this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n    _this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n    _this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n    _this.currentMaxNumberOfPointers = 1;\n    _this.startX = 0;\n    _this.startY = 0;\n    _this.offsetX = 0;\n    _this.offsetY = 0;\n    _this.lastX = 0;\n    _this.lastY = 0;\n    _this.tapsSoFar = 0;\n    return _this;\n  }\n  _createClass(TapGestureHandler, [{\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = _objectWithoutProperties(_ref, _excluded);\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        enabled: enabled\n      }, props));\n      if (this.config.numberOfTaps !== undefined) {\n        this.numberOfTaps = this.config.numberOfTaps;\n      }\n      if (this.config.maxDurationMs !== undefined) {\n        this.maxDurationMs = this.config.maxDurationMs;\n      }\n      if (this.config.maxDelayMs !== undefined) {\n        this.maxDelayMs = this.config.maxDelayMs;\n      }\n      if (this.config.maxDeltaX !== undefined) {\n        this.maxDeltaX = this.config.maxDeltaX;\n      }\n      if (this.config.maxDeltaY !== undefined) {\n        this.maxDeltaY = this.config.maxDeltaY;\n      }\n      if (this.config.maxDist !== undefined) {\n        this.maxDistSq = this.config.maxDist * this.config.maxDist;\n      }\n      if (this.config.minPointers !== undefined) {\n        this.minNumberOfPointers = this.config.minPointers;\n      }\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"resetConfig\", this).call(this);\n      this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n      this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n      this.maxDistSq = Number.MIN_SAFE_INTEGER;\n      this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n      this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n      this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n      this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n    }\n  }, {\n    key: \"clearTimeouts\",\n    value: function clearTimeouts() {\n      clearTimeout(this.waitTimeout);\n      clearTimeout(this.delayTimeout);\n    }\n  }, {\n    key: \"startTap\",\n    value: function startTap() {\n      var _this2 = this;\n      this.clearTimeouts();\n      this.waitTimeout = setTimeout(function () {\n        return _this2.fail();\n      }, this.maxDurationMs);\n    }\n  }, {\n    key: \"endTap\",\n    value: function endTap() {\n      var _this3 = this;\n      this.clearTimeouts();\n      if (++this.tapsSoFar === this.numberOfTaps && this.currentMaxNumberOfPointers >= this.minNumberOfPointers) {\n        this.activate();\n      } else {\n        this.delayTimeout = setTimeout(function () {\n          return _this3.fail();\n        }, this.maxDelayMs);\n      }\n    }\n  }, {\n    key: \"updateLastCoords\",\n    value: function updateLastCoords() {\n      var _this$tracker$getAbso = this.tracker.getAbsoluteCoordsAverage(),\n        x = _this$tracker$getAbso.x,\n        y = _this$tracker$getAbso.y;\n      this.lastX = x;\n      this.lastY = y;\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      if (!this.isButtonInConfig(event.button)) {\n        return;\n      }\n      this.tracker.addToTracker(event);\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n      this.trySettingPosition(event);\n      this.startX = event.x;\n      this.startY = event.y;\n      this.lastX = event.x;\n      this.lastY = event.y;\n      this.updateState(event);\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"onPointerAdd\", this).call(this, event);\n      this.tracker.addToTracker(event);\n      this.trySettingPosition(event);\n      this.offsetX += this.lastX - this.startX;\n      this.offsetY += this.lastY - this.startY;\n      this.updateLastCoords();\n      this.startX = this.lastX;\n      this.startY = this.lastY;\n      this.updateState(event);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n      this.updateLastCoords();\n      this.tracker.removeFromTracker(event.pointerId);\n      this.updateState(event);\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"onPointerRemove\", this).call(this, event);\n      this.tracker.removeFromTracker(event.pointerId);\n      this.offsetX += this.lastX - this.startX;\n      this.offsetY += this.lastY = this.startY;\n      this.updateLastCoords();\n      this.startX = this.lastX;\n      this.startY = this.lastY;\n      this.updateState(event);\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.trySettingPosition(event);\n      this.tracker.track(event);\n      this.updateLastCoords();\n      this.updateState(event);\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      this.trySettingPosition(event);\n      this.tracker.track(event);\n      this.updateLastCoords();\n      this.updateState(event);\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"onPointerOutOfBounds\", this).call(this, event);\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(event) {\n      if (this.currentMaxNumberOfPointers < this.tracker.trackedPointersCount) {\n        this.currentMaxNumberOfPointers = this.tracker.trackedPointersCount;\n      }\n      if (this.shouldFail()) {\n        this.fail();\n        return;\n      }\n      switch (this.state) {\n        case State.UNDETERMINED:\n          if (event.eventType === EventTypes.DOWN) {\n            this.begin();\n          }\n          this.startTap();\n          break;\n        case State.BEGAN:\n          if (event.eventType === EventTypes.UP) {\n            this.endTap();\n          }\n          if (event.eventType === EventTypes.DOWN) {\n            this.startTap();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"trySettingPosition\",\n    value: function trySettingPosition(event) {\n      if (this.state !== State.UNDETERMINED) {\n        return;\n      }\n      this.offsetX = 0;\n      this.offsetY = 0;\n      this.startX = event.x;\n      this.startY = event.y;\n    }\n  }, {\n    key: \"shouldFail\",\n    value: function shouldFail() {\n      var dx = this.lastX - this.startX + this.offsetX;\n      if (this.maxDeltaX !== Number.MIN_SAFE_INTEGER && Math.abs(dx) > this.maxDeltaX) {\n        return true;\n      }\n      var dy = this.lastY - this.startY + this.offsetY;\n      if (this.maxDeltaY !== Number.MIN_SAFE_INTEGER && Math.abs(dy) > this.maxDeltaY) {\n        return true;\n      }\n      var distSq = dy * dy + dx * dx;\n      return this.maxDistSq !== Number.MIN_SAFE_INTEGER && distSq > this.maxDistSq;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"activate\", this).call(this);\n      this.end();\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.resetProgress();\n      this.clearTimeouts();\n    }\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {\n      this.clearTimeouts();\n      this.tapsSoFar = 0;\n      this.currentMaxNumberOfPointers = 0;\n    }\n  }]);\n  return TapGestureHandler;\n}(GestureHandler);\nexport { TapGestureHandler as default };","map":{"version":3,"names":["State","EventTypes","GestureHandler","DEFAULT_MAX_DURATION_MS","DEFAULT_MAX_DELAY_MS","DEFAULT_NUMBER_OF_TAPS","DEFAULT_MIN_NUMBER_OF_POINTERS","TapGestureHandler","_GestureHandler","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","maxDeltaX","Number","MIN_SAFE_INTEGER","maxDeltaY","maxDistSq","maxDurationMs","maxDelayMs","numberOfTaps","minNumberOfPointers","currentMaxNumberOfPointers","startX","startY","offsetX","offsetY","lastX","lastY","tapsSoFar","_createClass","key","value","updateGestureConfig","_ref","_ref$enabled","enabled","props","_objectWithoutProperties","_excluded","_get","_getPrototypeOf","prototype","_objectSpread","config","undefined","maxDist","minPointers","resetConfig","clearTimeouts","clearTimeout","waitTimeout","delayTimeout","startTap","_this2","setTimeout","fail","endTap","_this3","activate","updateLastCoords","_this$tracker$getAbso","tracker","getAbsoluteCoordsAverage","x","y","onPointerDown","event","isButtonInConfig","button","addToTracker","trySettingPosition","updateState","tryToSendTouchEvent","onPointerAdd","onPointerUp","removeFromTracker","pointerId","onPointerRemove","onPointerMove","track","onPointerOutOfBounds","trackedPointersCount","shouldFail","state","UNDETERMINED","eventType","DOWN","begin","BEGAN","UP","dx","Math","abs","dy","distSq","end","onCancel","resetProgress","default"],"sources":["/home/runner/work/DemoReception/DemoReception/example/node_modules/react-native-gesture-handler/src/web/handlers/TapGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { AdaptedEvent, Config, EventTypes } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MAX_DURATION_MS = 500;\nconst DEFAULT_MAX_DELAY_MS = 500;\nconst DEFAULT_NUMBER_OF_TAPS = 1;\nconst DEFAULT_MIN_NUMBER_OF_POINTERS = 1;\n\nexport default class TapGestureHandler extends GestureHandler {\n  private maxDeltaX = Number.MIN_SAFE_INTEGER;\n  private maxDeltaY = Number.MIN_SAFE_INTEGER;\n  private maxDistSq = Number.MIN_SAFE_INTEGER;\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private maxDelayMs = DEFAULT_MAX_DELAY_MS;\n\n  private numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n  private minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  private currentMaxNumberOfPointers = 1;\n\n  private startX = 0;\n  private startY = 0;\n  private offsetX = 0;\n  private offsetY = 0;\n  private lastX = 0;\n  private lastY = 0;\n\n  private waitTimeout: number | undefined;\n  private delayTimeout: number | undefined;\n\n  private tapsSoFar = 0;\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.numberOfTaps !== undefined) {\n      this.numberOfTaps = this.config.numberOfTaps;\n    }\n\n    if (this.config.maxDurationMs !== undefined) {\n      this.maxDurationMs = this.config.maxDurationMs;\n    }\n\n    if (this.config.maxDelayMs !== undefined) {\n      this.maxDelayMs = this.config.maxDelayMs;\n    }\n\n    if (this.config.maxDeltaX !== undefined) {\n      this.maxDeltaX = this.config.maxDeltaX;\n    }\n\n    if (this.config.maxDeltaY !== undefined) {\n      this.maxDeltaY = this.config.maxDeltaY;\n    }\n\n    if (this.config.maxDist !== undefined) {\n      this.maxDistSq = this.config.maxDist * this.config.maxDist;\n    }\n\n    if (this.config.minPointers !== undefined) {\n      this.minNumberOfPointers = this.config.minPointers;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n\n    this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n    this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n    this.maxDistSq = Number.MIN_SAFE_INTEGER;\n    this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n    this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n    this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n    this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  }\n\n  private clearTimeouts(): void {\n    clearTimeout(this.waitTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  private startTap(): void {\n    this.clearTimeouts();\n\n    this.waitTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n\n  private endTap(): void {\n    this.clearTimeouts();\n\n    if (\n      ++this.tapsSoFar === this.numberOfTaps &&\n      this.currentMaxNumberOfPointers >= this.minNumberOfPointers\n    ) {\n      this.activate();\n    } else {\n      this.delayTimeout = setTimeout(() => this.fail(), this.maxDelayMs);\n    }\n  }\n\n  private updateLastCoords() {\n    const { x, y } = this.tracker.getAbsoluteCoordsAverage();\n\n    this.lastX = x;\n    this.lastY = y;\n  }\n\n  // Handling Events\n  protected onPointerDown(event: AdaptedEvent): void {\n    if (!this.isButtonInConfig(event.button)) {\n      return;\n    }\n\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.trySettingPosition(event);\n\n    this.startX = event.x;\n    this.startY = event.y;\n\n    this.lastX = event.x;\n    this.lastY = event.y;\n\n    this.updateState(event);\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    super.onPointerAdd(event);\n    this.tracker.addToTracker(event);\n    this.trySettingPosition(event);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY - this.startY;\n\n    this.updateLastCoords();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n\n    this.updateState(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n\n    this.updateLastCoords();\n\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.updateState(event);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY = this.startY;\n\n    this.updateLastCoords();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n\n    this.updateState(event);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    this.updateLastCoords();\n    this.updateState(event);\n\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    this.updateLastCoords();\n    this.updateState(event);\n\n    super.onPointerOutOfBounds(event);\n  }\n\n  private updateState(event: AdaptedEvent): void {\n    if (this.currentMaxNumberOfPointers < this.tracker.trackedPointersCount) {\n      this.currentMaxNumberOfPointers = this.tracker.trackedPointersCount;\n    }\n\n    if (this.shouldFail()) {\n      this.fail();\n      return;\n    }\n\n    switch (this.state) {\n      case State.UNDETERMINED:\n        if (event.eventType === EventTypes.DOWN) {\n          this.begin();\n        }\n        this.startTap();\n        break;\n      case State.BEGAN:\n        if (event.eventType === EventTypes.UP) {\n          this.endTap();\n        }\n        if (event.eventType === EventTypes.DOWN) {\n          this.startTap();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  private trySettingPosition(event: AdaptedEvent): void {\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.startX = event.x;\n    this.startY = event.y;\n  }\n\n  private shouldFail(): boolean {\n    const dx = this.lastX - this.startX + this.offsetX;\n\n    if (\n      this.maxDeltaX !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dx) > this.maxDeltaX\n    ) {\n      return true;\n    }\n\n    const dy = this.lastY - this.startY + this.offsetY;\n    if (\n      this.maxDeltaY !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dy) > this.maxDeltaY\n    ) {\n      return true;\n    }\n\n    const distSq = dy * dy + dx * dx;\n\n    return (\n      this.maxDistSq !== Number.MIN_SAFE_INTEGER && distSq > this.maxDistSq\n    );\n  }\n\n  public activate(): void {\n    super.activate();\n\n    this.end();\n  }\n\n  protected onCancel(): void {\n    this.resetProgress();\n    this.clearTimeouts();\n  }\n\n  protected resetProgress(): void {\n    this.clearTimeouts();\n    this.tapsSoFar = 0;\n    this.currentMaxNumberOfPointers = 0;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}