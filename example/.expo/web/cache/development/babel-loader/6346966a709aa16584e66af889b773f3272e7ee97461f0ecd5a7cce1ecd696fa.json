{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { processColorsInProps } from \"../Colors.js\";\nimport { ReanimatedError } from \"../errors.js\";\nimport { isFabric, isJest, shouldBeUseWeb } from \"../PlatformChecker.js\";\nimport { _updatePropsJS } from \"../ReanimatedModule/js-reanimated/index.js\";\nimport { runOnUIImmediately } from \"../threads.js\";\nimport { processTransformOrigin } from \"./processTransformOrigin.js\";\nvar updateProps;\nif (shouldBeUseWeb()) {\n  updateProps = function updateProps(viewDescriptors, updates, isAnimatedProps) {\n    'worklet';\n\n    var _viewDescriptors$valu;\n    (_viewDescriptors$valu = viewDescriptors.value) == null ? void 0 : _viewDescriptors$valu.forEach(function (viewDescriptor) {\n      var component = viewDescriptor.tag;\n      _updatePropsJS(updates, component, isAnimatedProps);\n    });\n  };\n} else {\n  updateProps = function updateProps(viewDescriptors, updates) {\n    'worklet';\n\n    processColorsInProps(updates);\n    if ('transformOrigin' in updates) {\n      updates.transformOrigin = processTransformOrigin(updates.transformOrigin);\n    }\n    global.UpdatePropsManager.update(viewDescriptors, updates);\n  };\n}\nexport var updatePropsJestWrapper = function updatePropsJestWrapper(viewDescriptors, updates, animatedValues, adapters) {\n  adapters.forEach(function (adapter) {\n    adapter(updates);\n  });\n  animatedValues.current.value = _objectSpread(_objectSpread({}, animatedValues.current.value), updates);\n  updateProps(viewDescriptors, updates);\n};\nexport default updateProps;\nvar createUpdatePropsManager = isFabric() ? function () {\n  'worklet';\n  var operations = [];\n  return {\n    update: function update(viewDescriptors, updates) {\n      var _this = this;\n      viewDescriptors.value.forEach(function (viewDescriptor) {\n        operations.push({\n          shadowNodeWrapper: viewDescriptor.shadowNodeWrapper,\n          updates: updates\n        });\n        if (operations.length === 1) {\n          queueMicrotask(_this.flush);\n        }\n      });\n    },\n    flush: function flush() {\n      global._updatePropsFabric(operations);\n      operations.length = 0;\n    }\n  };\n} : function () {\n  'worklet';\n  var operations = [];\n  return {\n    update: function update(viewDescriptors, updates) {\n      var _this2 = this;\n      viewDescriptors.value.forEach(function (viewDescriptor) {\n        operations.push({\n          tag: viewDescriptor.tag,\n          name: viewDescriptor.name || 'RCTView',\n          updates: updates\n        });\n        if (operations.length === 1) {\n          queueMicrotask(_this2.flush);\n        }\n      });\n    },\n    flush: function flush() {\n      global._updatePropsPaper(operations);\n      operations.length = 0;\n    }\n  };\n};\nif (shouldBeUseWeb()) {\n  var maybeThrowError = function maybeThrowError() {\n    if (!isJest()) {\n      throw new ReanimatedError('`UpdatePropsManager` is not available on non-native platform.');\n    }\n  };\n  global.UpdatePropsManager = new Proxy({}, {\n    get: maybeThrowError,\n    set: function set() {\n      maybeThrowError();\n      return false;\n    }\n  });\n} else {\n  runOnUIImmediately(function () {\n    'worklet';\n\n    global.UpdatePropsManager = createUpdatePropsManager();\n  })();\n}","map":{"version":3,"names":["_defineProperty","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","processColorsInProps","ReanimatedError","isFabric","isJest","shouldBeUseWeb","_updatePropsJS","runOnUIImmediately","processTransformOrigin","updateProps","viewDescriptors","updates","isAnimatedProps","_viewDescriptors$valu","value","viewDescriptor","component","tag","transformOrigin","global","UpdatePropsManager","update","updatePropsJestWrapper","animatedValues","adapters","adapter","current","createUpdatePropsManager","operations","_this","shadowNodeWrapper","queueMicrotask","flush","_updatePropsFabric","_this2","name","_updatePropsPaper","maybeThrowError","Proxy","get","set"],"sources":["/home/runner/work/DemoReception/DemoReception/example/node_modules/react-native-reanimated/src/updateProps/updateProps.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-redundant-type-constituents, @typescript-eslint/no-explicit-any */\n'use strict';\n\nimport type { MutableRefObject } from 'react';\n\nimport { processColorsInProps } from '../Colors';\nimport type {\n  AnimatedStyle,\n  ShadowNodeWrapper,\n  StyleProps,\n} from '../commonTypes';\nimport { ReanimatedError } from '../errors';\nimport type { Descriptor } from '../hook/commonTypes';\nimport { isFabric, isJest, shouldBeUseWeb } from '../PlatformChecker';\nimport type { ReanimatedHTMLElement } from '../ReanimatedModule/js-reanimated';\nimport { _updatePropsJS } from '../ReanimatedModule/js-reanimated';\nimport { runOnUIImmediately } from '../threads';\nimport { processTransformOrigin } from './processTransformOrigin';\n\nlet updateProps: (\n  viewDescriptors: ViewDescriptorsWrapper,\n  updates: StyleProps | AnimatedStyle<any>,\n  isAnimatedProps?: boolean\n) => void;\n\nif (shouldBeUseWeb()) {\n  updateProps = (viewDescriptors, updates, isAnimatedProps) => {\n    'worklet';\n    viewDescriptors.value?.forEach((viewDescriptor) => {\n      const component = viewDescriptor.tag as ReanimatedHTMLElement;\n      _updatePropsJS(updates, component, isAnimatedProps);\n    });\n  };\n} else {\n  updateProps = (viewDescriptors, updates) => {\n    'worklet';\n    processColorsInProps(updates);\n    if ('transformOrigin' in updates) {\n      updates.transformOrigin = processTransformOrigin(updates.transformOrigin);\n    }\n    global.UpdatePropsManager.update(viewDescriptors, updates);\n  };\n}\n\nexport const updatePropsJestWrapper = (\n  viewDescriptors: ViewDescriptorsWrapper,\n  updates: AnimatedStyle<any>,\n  animatedValues: MutableRefObject<AnimatedStyle<any>>,\n  adapters: ((updates: AnimatedStyle<any>) => void)[]\n): void => {\n  adapters.forEach((adapter) => {\n    adapter(updates);\n  });\n  animatedValues.current.value = {\n    ...animatedValues.current.value,\n    ...updates,\n  };\n\n  updateProps(viewDescriptors, updates);\n};\n\nexport default updateProps;\n\nconst createUpdatePropsManager = isFabric()\n  ? () => {\n      'worklet';\n      // Fabric\n      const operations: {\n        shadowNodeWrapper: ShadowNodeWrapper;\n        updates: StyleProps | AnimatedStyle<any>;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: ViewDescriptorsWrapper,\n          updates: StyleProps | AnimatedStyle<any>\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              shadowNodeWrapper: viewDescriptor.shadowNodeWrapper,\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush(this: void) {\n          global._updatePropsFabric!(operations);\n          operations.length = 0;\n        },\n      };\n    }\n  : () => {\n      'worklet';\n      // Paper\n      const operations: {\n        tag: number;\n        name: string;\n        updates: StyleProps | AnimatedStyle<any>;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: ViewDescriptorsWrapper,\n          updates: StyleProps | AnimatedStyle<any>\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              tag: viewDescriptor.tag as number,\n              name: viewDescriptor.name || 'RCTView',\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush(this: void) {\n          global._updatePropsPaper!(operations);\n          operations.length = 0;\n        },\n      };\n    };\n\nif (shouldBeUseWeb()) {\n  const maybeThrowError = () => {\n    // Jest attempts to access a property of this object to check if it is a Jest mock\n    // so we can't throw an error in the getter.\n    if (!isJest()) {\n      throw new ReanimatedError(\n        '`UpdatePropsManager` is not available on non-native platform.'\n      );\n    }\n  };\n  global.UpdatePropsManager = new Proxy(\n    {},\n    {\n      get: maybeThrowError,\n      set: () => {\n        maybeThrowError();\n        return false;\n      },\n    }\n  );\n} else {\n  runOnUIImmediately(() => {\n    'worklet';\n    global.UpdatePropsManager = createUpdatePropsManager();\n  })();\n}\n\n/**\n * This used to be `SharedValue<Descriptors[]>` but objects holding just a\n * single `value` prop are fine too.\n */\ninterface ViewDescriptorsWrapper {\n  value: Readonly<Descriptor[]>;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}