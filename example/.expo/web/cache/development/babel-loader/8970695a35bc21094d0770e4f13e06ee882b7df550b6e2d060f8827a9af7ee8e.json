{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { format } from \"date-fns\";\nimport { executeQuery } from \"../../aws/db/dbOperation\";\nimport { getCurrentJapanTime } from \"../../environments/TimeUtils\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\nimport { User } from \"../../models/User\";\nexport var fetchGenderName = function () {\n  var _ref = _asyncToGenerator(function* (genderCode) {\n    var method = \"POST\";\n    var queryString = \"SELECT name FROM gender WHERE gender_code ='\" + genderCode + \"';\";\n    ActivityLogger.insertInfoLogEntry(new User(), 'CheckInConfirmation', 'fetchGenderName', 'execute query', '', null, queryString);\n    return executeQuery(method, queryString);\n  });\n  return function fetchGenderName(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var insertReceptionData = function () {\n  var _ref2 = _asyncToGenerator(function* (eventId, venueId, modifierId, acceptedTerminalId, lgapId, userRank, lastName, firstName, lastNameKana, firstNameKana, dateOfBirth, genderCode, postalCode, address, receptionTypeCode) {\n    var currentJapanTime = getCurrentJapanTime();\n    var formattedDateOfBirth;\n    if (dateOfBirth) {\n      formattedDateOfBirth = format(dateOfBirth, \"yyyy-MM-dd\");\n    } else {\n      formattedDateOfBirth = \"\";\n    }\n    var method = \"POST\";\n    var queryString = `\n  INSERT \n  INTO reception (\n    city_code, \n    event_id, venue_id, \n    member_id, \n    history_number, \n    accepted_terminal_id, \n    accepted_timestamp, \n    modifier_id, \n    modification_timestamp, \n    is_deleted, \n    lgap_id, \n    user_rank, \n    lastname, firstname, \n    lastname_kana, firstname_kana, \n    date_of_birth, \n    gender_code, \n    postal_code, \n    address, \n    relationship, \n    reception_type_code, \n    family_order_number\n)\nVALUES (\n    '242152',\n    ${eventId},\n    ${venueId}, \n    0, \n    0,\n    CASE\n      WHEN '${acceptedTerminalId}' ='' THEN NULL\n      ELSE '${acceptedTerminalId}'\n    END, \n    '${currentJapanTime}', \n    '${modifierId}', \n    '${currentJapanTime}', \n    false,\n    CASE\n      WHEN '${lgapId}' ='' THEN NULL\n      ELSE '${lgapId}'\n    END,\n    CASE\n    WHEN '${userRank}' ='' THEN NULL\n    ELSE '${userRank}'\n  END,\n    '${lastName}',\n    '${firstName}', \n    '${lastNameKana}',\n    '${firstNameKana}',\n    '${formattedDateOfBirth}',\n    '${genderCode}',\n    '${postalCode}', \n    '${address}', \n    '本人', \n    '${receptionTypeCode}', \n    0 );`;\n    ActivityLogger.insertInfoLogEntry(new User(), 'CheckInConfirmation', 'insertReceptionData', 'execute query', '', null, queryString);\n    return executeQuery(method, queryString);\n  });\n  return function insertReceptionData(_x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getCountOfReceivedItems = function () {\n  var _ref3 = _asyncToGenerator(function* (eventId, lgapId) {\n    var method = \"POST\";\n    var queryString = `\n  SELECT\n    COUNT(*)\n  FROM\n    reception\n  WHERE\n    city_code = '242152'\n    AND event_id = ${eventId}\n    AND NOT is_deleted\n    AND lgap_id = '${lgapId}';\n`;\n    return executeQuery(method, queryString);\n  });\n  return function getCountOfReceivedItems(_x17, _x18) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getReceptionId = function () {\n  var _ref4 = _asyncToGenerator(function* (eventId, lgapId) {\n    var method = \"POST\";\n    var queryString = `\n  SELECT\n    reception_id\n  FROM\n    reception\n  WHERE\n    city_code = '242152'\n    AND event_id = ${eventId}\n    AND lgap_id = '${lgapId}';\n`;\n    return executeQuery(method, queryString);\n  });\n  return function getReceptionId(_x19, _x20) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var insertIntoReceptionHistory = function () {\n  var _ref5 = _asyncToGenerator(function* (eventId, receptionData) {\n    var method = \"POST\";\n    var receptionIds = receptionData.map(function (entry) {\n      return entry.reception_id;\n    });\n    var receptionIdString = receptionIds.join(\", \");\n    var queryString = `\n  INSERT INTO\n    reception_history\n  SELECT\n    *\n  FROM\n    reception\n  WHERE\n    city_code = '242152'\n    AND event_id = ${eventId}\n    AND reception_id IN (${receptionIdString});\n  `;\n    return executeQuery(method, queryString);\n  });\n  return function insertIntoReceptionHistory(_x21, _x22) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var deleteDataFromReception = function () {\n  var _ref6 = _asyncToGenerator(function* (eventId, receptionData) {\n    var method = \"POST\";\n    var receptionIds = receptionData.map(function (entry) {\n      return entry.reception_id;\n    });\n    var receptionIdString = receptionIds.join(\", \");\n    var queryString = `\n  DELETE\n  FROM\n    reception\n  WHERE\n    city_code = '242152'\n    AND event_id = ${eventId}\n    AND reception_id IN (${receptionIdString});\n  `;\n    return executeQuery(method, queryString);\n  });\n  return function deleteDataFromReception(_x23, _x24) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["format","executeQuery","getCurrentJapanTime","ActivityLogger","User","fetchGenderName","_ref","_asyncToGenerator","genderCode","method","queryString","insertInfoLogEntry","_x","apply","arguments","insertReceptionData","_ref2","eventId","venueId","modifierId","acceptedTerminalId","lgapId","userRank","lastName","firstName","lastNameKana","firstNameKana","dateOfBirth","postalCode","address","receptionTypeCode","currentJapanTime","formattedDateOfBirth","_x2","_x3","_x4","_x5","_x6","_x7","_x8","_x9","_x10","_x11","_x12","_x13","_x14","_x15","_x16","getCountOfReceivedItems","_ref3","_x17","_x18","getReceptionId","_ref4","_x19","_x20","insertIntoReceptionHistory","_ref5","receptionData","receptionIds","map","entry","reception_id","receptionIdString","join","_x21","_x22","deleteDataFromReception","_ref6","_x23","_x24"],"sources":["/home/runner/work/DemoReception/DemoReception/example/src/screens/check-in-confirmation/CheckInConfirmationService.ts"],"sourcesContent":["import { format } from \"date-fns\";\nimport { executeQuery } from \"../../aws/db/dbOperation\";\nimport { getCurrentJapanTime } from \"../../environments/TimeUtils\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\nimport { User } from \"../../models/User\";\n\n// get Data from gender name\nexport const fetchGenderName = async (genderCode: string) => {\n  const method = \"POST\";\n  const queryString =\n    \"SELECT name FROM gender WHERE gender_code ='\" + genderCode + \"';\";\n  ActivityLogger.insertInfoLogEntry(new User(), 'CheckInConfirmation', 'fetchGenderName', 'execute query', '', null, queryString);\n  return executeQuery(method, queryString);\n};\n\n//insert reception\nexport const insertReceptionData = async (\n  eventId: number,\n  venueId: number,\n  modifierId: string,\n  acceptedTerminalId: string,\n  lgapId: string,\n  userRank: string,\n  lastName: string,\n  firstName: string,\n  lastNameKana: string,\n  firstNameKana: string,\n  dateOfBirth: Date | null,\n  genderCode: string,\n  postalCode: string,\n  address: string,\n  receptionTypeCode: string\n) => {\n  const currentJapanTime = getCurrentJapanTime();\n  let formattedDateOfBirth: string;\n  if (dateOfBirth) {\n    formattedDateOfBirth = format(dateOfBirth, \"yyyy-MM-dd\");\n  } else {\n    formattedDateOfBirth = \"\";\n  }\n\n  const method = \"POST\";\n  const queryString = `\n  INSERT \n  INTO reception (\n    city_code, \n    event_id, venue_id, \n    member_id, \n    history_number, \n    accepted_terminal_id, \n    accepted_timestamp, \n    modifier_id, \n    modification_timestamp, \n    is_deleted, \n    lgap_id, \n    user_rank, \n    lastname, firstname, \n    lastname_kana, firstname_kana, \n    date_of_birth, \n    gender_code, \n    postal_code, \n    address, \n    relationship, \n    reception_type_code, \n    family_order_number\n)\nVALUES (\n    '242152',\n    ${eventId},\n    ${venueId}, \n    0, \n    0,\n    CASE\n      WHEN '${acceptedTerminalId}' ='' THEN NULL\n      ELSE '${acceptedTerminalId}'\n    END, \n    '${currentJapanTime}', \n    '${modifierId}', \n    '${currentJapanTime}', \n    false,\n    CASE\n      WHEN '${lgapId}' ='' THEN NULL\n      ELSE '${lgapId}'\n    END,\n    CASE\n    WHEN '${userRank}' ='' THEN NULL\n    ELSE '${userRank}'\n  END,\n    '${lastName}',\n    '${firstName}', \n    '${lastNameKana}',\n    '${firstNameKana}',\n    '${formattedDateOfBirth}',\n    '${genderCode}',\n    '${postalCode}', \n    '${address}', \n    '本人', \n    '${receptionTypeCode}', \n    0 );`;\n  ActivityLogger.insertInfoLogEntry(new User(), 'CheckInConfirmation', 'insertReceptionData', 'execute query', '', null, queryString);\n  return executeQuery(method, queryString);\n};\n\n// GET Count of Received Items\nexport const getCountOfReceivedItems = async (\n  eventId: number,\n  lgapId: string\n) => {\n  const method = \"POST\";\n  const queryString = `\n  SELECT\n    COUNT(*)\n  FROM\n    reception\n  WHERE\n    city_code = '242152'\n    AND event_id = ${eventId}\n    AND NOT is_deleted\n    AND lgap_id = '${lgapId}';\n`;\n  return executeQuery(method, queryString);\n};\n\n// GET ReceptionID\nexport const getReceptionId = async (eventId: number, lgapId: string) => {\n  const method = \"POST\";\n  const queryString = `\n  SELECT\n    reception_id\n  FROM\n    reception\n  WHERE\n    city_code = '242152'\n    AND event_id = ${eventId}\n    AND lgap_id = '${lgapId}';\n`;\n  return executeQuery(method, queryString);\n};\n\n// INSERT Into Reception History\nexport const insertIntoReceptionHistory = async (\n  eventId: number,\n  receptionData: { reception_id: number }[]\n) => {\n  const method = \"POST\";\n  const receptionIds = receptionData.map((entry) => entry.reception_id);\n  const receptionIdString = receptionIds.join(\", \");\n\n  const queryString = `\n  INSERT INTO\n    reception_history\n  SELECT\n    *\n  FROM\n    reception\n  WHERE\n    city_code = '242152'\n    AND event_id = ${eventId}\n    AND reception_id IN (${receptionIdString});\n  `;\n  return executeQuery(method, queryString);\n};\n\n// DELETE Data from Reception\nexport const deleteDataFromReception = async (\n  eventId: number,\n  receptionData: { reception_id: number }[]\n) => {\n  const method = \"POST\";\n  const receptionIds = receptionData.map((entry) => entry.reception_id);\n  const receptionIdString = receptionIds.join(\", \");\n\n  const queryString = `\n  DELETE\n  FROM\n    reception\n  WHERE\n    city_code = '242152'\n    AND event_id = ${eventId}\n    AND reception_id IN (${receptionIdString});\n  `;\n  return executeQuery(method, queryString);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}