{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"normal\", \"style\", \"numberOfLines\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useEffect, useState } from \"react\";\nimport { Text } from \"./Themed\";\nimport { fonts } from \"../styles/font\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { colors } from \"../styles/color\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function MonoText(props) {\n  return _jsx(Text, _objectSpread(_objectSpread({}, props), {}, {\n    style: [props.style, {\n      fontFamily: \"SpaceMono\"\n    }]\n  }));\n}\nexport function HiraginoKakuText(props) {\n  var normal = props.normal,\n    style = props.style,\n    numberOfLines = props.numberOfLines,\n    rest = _objectWithoutProperties(props, _excluded);\n  var textStyle = normal ? styles.normalText : styles.boldText;\n  var _useState = useState(\"600\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontWeight = _useState2[0],\n    setFontWeight = _useState2[1];\n  useEffect(function () {\n    if (Platform.OS !== \"ios\" && Platform.OS !== \"android\") {\n      if (!normal) {\n        if (navigator.userAgent.search(\"Safari\") >= 0 && navigator.userAgent.search(\"Chrome\") < 0) {\n          setFontWeight(\"500\");\n        } else {\n          setFontWeight(\"600\");\n        }\n      } else {\n        setFontWeight(\"300\");\n      }\n    } else {\n      if (!normal) {\n        setFontWeight(\"600\");\n      } else {\n        setFontWeight(\"300\");\n      }\n    }\n  }, []);\n  var defaultColorStyle = {\n    color: colors.textColor\n  };\n  return _jsx(Text, _objectSpread(_objectSpread({}, rest), {}, {\n    style: [defaultColorStyle, style, textStyle, {\n      fontWeight: fontWeight\n    }],\n    numberOfLines: numberOfLines\n  }));\n}\nvar styles = StyleSheet.create({\n  normalText: {\n    fontFamily: fonts.FontRegular.fontFamily\n  },\n  boldText: {\n    fontFamily: fonts.FontBold.fontFamily\n  }\n});","map":{"version":3,"names":["useEffect","useState","Text","fonts","StyleSheet","Platform","colors","jsx","_jsx","MonoText","props","_objectSpread","style","fontFamily","HiraginoKakuText","normal","numberOfLines","rest","_objectWithoutProperties","_excluded","textStyle","styles","normalText","boldText","_useState","_useState2","_slicedToArray","fontWeight","setFontWeight","OS","navigator","userAgent","search","defaultColorStyle","color","textColor","create","FontRegular","FontBold"],"sources":["/home/runner/work/DemoReception/DemoReception/example/src/components/StyledText.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Text, TextProps } from \"./Themed\";\nimport { fonts } from \"../styles/font\";\nimport { StyleSheet, TextStyle, Platform } from \"react-native\";\nimport { colors } from \"../styles/color\";\n\nexport function MonoText(props: TextProps) {\n  return <Text {...props} style={[props.style, { fontFamily: \"SpaceMono\" }]} />;\n}\n\ninterface CustomTextProps extends TextProps {\n  normal?: boolean;\n  numberOfLines?: number;\n}\n\nexport function HiraginoKakuText(props: CustomTextProps) {\n  const { normal, style, numberOfLines, ...rest } = props;\n  const textStyle = normal ? styles.normalText : styles.boldText;\n  const [fontWeight, setFontWeight] = useState<\"600\" | \"500\" | \"300\">(\"600\");\n\n  useEffect(() => {\n    if (Platform.OS !== \"ios\" && Platform.OS !== \"android\") {\n      if (!normal) {\n        if (\n          navigator.userAgent.search(\"Safari\") >= 0 &&\n          navigator.userAgent.search(\"Chrome\") < 0\n        ) {\n          setFontWeight(\"500\");\n        } else {\n          setFontWeight(\"600\");\n        }\n      } else {\n        setFontWeight(\"300\");\n      }\n    } else {\n      if (!normal) {\n        setFontWeight(\"600\");\n      } else {\n        setFontWeight(\"300\");\n      }\n    }\n  }, []);\n\n  // Add default color style if color is not provided\n  const defaultColorStyle = { color: colors.textColor };\n\n  return (\n    <Text\n      {...rest}\n      style={[defaultColorStyle, style, textStyle, { fontWeight }]}\n      numberOfLines={numberOfLines}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  normalText: {\n    fontFamily: fonts.FontRegular.fontFamily,\n  },\n  boldText: {\n    fontFamily: fonts.FontBold.fontFamily,\n  },\n});\n"],"mappings":";;;;;;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI;AACb,SAASC,KAAK;AAAyB,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAEvC,SAASC,MAAM;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAEzC,OAAO,SAASC,QAAQA,CAACC,KAAgB,EAAE;EACzC,OAAOF,IAAA,CAACN,IAAI,EAAAS,aAAA,CAAAA,aAAA,KAAKD,KAAK;IAAEE,KAAK,EAAE,CAACF,KAAK,CAACE,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAY,CAAC;EAAE,EAAE,CAAC;AAC/E;AAOA,OAAO,SAASC,gBAAgBA,CAACJ,KAAsB,EAAE;EACvD,IAAQK,MAAM,GAAoCL,KAAK,CAA/CK,MAAM;IAAEH,KAAK,GAA6BF,KAAK,CAAvCE,KAAK;IAAEI,aAAa,GAAcN,KAAK,CAAhCM,aAAa;IAAKC,IAAI,GAAAC,wBAAA,CAAKR,KAAK,EAAAS,SAAA;EACvD,IAAMC,SAAS,GAAGL,MAAM,GAAGM,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,QAAQ;EAC9D,IAAAC,SAAA,GAAoCvB,QAAQ,CAAwB,KAAK,CAAC;IAAAwB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnEG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhCzB,SAAS,CAAC,YAAM;IACd,IAAIK,QAAQ,CAACwB,EAAE,KAAK,KAAK,IAAIxB,QAAQ,CAACwB,EAAE,KAAK,SAAS,EAAE;MACtD,IAAI,CAACd,MAAM,EAAE;QACX,IACEe,SAAS,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IACzCF,SAAS,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EACxC;UACAJ,aAAa,CAAC,KAAK,CAAC;QACtB,CAAC,MAAM;UACLA,aAAa,CAAC,KAAK,CAAC;QACtB;MACF,CAAC,MAAM;QACLA,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC,MAAM;MACL,IAAI,CAACb,MAAM,EAAE;QACXa,aAAa,CAAC,KAAK,CAAC;MACtB,CAAC,MAAM;QACLA,aAAa,CAAC,KAAK,CAAC;MACtB;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAGN,IAAMK,iBAAiB,GAAG;IAAEC,KAAK,EAAE5B,MAAM,CAAC6B;EAAU,CAAC;EAErD,OACE3B,IAAA,CAACN,IAAI,EAAAS,aAAA,CAAAA,aAAA,KACCM,IAAI;IACRL,KAAK,EAAE,CAACqB,iBAAiB,EAAErB,KAAK,EAAEQ,SAAS,EAAE;MAAEO,UAAU,EAAVA;IAAW,CAAC,CAAE;IAC7DX,aAAa,EAAEA;EAAc,EAC9B,CAAC;AAEN;AAEA,IAAMK,MAAM,GAAGjB,UAAU,CAACgC,MAAM,CAAC;EAC/Bd,UAAU,EAAE;IACVT,UAAU,EAAEV,KAAK,CAACkC,WAAW,CAACxB;EAChC,CAAC;EACDU,QAAQ,EAAE;IACRV,UAAU,EAAEV,KAAK,CAACmC,QAAQ,CAACzB;EAC7B;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}