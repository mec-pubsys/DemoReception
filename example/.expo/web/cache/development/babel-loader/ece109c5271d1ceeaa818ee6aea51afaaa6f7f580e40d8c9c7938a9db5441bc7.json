{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { ContinousBaseGesture } from \"./gesture\";\nfunction changeEventCalculator(current, _previous) {\n  'worklet';\n\n  return current;\n}\nexport var ManualGesture = function (_ContinousBaseGesture) {\n  _inherits(ManualGesture, _ContinousBaseGesture);\n  var _super = _createSuper(ManualGesture);\n  function ManualGesture() {\n    var _this;\n    _classCallCheck(this, ManualGesture);\n    _this = _super.call(this);\n    _this.handlerName = 'ManualGestureHandler';\n    return _this;\n  }\n  _createClass(ManualGesture, [{\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return _get(_getPrototypeOf(ManualGesture.prototype), \"onChange\", this).call(this, callback);\n    }\n  }]);\n  return ManualGesture;\n}(ContinousBaseGesture);","map":{"version":3,"names":["ContinousBaseGesture","changeEventCalculator","current","_previous","ManualGesture","_ContinousBaseGesture","_inherits","_super","_createSuper","_this","_classCallCheck","call","handlerName","_createClass","key","value","onChange","callback","handlers","_get","_getPrototypeOf","prototype"],"sources":["/home/runner/work/DemoReception/DemoReception/example/node_modules/react-native-gesture-handler/src/handlers/gestures/manualGesture.ts"],"sourcesContent":["import { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport { ContinousBaseGesture } from './gesture';\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<Record<string, never>>,\n  _previous?: GestureUpdateEvent<Record<string, never>>\n) {\n  'worklet';\n  return current;\n}\n\nexport class ManualGesture extends ContinousBaseGesture<\n  Record<string, never>,\n  Record<string, never>\n> {\n  constructor() {\n    super();\n\n    this.handlerName = 'ManualGestureHandler';\n  }\n\n  onChange(\n    callback: (event: GestureUpdateEvent<Record<string, never>>) => void\n  ) {\n    // @ts-ignore TS being overprotective, Record<string, never> is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ManualGestureType = InstanceType<typeof ManualGesture>;\n"],"mappings":";;;;;;;;;;AACA,SAASA,oBAAoB;AAE7B,SAASC,qBAAqBA,CAC5BC,OAAkD,EAClDC,SAAqD,EACrD;EACA,SAAS;;EACT,OAAOD,OAAO;AAChB;AAEA,WAAaE,aAAa,aAAAC,qBAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,aAAA;EAIxB,SAAAA,cAAA,EAAc;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,aAAA;IACZK,KAAA,GAAAF,MAAA,CAAAI,IAAA;IAEAF,KAAA,CAAKG,WAAW,GAAG,sBAAsB;IAAA,OAAAH,KAAA;EAC3C;EAAAI,YAAA,CAAAT,aAAA;IAAAU,GAAA;IAAAC,KAAA,EAEA,SAAAC,SACEC,QAAoE,EACpE;MAEA,IAAI,CAACC,QAAQ,CAACjB,qBAAqB,GAAGA,qBAAqB;MAC3D,OAAAkB,IAAA,CAAAC,eAAA,CAAAhB,aAAA,CAAAiB,SAAA,qBAAAV,IAAA,OAAsBM,QAAQ;IAChC;EAAA;EAAA,OAAAb,aAAA;AAAA,EAhBiCJ,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}