{"ast":null,"code":"import React from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { HiraginoKakuText } from \"../StyledText\";\nimport { ButtonSmallBold, ButtonMediumBold } from \"../../styles/typography\";\nimport { colors } from \"../../styles/color\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Button = function Button(props) {\n  var _props$buttonWidth, _props$style;\n  var defaultOnPress = function defaultOnPress() {};\n  var buttonStyle = props.type === \"ButtonMPrimary\" ? styles.ButtonMPrimary : props.type === \"ButtonMDisable\" ? styles.ButtonMDisable : props.type === \"ButtonSDisable\" ? styles.ButtonSDisable : props.type === \"ButtonLPrimary\" ? styles.ButtonLPrimary : props.type === \"ButtonSPrimary\" ? styles.ButtonSPrimary : props.type === \"ButtonLGray\" ? styles.ButtonLGray : props.type === \"ButtonMediumGray\" ? styles.ButtonMediumGray : props.type === \"ButtonSGray\" ? styles.ButtonSGray : props.type === \"ButtonLText\" ? styles.ButtonLText : props.type === \"ButtonMGray\" ? styles.ButtonMGray : props.type === \"ButtonMSecondary\" ? styles.ButtonMSecondary : {};\n  var defaultFontSize = props.type === \"ButtonMPrimary\" ? 16 : props.type === \"ButtonMDisable\" ? ButtonSmallBold.size : props.type === \"ButtonLPrimary\" ? ButtonMediumBold.size : props.type === \"ButtonSPrimary\" ? ButtonSmallBold.size : props.type === \"ButtonLGray\" ? ButtonMediumBold.size : props.type === \"ButtonMediumGray\" ? ButtonSmallBold.size : props.type === \"ButtonMSecondary\" ? ButtonSmallBold.size : props.type === \"ButtonSGray\" ? ButtonSmallBold.size : props.type === \"ButtonLText\" ? ButtonMediumBold.size : props.type === \"ButtonMGray\" ? ButtonSmallBold.size : ButtonMediumBold.size;\n  var buttonTextStyle = {\n    fontSize: props.textSize || defaultFontSize\n  };\n  return _jsxs(Pressable, {\n    onPress: props.onPress || defaultOnPress,\n    style: [styles.buttonContainer, buttonStyle, props.style, {\n      width: ((_props$buttonWidth = props.buttonWidth) != null ? _props$buttonWidth : 0 > 0) ? props.buttonWidth : (_props$style = props.style) == null ? void 0 : _props$style.width\n    }],\n    disabled: props.type === \"ButtonMDisable\" || props.type === \"ButtonSDisable\",\n    children: [props.iconPosition === \"front\" && props.icon && _jsx(View, {\n      children: props.icon\n    }), props.iconPosition === \"center\" && props.icon != null && _jsx(View, {\n      children: props.icon\n    }), (props.icon == null || props.iconPosition !== \"center\") && _jsx(HiraginoKakuText, {\n      style: [buttonStyle, buttonTextStyle],\n      children: props.text\n    }), props.iconPosition === \"behind\" && props.icon && _jsx(View, {\n      children: props.icon\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  ButtonMPrimary: {\n    gap: 8,\n    backgroundColor: colors.primary,\n    color: colors.secondary,\n    fontWeight: \"600\"\n  },\n  ButtonMDisable: {\n    gap: 8,\n    backgroundColor: colors.gray,\n    color: colors.greyTextColor,\n    fontWeight: ButtonSmallBold.weight\n  },\n  ButtonSDisable: {\n    gap: 8,\n    backgroundColor: colors.gray,\n    color: colors.greyTextColor\n  },\n  ButtonLPrimary: {\n    gap: 8,\n    backgroundColor: colors.primary,\n    color: colors.secondary,\n    fontWeight: \"600\"\n  },\n  ButtonSPrimary: {\n    gap: 8,\n    backgroundColor: colors.primary,\n    color: colors.secondary,\n    fontWeight: \"600\",\n    lineHeight: ButtonSmallBold.lineHeight\n  },\n  ButtonLGray: {\n    gap: 8,\n    backgroundColor: colors.secondary,\n    color: colors.textColor,\n    fontWeight: \"600\"\n  },\n  ButtonMediumGray: {\n    gap: 8,\n    backgroundColor: colors.secondary,\n    color: colors.textColor,\n    fontWeight: \"600\",\n    height: 24\n  },\n  ButtonSGray: {\n    gap: 8,\n    backgroundColor: colors.secondary,\n    color: colors.textColor,\n    fontWeight: \"600\",\n    lineHeight: ButtonSmallBold.lineHeight\n  },\n  ButtonLText: {\n    gap: 8,\n    backgroundColor: colors.secondary,\n    fontWeight: \"600\",\n    color: colors.primary,\n    fontSize: ButtonMediumBold.size\n  },\n  ButtonMGray: {\n    gap: 8,\n    backgroundColor: colors.secondary,\n    color: colors.textColor,\n    fontWeight: \"600\"\n  },\n  ButtonMSecondary: {\n    gap: 8,\n    color: colors.primary,\n    borderColor: colors.primary,\n    backgroundColor: colors.secondary\n  }\n});","map":{"version":3,"names":["React","Pressable","StyleSheet","View","HiraginoKakuText","ButtonSmallBold","ButtonMediumBold","colors","jsx","_jsx","jsxs","_jsxs","Button","props","_props$buttonWidth","_props$style","defaultOnPress","buttonStyle","type","styles","ButtonMPrimary","ButtonMDisable","ButtonSDisable","ButtonLPrimary","ButtonSPrimary","ButtonLGray","ButtonMediumGray","ButtonSGray","ButtonLText","ButtonMGray","ButtonMSecondary","defaultFontSize","size","buttonTextStyle","fontSize","textSize","onPress","style","buttonContainer","width","buttonWidth","disabled","children","iconPosition","icon","text","create","display","alignItems","justifyContent","gap","backgroundColor","primary","color","secondary","fontWeight","gray","greyTextColor","weight","lineHeight","textColor","height","borderColor"],"sources":["/home/runner/work/DemoReception/DemoReception/example/src/components/basics/Button.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Pressable,\n  StyleSheet,\n  ViewStyle,\n  View,\n  GestureResponderEvent,\n} from \"react-native\";\nimport { HiraginoKakuText } from \"../StyledText\";\nimport { ButtonSmallBold, ButtonMediumBold } from \"../../styles/typography\";\nimport { colors } from \"../../styles/color\";\n\ntype ButtonProps = {\n  onPress?: (() => void) | ((event: GestureResponderEvent) => void);\n  text: string;\n  type?:\n    | \"ButtonMPrimary\"\n    | \"ButtonMDisable\"\n    | \"ButtonSDisable\"\n    | \"ButtonLPrimary\"\n    | \"ButtonSPrimary\"\n    | \"ButtonLGray\"\n    | \"ButtonMediumGray\"\n    | \"ButtonSGray\"\n    | \"ButtonLText\"\n    | \"ButtonMGray\"\n    | \"ButtonMSecondary\";\n  style?: ViewStyle;\n  textSize?: number;\n  icon?: React.ReactNode;\n  iconPosition?: \"front\" | \"behind\" | \"center\";\n  buttonWidth?: number;\n};\n\nexport const Button = (props: ButtonProps) => {\n  const defaultOnPress = () => {};\n\n  const buttonStyle =\n    props.type === \"ButtonMPrimary\"\n      ? styles.ButtonMPrimary\n      : props.type === \"ButtonMDisable\"\n      ? styles.ButtonMDisable\n      : props.type === \"ButtonSDisable\"\n      ? styles.ButtonSDisable\n      : props.type === \"ButtonLPrimary\"\n      ? styles.ButtonLPrimary\n      : props.type === \"ButtonSPrimary\"\n      ? styles.ButtonSPrimary\n      : props.type === \"ButtonLGray\"\n      ? styles.ButtonLGray\n      : props.type === \"ButtonMediumGray\"\n      ? styles.ButtonMediumGray\n      : props.type === \"ButtonSGray\"\n      ? styles.ButtonSGray\n      : props.type === \"ButtonLText\"\n      ? styles.ButtonLText\n      : props.type === \"ButtonMGray\"\n      ? styles.ButtonMGray\n      : props.type === \"ButtonMSecondary\"\n      ? styles.ButtonMSecondary\n      : {};\n\n  const defaultFontSize =\n    props.type === \"ButtonMPrimary\"\n      ? 16\n      : props.type === \"ButtonMDisable\"\n      ? ButtonSmallBold.size\n      : props.type === \"ButtonLPrimary\"\n      ? ButtonMediumBold.size\n      : props.type === \"ButtonSPrimary\"\n      ? ButtonSmallBold.size\n      : props.type === \"ButtonLGray\"\n      ? ButtonMediumBold.size\n      : props.type === \"ButtonMediumGray\"\n      ? ButtonSmallBold.size\n      : props.type === \"ButtonMSecondary\"\n      ? ButtonSmallBold.size\n      : props.type === \"ButtonSGray\"\n      ? ButtonSmallBold.size\n      : props.type === \"ButtonLText\"\n      ? ButtonMediumBold.size\n      : props.type === \"ButtonMGray\"\n      ? ButtonSmallBold.size\n      : ButtonMediumBold.size;\n\n  const buttonTextStyle = {\n    fontSize: props.textSize || defaultFontSize,\n  };\n\n  return (\n    <Pressable\n      onPress={props.onPress || defaultOnPress}\n      style={[\n        styles.buttonContainer,\n        buttonStyle,\n        props.style,\n        {\n          width:\n            props.buttonWidth ?? 0 > 0 ? props.buttonWidth : props.style?.width,\n        },\n      ]}\n      disabled={\n        props.type === \"ButtonMDisable\" || props.type === \"ButtonSDisable\"\n      }\n    >\n      {props.iconPosition === \"front\" && props.icon && (\n        <View>{props.icon}</View>\n      )}\n      {props.iconPosition === \"center\" && props.icon != null && (\n        <View>{props.icon}</View>\n      )}\n      {(props.icon == null || props.iconPosition !== \"center\") && (\n        <HiraginoKakuText style={[buttonStyle, buttonTextStyle]}>\n          {props.text}\n        </HiraginoKakuText>\n      )}\n      {props.iconPosition === \"behind\" && props.icon && (\n        <View>{props.icon}</View>\n      )}\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  ButtonMPrimary: {\n    gap: 8,\n    backgroundColor: colors.primary,\n    color: colors.secondary,\n    fontWeight: \"600\",\n  },\n  ButtonMDisable: {\n    gap: 8,\n    backgroundColor: colors.gray,\n    color: colors.greyTextColor,\n    fontWeight: ButtonSmallBold.weight,\n  },\n  ButtonSDisable: {\n    gap: 8,\n    backgroundColor: colors.gray,\n    color: colors.greyTextColor,\n  },\n  ButtonLPrimary: {\n    gap: 8,\n    backgroundColor: colors.primary,\n    color: colors.secondary,\n    fontWeight: \"600\",\n  },\n  ButtonSPrimary: {\n    gap: 8,\n    backgroundColor: colors.primary,\n    color: colors.secondary,\n    fontWeight: \"600\",\n    lineHeight: ButtonSmallBold.lineHeight,\n  },\n  ButtonLGray: {\n    gap: 8,\n    backgroundColor: colors.secondary,\n    color: colors.textColor,\n    fontWeight: \"600\",\n  },\n  ButtonMediumGray: {\n    gap: 8,\n    backgroundColor: colors.secondary,\n    color: colors.textColor,\n    fontWeight: \"600\",\n    height: 24,\n  },\n  ButtonSGray: {\n    gap: 8,\n    backgroundColor: colors.secondary,\n    color: colors.textColor,\n    fontWeight: \"600\",\n    lineHeight: ButtonSmallBold.lineHeight,\n  },\n  ButtonLText: {\n    gap: 8,\n    backgroundColor: colors.secondary,\n    fontWeight: \"600\",\n    color: colors.primary,\n    fontSize: ButtonMediumBold.size,\n  },\n  ButtonMGray: {\n    gap: 8,\n    backgroundColor: colors.secondary,\n    color: colors.textColor,\n    fontWeight: \"600\",\n  },\n  ButtonMSecondary: {\n    gap: 8,\n    color: colors.primary,\n    borderColor: colors.primary,\n    backgroundColor: colors.secondary,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}