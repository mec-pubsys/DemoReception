{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { HiraginoKakuText } from \"../../components/StyledText\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport styles from \"./LoginStyles\";\nimport { colors } from \"../../styles/color\";\nimport ModalPopup from \"../completion/Completion\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { Button } from \"../../components/basics/Button\";\nimport { realtimeDB } from \"../../config/firebaseConfig\";\nimport { get, ref } from \"firebase/database\";\nimport * as crypto from \"crypto-js\";\nimport { EventListParams } from \"../event-list/EventListParams\";\nimport { User } from \"../../models/User\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    userid = _useState2[0],\n    setUserId = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showPassword = _useState6[0],\n    setShowPassword = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    errorMessage = _useState8[0],\n    setErrorMessage = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    inputNotEmpty = _useState10[0],\n    setInputNotEmpty = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isModalVisible = _useState12[0],\n    setModalVisible = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isLogoutModalVisible = _useState14[0],\n    setLogoutModalVisible = _useState14[1];\n  useEffect(function () {\n    ActivityLogger.insertInfoLogEntry(new User(), 'Login', 'useEffect', 'screen open');\n  }, []);\n  var checkLogin = function checkLogin() {\n    ActivityLogger.insertInfoLogEntry(new User(), 'Login', 'checkLogin', 'login', '', null, '', 'userid=' + userid + ',password=' + password);\n    var userRef = ref(realtimeDB, \"baseMember\");\n    get(userRef).then(function (snapshot) {\n      if (snapshot.exists()) {\n        var userData = snapshot.val();\n        var loggedIn = false;\n        for (var userId in userData) {\n          if (userData.hasOwnProperty(userId)) {\n            var user = userData[userId];\n            var hashpassword = crypto.SHA256(password).toString(crypto.enc.Hex);\n            if (user.id === userid && user.password === hashpassword) {\n              loggedIn = true;\n              setErrorMessage(\"\");\n              var eventListParams = new EventListParams();\n              var _user = new User();\n              _user.userId = userid;\n              eventListParams.user = _user;\n              navigation.navigate(\"EventList\", {\n                eventListParams: eventListParams\n              });\n              ActivityLogger.insertInfoLogEntry(_user, 'Login', 'checkLogin', 'transition', 'EventList', eventListParams);\n              console.log(\"ログイン成功\");\n              break;\n            }\n          }\n        }\n        if (!loggedIn) {\n          setErrorMessage(\"IDまたはパスワードが正しくありません\");\n          console.log(\"IDまたはパスワードが正しくありません\");\n        }\n      } else {\n        console.log(\"ユーザーデータが見つかりません\");\n      }\n    }).catch(function (error) {\n      console.error(\"ユーザーデータの取得に失敗しました\", error);\n    });\n  };\n  var togglePasswordVisibility = function togglePasswordVisibility() {\n    setShowPassword(!showPassword);\n  };\n  var handleInputChange = function handleInputChange(text) {\n    var isPassword = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (isPassword) {\n      setPassword(text);\n      setInputNotEmpty(userid.trim().length > 0 && text.trim().length > 0);\n    } else {\n      setUserId(text);\n      setInputNotEmpty(text.trim().length > 0 && password.trim().length > 0);\n    }\n  };\n  useEffect(function () {\n    var timeOut = setTimeout(function () {\n      closeModal();\n    }, 10000);\n    return function () {\n      return clearTimeout(timeOut);\n    };\n  });\n  var openCompletionModal = function openCompletionModal() {\n    setModalVisible(true);\n  };\n  var closeModal = function closeModal() {\n    setModalVisible(false);\n  };\n  var openLogoutModal = function openLogoutModal() {\n    setLogoutModalVisible(true);\n  };\n  var handleFirstButton = function handleFirstButton() {\n    setLogoutModalVisible(false);\n  };\n  var handleSecondButton = function handleSecondButton() {\n    setLogoutModalVisible(false);\n  };\n  return _jsx(KeyboardAwareScrollView, {\n    style: {\n      flex: 1,\n      width: \"100%\"\n    },\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    contentContainerStyle: styles.mainContainer,\n    scrollEnabled: false,\n    children: _jsxs(SafeAreaView, {\n      style: styles.mainContainer,\n      children: [_jsx(StatusBar, {\n        barStyle: \"dark-content\"\n      }), _jsx(View, {\n        style: styles.headerContainer,\n        children: _jsx(HiraginoKakuText, {\n          style: styles.headerText,\n          children: \"\\u53D7\\u4ED8\\u30B7\\u30B9\\u30C6\\u30E0\"\n        })\n      }), _jsxs(View, {\n        style: styles.bodyContainer,\n        children: [_jsx(HiraginoKakuText, {\n          style: styles.loginText,\n          children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n        }), _jsxs(View, {\n          style: styles.infoBox,\n          children: [_jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsxs(View, {\n              style: styles.labelInputSetBox,\n              children: [_jsx(HiraginoKakuText, {\n                style: styles.label,\n                children: \"ID\"\n              }), _jsx(TextInput, {\n                style: styles.input,\n                placeholder: \"ID\",\n                placeholderTextColor: colors.placeholderTextColor,\n                onChangeText: function onChangeText(text) {\n                  return handleInputChange(text, false);\n                },\n                value: userid\n              })]\n            }), _jsxs(View, {\n              style: styles.labelInputSetBox,\n              children: [_jsx(HiraginoKakuText, {\n                style: styles.label,\n                children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n              }), _jsxs(View, {\n                children: [_jsx(TextInput, {\n                  secureTextEntry: !showPassword,\n                  placeholder: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n                  placeholderTextColor: colors.placeholderTextColor,\n                  value: password,\n                  onChangeText: function onChangeText(text) {\n                    return handleInputChange(text, true);\n                  },\n                  style: [styles.input, styles.inputPassword]\n                }), _jsx(Pressable, {\n                  style: styles.eyeIconContainer,\n                  onPress: togglePasswordVisibility,\n                  hitSlop: 16,\n                  children: showPassword ? _jsx(Ionicons, {\n                    name: \"eye\",\n                    size: 24,\n                    color: \"black\",\n                    style: styles.eyeIcon\n                  }) : _jsx(Ionicons, {\n                    name: \"eye-off\",\n                    size: 24,\n                    color: \"black\",\n                    style: styles.eyeIcon\n                  })\n                }), _jsx(View, {\n                  style: styles.messageContainer,\n                  children: errorMessage !== \"\" && _jsx(HiraginoKakuText, {\n                    style: styles.errorMessage,\n                    normal: true,\n                    children: errorMessage\n                  })\n                })]\n              })]\n            })]\n          }), _jsx(Button, {\n            text: \"\\u30ED\\u30B0\\u30A4\\u30F3\",\n            onPress: checkLogin,\n            style: styles.buttonLogin,\n            type: inputNotEmpty ? \"ButtonMPrimary\" : \"ButtonMDisable\"\n          })]\n        })]\n      }), _jsx(Modal, {\n        transparent: true,\n        visible: isModalVisible,\n        onRequestClose: closeModal,\n        children: _jsx(ModalPopup, {\n          closeModal: closeModal\n        })\n      })]\n    })\n  });\n};","map":{"version":3,"names":["React","useEffect","useState","View","TextInput","Pressable","StatusBar","SafeAreaView","Modal","HiraginoKakuText","Ionicons","styles","colors","ModalPopup","KeyboardAwareScrollView","Button","realtimeDB","get","ref","crypto","EventListParams","User","ActivityLogger","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","userid","setUserId","_useState3","_useState4","password","setPassword","_useState5","_useState6","showPassword","setShowPassword","_useState7","_useState8","errorMessage","setErrorMessage","_useState9","_useState10","inputNotEmpty","setInputNotEmpty","_useState11","_useState12","isModalVisible","setModalVisible","_useState13","_useState14","isLogoutModalVisible","setLogoutModalVisible","insertInfoLogEntry","checkLogin","userRef","then","snapshot","exists","userData","val","loggedIn","userId","hasOwnProperty","user","hashpassword","SHA256","toString","enc","Hex","id","eventListParams","navigate","console","log","catch","error","togglePasswordVisibility","handleInputChange","text","isPassword","arguments","length","undefined","trim","timeOut","setTimeout","closeModal","clearTimeout","openCompletionModal","openLogoutModal","handleFirstButton","handleSecondButton","style","flex","width","resetScrollToCoords","x","y","contentContainerStyle","mainContainer","scrollEnabled","children","barStyle","headerContainer","headerText","bodyContainer","loginText","infoBox","inputContainer","labelInputSetBox","label","input","placeholder","placeholderTextColor","onChangeText","value","secureTextEntry","inputPassword","eyeIconContainer","onPress","hitSlop","name","size","color","eyeIcon","messageContainer","normal","buttonLogin","type","transparent","visible","onRequestClose"],"sources":["/home/runner/work/DemoReception/DemoReception/example/src/screens/login/Login.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  TextInput,\n  Pressable,\n  StatusBar,\n  SafeAreaView,\n  Modal,\n} from \"react-native\";\nimport { HiraginoKakuText } from \"../../components/StyledText\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport styles from \"./LoginStyles\";\nimport { colors } from \"../../styles/color\";\nimport ModalPopup from \"../completion/Completion\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { Button } from \"../../components/basics/Button\";\nimport { NavigationProp } from \"@react-navigation/native\";\nimport { realtimeDB } from \"../../config/firebaseConfig\";\nimport { get, ref } from \"firebase/database\";\nimport * as crypto from \"crypto-js\";\nimport { EventListParams } from \"../event-list/EventListParams\";\nimport { User } from \"../../models/User\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\n\ntype Props = {\n  navigation: NavigationProp<any, any>;\n};\n\nexport const Login = ({ navigation }: Props) => {\n  const [userid, setUserId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [inputNotEmpty, setInputNotEmpty] = useState(false);\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isLogoutModalVisible, setLogoutModalVisible] = useState(false);\n\n  useEffect(() => {\n    ActivityLogger.insertInfoLogEntry(new User(), 'Login', 'useEffect', 'screen open');\n  }, []);\n\n  const checkLogin = () => {\n    ActivityLogger.insertInfoLogEntry(new User(), 'Login', 'checkLogin', 'login', '', null, '', 'userid=' + userid + ',password=' + password);\n\n    const userRef = ref(realtimeDB, \"baseMember\");\n    // 'baseMember'ノードからデータをフェッチする\n    get(userRef)\n      .then((snapshot) => {\n        if (snapshot.exists()) {\n          const userData = snapshot.val();\n\n          // ログインをチェック\n          let loggedIn = false;\n          for (const userId in userData) {\n            if (userData.hasOwnProperty(userId)) {\n              const user = userData[userId];\n              let hashpassword = crypto\n                .SHA256(password)\n                .toString(crypto.enc.Hex);\n              if (user.id === userid && user.password === hashpassword) {\n                loggedIn = true;\n                setErrorMessage(\"\");\n\n                const eventListParams = new EventListParams();\n                const user = new User();\n                user.userId = userid;\n                eventListParams.user = user;\n                navigation.navigate(\"EventList\", { eventListParams });\n                ActivityLogger.insertInfoLogEntry(user, 'Login', 'checkLogin', 'transition', 'EventList', eventListParams);\n                console.log(\"ログイン成功\");\n                break;\n              }\n            }\n          }\n          if (!loggedIn) {\n            setErrorMessage(\"IDまたはパスワードが正しくありません\");\n            console.log(\"IDまたはパスワードが正しくありません\");\n          }\n        } else {\n          console.log(\"ユーザーデータが見つかりません\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"ユーザーデータの取得に失敗しました\", error);\n      });\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleInputChange = (text: string, isPassword: boolean = false) => {\n    if (isPassword) {\n      setPassword(text);\n      setInputNotEmpty(userid.trim().length > 0 && text.trim().length > 0);\n    } else {\n      setUserId(text);\n      setInputNotEmpty(text.trim().length > 0 && password.trim().length > 0);\n    }\n  };\n\n  useEffect(() => {\n    let timeOut = setTimeout(() => {\n      closeModal();\n    }, 10000);\n    return () => clearTimeout(timeOut);\n  });\n\n  const openCompletionModal = () => {\n    setModalVisible(true);\n  };\n\n  const closeModal = () => {\n    setModalVisible(false);\n  };\n\n  const openLogoutModal = () => {\n    setLogoutModalVisible(true);\n  };\n\n  const handleFirstButton = () => {\n    setLogoutModalVisible(false);\n  };\n\n  const handleSecondButton = () => {\n    setLogoutModalVisible(false);\n  };\n\n  return (\n    <KeyboardAwareScrollView\n      style={{ flex: 1, width: \"100%\" }}\n      resetScrollToCoords={{ x: 0, y: 0 }}\n      contentContainerStyle={styles.mainContainer}\n      scrollEnabled={false}\n    >\n      <SafeAreaView style={styles.mainContainer}>\n        <StatusBar barStyle=\"dark-content\" />\n        <View style={styles.headerContainer}>\n          <HiraginoKakuText style={styles.headerText}>\n            受付システム\n          </HiraginoKakuText>\n        </View>\n        <View style={styles.bodyContainer}>\n          <HiraginoKakuText style={styles.loginText}>ログイン</HiraginoKakuText>\n          <View style={styles.infoBox}>\n            <View style={styles.inputContainer}>\n              <View style={styles.labelInputSetBox}>\n                <HiraginoKakuText style={styles.label}>ID</HiraginoKakuText>\n                <TextInput\n                  style={styles.input}\n                  placeholder=\"ID\"\n                  placeholderTextColor={colors.placeholderTextColor}\n                  onChangeText={(text) => handleInputChange(text, false)}\n                  value={userid}\n                />\n              </View>\n\n              <View style={styles.labelInputSetBox}>\n                <HiraginoKakuText style={styles.label}>\n                  パスワード\n                </HiraginoKakuText>\n                <View>\n                  <TextInput\n                    secureTextEntry={!showPassword}\n                    placeholder=\"パスワード\"\n                    placeholderTextColor={colors.placeholderTextColor}\n                    value={password}\n                    onChangeText={(text) => handleInputChange(text, true)}\n                    style={[styles.input, styles.inputPassword]}\n                  />\n                  <Pressable\n                    style={styles.eyeIconContainer}\n                    onPress={togglePasswordVisibility}\n                    hitSlop={16}\n                  >\n                    {showPassword ? (\n                      <Ionicons\n                        name=\"eye\"\n                        size={24}\n                        color=\"black\"\n                        style={styles.eyeIcon}\n                      />\n                    ) : (\n                      <Ionicons\n                        name=\"eye-off\"\n                        size={24}\n                        color=\"black\"\n                        style={styles.eyeIcon}\n                      />\n                    )}\n                  </Pressable>\n                  <View style={styles.messageContainer}>\n                    {errorMessage !== \"\" && (\n                      <HiraginoKakuText style={styles.errorMessage} normal>\n                        {errorMessage}\n                      </HiraginoKakuText>\n                    )}\n                  </View>\n                </View>\n              </View>\n            </View>\n            <Button\n              text=\"ログイン\"\n              onPress={checkLogin}\n              style={styles.buttonLogin}\n              type={inputNotEmpty ? \"ButtonMPrimary\" : \"ButtonMDisable\"}\n            />\n          </View>\n        </View>\n        <Modal\n          transparent={true}\n          visible={isModalVisible}\n          onRequestClose={closeModal}\n        >\n          <ModalPopup closeModal={closeModal} />\n        </Modal>\n      </SafeAreaView>\n    </KeyboardAwareScrollView>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}