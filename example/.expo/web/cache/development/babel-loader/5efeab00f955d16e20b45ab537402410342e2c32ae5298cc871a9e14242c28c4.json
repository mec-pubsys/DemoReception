{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { heightPercentageToDP as hp } from \"react-native-responsive-screen\";\nimport styles from \"./GroupCheckInConfirmationStyles\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Header } from \"../../components/basics/header\";\nimport { HiraginoKakuText } from \"../../components/StyledText\";\nimport { Footer } from \"../../components/basics/footer\";\nimport { Button } from \"../../components/basics/Button\";\nimport { MaterialIcons, Feather } from \"@expo/vector-icons\";\nimport { colors } from \"../../styles/color\";\nimport Completion from \"../completion/Completion\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { format } from \"date-fns\";\nimport { SelectReceptionMethodParams } from \"../select-reception-method/SelectReceptionMethodParams\";\nimport { GroupCheckInEditParams } from \"../group-check-in-edit/GroupCheckInEditParams\";\nimport { deleteDataFromReception, fetchGenderName, getCountOfReceivedItems, getReceptionId, insertIntoReceptionHistory, insertReceptionData, insertReceptionDataFamily } from \"./GroupCheckInConfirmationService\";\nimport ExistingLGaPIDDialog from \"../existing-lgap-id-dialog/ExistingLGaPIDDialog\";\nimport { DeviceInfo } from \"../../environments/DeviceInfo\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var GroupCheckInConfirmation = function GroupCheckInConfirmation(_ref) {\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var _ref2 = route.params,\n    groupCheckInConfirmationParams = _ref2.groupCheckInConfirmationParams;\n  var lgapId = groupCheckInConfirmationParams.entrantRecordList.entrantRecordList[0].originalEntrant.lgapId;\n  var DEVICE_ID = DeviceInfo();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    scrollEnabled = _useState2[0],\n    setScrollEnabled = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scrollInfoEnabled = _useState4[0],\n    setScrollInfoEnabled = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isModalVisible = _useState6[0],\n    setModalVisible = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isLgapIdDialogVisible = _useState8[0],\n    setIsLgapIdDialogVisible = _useState8[1];\n  var _useState9 = useState(undefined),\n    _useState10 = _slicedToArray(_useState9, 2),\n    heightContainer = _useState10[0],\n    setHeightContainer = _useState10[1];\n  var _useState11 = useState(groupCheckInConfirmationParams.selectedEntrantIndex),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedId = _useState12[0],\n    setSelectedId = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    layoutHeight = _useState14[0],\n    setLayoutHeight = _useState14[1];\n  useEffect(function () {\n    ActivityLogger.insertInfoLogEntry(groupCheckInConfirmationParams.user, 'GroupCheckInConfirmation', 'useEffect', 'screen open');\n  }, []);\n  useEffect(function () {\n    if (lgapId && groupCheckInConfirmationParams.isScanner) {\n      fetchCountOfReceivedItems(groupCheckInConfirmationParams.eventId, groupCheckInConfirmationParams.entrantRecordList.entrantRecordList[0].originalEntrant.lgapId);\n    }\n    setSelectedId(groupCheckInConfirmationParams.selectedEntrantIndex);\n    handleDivSelect(groupCheckInConfirmationParams.selectedEntrantIndex);\n  }, [groupCheckInConfirmationParams]);\n  useEffect(function () {\n    if (isModalVisible === true) {\n      var timeOut = setTimeout(function () {\n        closeModal();\n      }, 10000);\n      return function () {\n        return clearTimeout(timeOut);\n      };\n    }\n  });\n  var onLayoutHandler = function onLayoutHandler(e) {\n    var height = e.nativeEvent.layout.height;\n    if (height > 250) {\n      setScrollEnabled(true);\n    }\n  };\n  useEffect(function () {}, [layoutHeight]);\n  var fetchCountOfReceivedItems = function () {\n    var _ref3 = _asyncToGenerator(function* (eventId, lgapId) {\n      try {\n        var クエリ結果_受付済み件数 = yield getCountOfReceivedItems(eventId, lgapId);\n        if (クエリ結果_受付済み件数.data.length > 0) {\n          var count = クエリ結果_受付済み件数.data[0].count;\n          if (count > 0) {\n            setIsLgapIdDialogVisible(true);\n            return count;\n          } else {\n            return 0;\n          }\n        } else {\n          console.warn(\"No data received from getCountOfReceivedItems\");\n          return 0;\n        }\n      } catch (error) {\n        console.error(\"Error from fetchCountOfReceivedItems:\", error);\n        return 0;\n      }\n    });\n    return function fetchCountOfReceivedItems(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleAccept = function handleAccept() {\n    setIsLgapIdDialogVisible(false);\n  };\n  var handleCancel = function handleCancel() {\n    var selectReceptionMethodParams = new SelectReceptionMethodParams();\n    selectReceptionMethodParams.eventId = groupCheckInConfirmationParams.eventId;\n    selectReceptionMethodParams.venueId = groupCheckInConfirmationParams.venueId;\n    selectReceptionMethodParams.receptionTypeCode = groupCheckInConfirmationParams.receptionTypeCode;\n    selectReceptionMethodParams.user = groupCheckInConfirmationParams.user;\n    navigation.navigate(\"SelectReceptionMethod\", {\n      selectReceptionMethodParams: selectReceptionMethodParams\n    });\n  };\n  var onLayoutInfoHandler = function onLayoutInfoHandler(e) {\n    var height = e.nativeEvent.layout.height;\n    setLayoutHeight(height);\n    var percentheight = hp(\"48%\") * 1;\n    if ((height != null ? height : 0) == 0) {\n      setHeightContainer(undefined);\n    } else if ((height != null ? height : 0) >= percentheight) {\n      setHeightContainer(percentheight);\n    } else if ((height != null ? height : 0) < percentheight) {\n      setHeightContainer(undefined);\n    }\n    if (height > 300) {\n      setScrollInfoEnabled(true);\n    }\n  };\n  var _useState15 = useState(0),\n    _useState16 = _slicedToArray(_useState15, 2),\n    topPosition = _useState16[0],\n    setTopPosition = _useState16[1];\n  var onLayoutBtnHandler = function onLayoutBtnHandler(e) {\n    var skipBtnPosition = hp(\"51%\") / 2 - hp(\"3.2%\");\n    setTopPosition(skipBtnPosition);\n    var height = e.nativeEvent.layout.height;\n  };\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isLeftCircleVisible = _useState18[0],\n    setIsLeftCircleVisible = _useState18[1];\n  var _useState19 = useState(true),\n    _useState20 = _slicedToArray(_useState19, 2),\n    isRightCircleVisible = _useState20[0],\n    setIsRightCircleVisible = _useState20[1];\n  groupCheckInConfirmationParams.entrantRecordList.entrantRecordList = groupCheckInConfirmationParams.entrantRecordList.entrantRecordList.sort(function (a, b) {\n    return a.modifiedEntrant.familyOrderNumber - b.modifiedEntrant.familyOrderNumber;\n  });\n  var transformedData = groupCheckInConfirmationParams.entrantRecordList.entrantRecordList.map(function (record, index) {\n    return {\n      id: record.modifiedEntrant.familyOrderNumber + 1,\n      lastName: `${record.modifiedEntrant.lastName}`,\n      firstName: `${record.modifiedEntrant.firstName}`,\n      originalEntrant: record.originalEntrant,\n      modifiedEntrant: record.modifiedEntrant,\n      modifiedFlags: record.modifiedFlags\n    };\n  });\n  groupCheckInConfirmationParams.user = groupCheckInConfirmationParams.user;\n  groupCheckInConfirmationParams.eventId = groupCheckInConfirmationParams.eventId;\n  groupCheckInConfirmationParams.venueId = groupCheckInConfirmationParams.venueId;\n  groupCheckInConfirmationParams.receptionTypeCode = groupCheckInConfirmationParams.receptionTypeCode;\n  groupCheckInConfirmationParams.entrantRecordList = groupCheckInConfirmationParams.entrantRecordList;\n  var handleDivSelect = function handleDivSelect(id) {\n    setSelectedId(id);\n    if (id == 1) {\n      setIsLeftCircleVisible(false);\n      setIsRightCircleVisible(true);\n    } else if (id === transformedData[transformedData.length - 1].id) {\n      setIsLeftCircleVisible(true);\n      setIsRightCircleVisible(false);\n    } else {\n      setIsLeftCircleVisible(true);\n      setIsRightCircleVisible(true);\n    }\n  };\n  var renderScrollItem = function renderScrollItem(_ref4) {\n    var item = _ref4.item;\n    return _jsx(Pressable, {\n      onPress: function onPress() {\n        return handleDivSelect(item.id);\n      },\n      children: _jsxs(View, {\n        style: selectedId === item.id ? styles.btnSideDivActive : styles.btnSideDiv,\n        children: [_jsxs(View, {\n          style: styles.scrollContent,\n          children: [_jsxs(HiraginoKakuText, {\n            style: styles.count,\n            children: [item.id, \".\"]\n          }), _jsxs(HiraginoKakuText, {\n            numberOfLines: 1,\n            style: [styles.sideText, item.modifiedFlags.isNameModified || item.modifiedFlags.isKanaNameModified || item.modifiedFlags.isDateOfBirthModified || item.modifiedFlags.isGenderModified || item.modifiedFlags.isPostalCodeModified || item.modifiedFlags.isAddressModified || item.modifiedFlags.isRelationshipModified ? styles.sideTextWidthCorrected : styles.sideTextWidth],\n            normal: true,\n            children: [item.modifiedEntrant.lastName, \"　\", item.modifiedEntrant.firstName]\n          })]\n        }), (item.modifiedFlags.isNameModified || item.modifiedFlags.isKanaNameModified || item.modifiedFlags.isDateOfBirthModified || item.modifiedFlags.isGenderModified || item.modifiedFlags.isPostalCodeModified || item.modifiedFlags.isAddressModified || item.modifiedFlags.isRelationshipModified) && _jsx(View, {\n          style: styles.correctedBadge,\n          children: _jsx(HiraginoKakuText, {\n            style: styles.correctedText,\n            children: \"\\u4FEE\\u6B63\\u6E08\"\n          })\n        })]\n      })\n    });\n  };\n  var OnPreviousCirclePress = function OnPreviousCirclePress() {\n    var currentIndex = transformedData.findIndex(function (item) {\n      return item.id === selectedId;\n    });\n    if (currentIndex > 0) {\n      var previousIndex = transformedData[currentIndex - 1].id;\n      currentIndex = previousIndex;\n      setSelectedId(previousIndex);\n    }\n    if (currentIndex == 1) {\n      setIsLeftCircleVisible(false);\n      setIsRightCircleVisible(true);\n    } else if (currentIndex === transformedData[transformedData.length - 1].id) {\n      setIsLeftCircleVisible(true);\n      setIsRightCircleVisible(false);\n    } else {\n      setIsLeftCircleVisible(true);\n      setIsRightCircleVisible(true);\n    }\n  };\n  var OnNextCirclePress = function OnNextCirclePress() {\n    var currentIndex = transformedData.findIndex(function (item) {\n      return item.id === selectedId;\n    });\n    if (currentIndex < transformedData.length - 1) {\n      var nextIndex = transformedData[currentIndex + 1].id;\n      currentIndex = nextIndex;\n      setSelectedId(nextIndex);\n    }\n    if (currentIndex == 1) {\n      setIsLeftCircleVisible(false);\n      setIsRightCircleVisible(true);\n    } else if (currentIndex === transformedData[transformedData.length - 1].id) {\n      setIsLeftCircleVisible(true);\n      setIsRightCircleVisible(false);\n    } else {\n      setIsLeftCircleVisible(true);\n      setIsRightCircleVisible(true);\n    }\n  };\n  var renderInfoItem = function renderInfoItem() {\n    var selectedData = transformedData.find(function (item) {\n      return item.id === selectedId;\n    });\n    if (selectedData) {\n      fetchGenderNamebyGenderCode(selectedData.modifiedEntrant.genderCode);\n    }\n    return _jsxs(View, {\n      children: [(selectedData == null ? void 0 : selectedData.modifiedEntrant.relationship) !== \"\" && _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: styles.rowContent,\n          children: [_jsx(View, {\n            style: styles.firstContent,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.innerBodyBoldText,\n              children: \"\\u3042\\u306A\\u305F\\u3068\\u306E\\u95A2\\u4FC2\"\n            })\n          }), _jsx(View, {\n            style: !(selectedData != null && selectedData.modifiedFlags.isRelationshipModified) ? styles.secondContent : styles.secondContentCorrected,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.innerBodyText,\n              normal: true,\n              children: selectedData == null ? void 0 : selectedData.modifiedEntrant.relationship\n            })\n          })]\n        }), (selectedData == null ? void 0 : selectedData.modifiedFlags.isRelationshipModified) && _jsx(View, {\n          style: styles.correctedBadge,\n          children: _jsx(HiraginoKakuText, {\n            style: styles.correctedText,\n            children: \"\\u4FEE\\u6B63\\u6E08\"\n          })\n        })]\n      }), ((selectedData == null ? void 0 : selectedData.firstName) || (selectedData == null ? void 0 : selectedData.lastName)) && _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: styles.rowContent,\n          children: [_jsx(View, {\n            style: styles.firstContent,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.innerBodyBoldText,\n              children: \"\\u304A\\u540D\\u524D\"\n            })\n          }), _jsx(View, {\n            style: !selectedData.modifiedFlags.isNameModified ? styles.secondContent : styles.secondContentCorrected,\n            children: _jsxs(HiraginoKakuText, {\n              style: styles.innerBodyText,\n              normal: true,\n              children: [selectedData == null ? void 0 : selectedData.lastName, \"　\", selectedData == null ? void 0 : selectedData.firstName]\n            })\n          })]\n        }), selectedData.modifiedFlags.isNameModified && _jsx(View, {\n          style: styles.correctedBadge,\n          children: _jsx(HiraginoKakuText, {\n            style: styles.correctedText,\n            children: \"\\u4FEE\\u6B63\\u6E08\"\n          })\n        })]\n      }), ((selectedData == null ? void 0 : selectedData.modifiedEntrant.lastNameKana) || (selectedData == null ? void 0 : selectedData.modifiedEntrant.firstNameKana)) && _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: styles.rowContent,\n          children: [_jsx(View, {\n            style: styles.firstContent,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.innerBodyBoldText,\n              children: \"\\u304A\\u540D\\u524D\\uFF08\\u30AB\\u30CA\\uFF09\"\n            })\n          }), _jsx(View, {\n            style: !selectedData.modifiedFlags.isKanaNameModified ? styles.secondContent : styles.secondContentCorrected,\n            children: _jsxs(HiraginoKakuText, {\n              style: styles.innerBodyText,\n              normal: true,\n              children: [selectedData == null ? void 0 : selectedData.modifiedEntrant.lastNameKana, \"　\", selectedData == null ? void 0 : selectedData.modifiedEntrant.firstNameKana]\n            })\n          })]\n        }), selectedData.modifiedFlags.isKanaNameModified && _jsx(View, {\n          style: styles.correctedBadge,\n          children: _jsx(HiraginoKakuText, {\n            style: styles.correctedText,\n            children: \"\\u4FEE\\u6B63\\u6E08\"\n          })\n        })]\n      }), (selectedData == null ? void 0 : selectedData.modifiedEntrant.dateOfBirth) && _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: styles.rowContent,\n          children: [_jsx(View, {\n            style: styles.firstContent,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.innerBodyBoldText,\n              children: \"\\u751F\\u5E74\\u6708\\u65E5\"\n            })\n          }), _jsx(View, {\n            style: !selectedData.modifiedFlags.isDateOfBirthModified ? styles.secondContent : styles.secondContentCorrected,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.innerBodyText,\n              normal: true,\n              children: selectedData != null && selectedData.modifiedEntrant.dateOfBirth ? format(new Date(selectedData.modifiedEntrant.dateOfBirth), \"yyyy年MM月dd日\") : \"N/A\"\n            })\n          })]\n        }), selectedData.modifiedFlags.isDateOfBirthModified && _jsx(View, {\n          style: styles.correctedBadge,\n          children: _jsx(HiraginoKakuText, {\n            style: styles.correctedText,\n            children: \"\\u4FEE\\u6B63\\u6E08\"\n          })\n        })]\n      }), (selectedData == null ? void 0 : selectedData.modifiedEntrant.genderCode) !== \"0\" && _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: styles.rowContent,\n          children: [_jsx(View, {\n            style: styles.firstContent,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.innerBodyBoldText,\n              children: \"\\u6027\\u5225\"\n            })\n          }), _jsx(View, {\n            style: !(selectedData != null && selectedData.modifiedFlags.isGenderModified) ? styles.secondContent : styles.secondContentCorrected,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.innerBodyText,\n              normal: true,\n              children: genderName\n            })\n          })]\n        }), (selectedData == null ? void 0 : selectedData.modifiedFlags.isGenderModified) && _jsx(View, {\n          style: styles.correctedBadge,\n          children: _jsx(HiraginoKakuText, {\n            style: styles.correctedText,\n            children: \"\\u4FEE\\u6B63\\u6E08\"\n          })\n        })]\n      }), (selectedData == null ? void 0 : selectedData.modifiedEntrant.postalCode) && _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: styles.rowContent,\n          children: [_jsx(View, {\n            style: styles.firstContent,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.innerBodyBoldText,\n              children: \"\\u90F5\\u4FBF\\u756A\\u53F7\"\n            })\n          }), _jsx(View, {\n            style: !selectedData.modifiedFlags.isPostalCodeModified ? styles.secondContent : styles.secondContentCorrected,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.innerBodyText,\n              normal: true,\n              children: selectedData == null ? void 0 : selectedData.modifiedEntrant.postalCode\n            })\n          })]\n        }), selectedData.modifiedFlags.isPostalCodeModified && _jsx(View, {\n          style: styles.correctedBadge,\n          children: _jsx(HiraginoKakuText, {\n            style: styles.correctedText,\n            children: \"\\u4FEE\\u6B63\\u6E08\"\n          })\n        })]\n      }), (selectedData == null ? void 0 : selectedData.modifiedEntrant.address) && _jsxs(View, {\n        style: styles.rowAddress,\n        children: [_jsxs(View, {\n          style: styles.rowContent,\n          children: [_jsx(View, {\n            style: styles.firstContentAddress,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.innerBodyBoldText,\n              children: \"\\u4F4F\\u6240\"\n            })\n          }), _jsx(View, {\n            style: !selectedData.modifiedFlags.isAddressModified ? styles.secondContentAddress : styles.secondContentAddressCorrected,\n            children: _jsx(HiraginoKakuText, {\n              style: styles.innerBodyText,\n              normal: true,\n              children: selectedData == null ? void 0 : selectedData.modifiedEntrant.address\n            })\n          })]\n        }), selectedData.modifiedFlags.isAddressModified && _jsx(View, {\n          style: styles.correctedBadge,\n          children: _jsx(HiraginoKakuText, {\n            style: styles.correctedText,\n            children: \"\\u4FEE\\u6B63\\u6E08\"\n          })\n        })]\n      })]\n    });\n  };\n  var handleCompletion = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        var クエリ結果_受付済み件数 = yield fetchCountOfReceivedItems(groupCheckInConfirmationParams.eventId, lgapId);\n        setIsLgapIdDialogVisible(false);\n        if (クエリ結果_受付済み件数 > 0) {\n          var クエリ結果_target_reception_ids = yield getReceptionId(groupCheckInConfirmationParams.eventId, lgapId);\n          if (クエリ結果_target_reception_ids.data.length > 0) {\n            try {\n              var receptionIDs = クエリ結果_target_reception_ids.data;\n              var result = yield insertIntoReceptionHistory(groupCheckInConfirmationParams.eventId, receptionIDs);\n              if (result.message == \"success\") {\n                var d = yield deleteDataFromReception(groupCheckInConfirmationParams.eventId, receptionIDs);\n              }\n            } catch (error) {\n              console.error(\"Error:\", error);\n            }\n          }\n        }\n        openCompletionModal();\n      } catch (error) {\n        console.error(\"Error fetching count of received items:\", error);\n      }\n    });\n    return function handleCompletion() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var openCompletionModal = function openCompletionModal() {\n    setModalVisible(true);\n  };\n  var closeModal = function closeModal() {\n    handleReceptionInsert();\n    setModalVisible(false);\n  };\n  var handleEdit = function handleEdit() {\n    var groupCheckInEditParams = new GroupCheckInEditParams();\n    groupCheckInEditParams.user = groupCheckInConfirmationParams.user;\n    groupCheckInEditParams.eventId = groupCheckInConfirmationParams.eventId;\n    groupCheckInEditParams.venueId = groupCheckInConfirmationParams.venueId;\n    groupCheckInEditParams.entrantRecordList = groupCheckInConfirmationParams.entrantRecordList;\n    groupCheckInEditParams.selectedEntrantIndex = selectedId;\n    navigation.navigate(\"GroupCheckInEdit\", {\n      groupCheckInEditParams: groupCheckInEditParams\n    });\n    ActivityLogger.insertInfoLogEntry(groupCheckInConfirmationParams.user, 'GroupCheckInConfirmation', 'handleEdit', 'transition', 'GroupCheckInEdit', groupCheckInEditParams);\n  };\n  var handleSelectReceptionMethod = function handleSelectReceptionMethod() {\n    var selectReceptionMethodParams = new SelectReceptionMethodParams();\n    selectReceptionMethodParams.eventId = groupCheckInConfirmationParams.eventId;\n    selectReceptionMethodParams.venueId = groupCheckInConfirmationParams.venueId;\n    selectReceptionMethodParams.receptionTypeCode = groupCheckInConfirmationParams.receptionTypeCode;\n    selectReceptionMethodParams.user = groupCheckInConfirmationParams.user;\n    navigation.navigate(\"SelectReceptionMethod\", {\n      selectReceptionMethodParams: selectReceptionMethodParams\n    });\n    ActivityLogger.insertInfoLogEntry(groupCheckInConfirmationParams.user, 'GroupCheckInConfirmation', 'handleSelectReceptionMethod', 'transition', 'SelectReceptionMethod', selectReceptionMethodParams);\n  };\n  var _useState21 = useState(),\n    _useState22 = _slicedToArray(_useState21, 2),\n    genderName = _useState22[0],\n    setGenderName = _useState22[1];\n  var _useState23 = useState(),\n    _useState24 = _slicedToArray(_useState23, 2),\n    message = _useState24[0],\n    setMessage = _useState24[1];\n  var handleReceptionInsert = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var allResults = [];\n      var receptionId = null;\n      var mainEntrants = transformedData.filter(function (data) {\n        return data.modifiedEntrant.familyOrderNumber === 0;\n      });\n      var familyEntrants = transformedData.filter(function (data) {\n        return data.modifiedEntrant.familyOrderNumber !== 0;\n      });\n      try {\n        for (var entrantData of mainEntrants) {\n          var formattedPostCode = entrantData.modifiedEntrant.postalCode.replace(\"-\", \"\");\n          var result = yield insertReceptionData(groupCheckInConfirmationParams.eventId, groupCheckInConfirmationParams.venueId, DEVICE_ID, groupCheckInConfirmationParams.user.userId, entrantData.modifiedEntrant.lgapId, entrantData.modifiedEntrant.userRank, entrantData.modifiedEntrant.lastName, entrantData.modifiedEntrant.firstName, entrantData.modifiedEntrant.lastNameKana, entrantData.modifiedEntrant.firstNameKana, entrantData.modifiedEntrant.dateOfBirth, entrantData.modifiedEntrant.genderCode, formattedPostCode, entrantData.modifiedEntrant.address, entrantData.modifiedEntrant.receptionTypeCode, entrantData.modifiedEntrant.familyOrderNumber);\n          receptionId = result.data[0].reception_id;\n          allResults.push(result);\n        }\n        for (var _entrantData of familyEntrants) {\n          var _formattedPostCode = _entrantData.modifiedEntrant.postalCode.replace(\"-\", \"\");\n          var _result = yield insertReceptionDataFamily(groupCheckInConfirmationParams.eventId, groupCheckInConfirmationParams.venueId, receptionId, _entrantData.modifiedEntrant.familyOrderNumber, DEVICE_ID, groupCheckInConfirmationParams.user.userId, _entrantData.modifiedEntrant.lgapId, _entrantData.modifiedEntrant.userRank, _entrantData.modifiedEntrant.lastName, _entrantData.modifiedEntrant.firstName, _entrantData.modifiedEntrant.lastNameKana, _entrantData.modifiedEntrant.firstNameKana, _entrantData.modifiedEntrant.dateOfBirth, _entrantData.modifiedEntrant.genderCode, _formattedPostCode, _entrantData.modifiedEntrant.address, _entrantData.modifiedEntrant.relationship, _entrantData.modifiedEntrant.receptionTypeCode, _entrantData.modifiedEntrant.familyOrderNumber);\n          allResults.push(_result);\n        }\n        var success = allResults.every(function (result) {\n          return result.message === \"success\";\n        });\n        if (success) {\n          var selectReceptionMethodParams = new SelectReceptionMethodParams();\n          selectReceptionMethodParams.user = groupCheckInConfirmationParams.user;\n          selectReceptionMethodParams.eventId = groupCheckInConfirmationParams.eventId;\n          selectReceptionMethodParams.venueId = groupCheckInConfirmationParams.venueId;\n          selectReceptionMethodParams.receptionTypeCode = groupCheckInConfirmationParams.receptionTypeCode;\n          navigation.navigate(\"SelectReceptionMethod\", {\n            selectReceptionMethodParams: selectReceptionMethodParams\n          });\n          ActivityLogger.insertInfoLogEntry(groupCheckInConfirmationParams.user, 'GroupCheckInConfirmation', 'handleReceptionInsert', 'transition', 'SelectReceptionMethod', selectReceptionMethodParams);\n          setMessage(\"Inserted Successfully!!\");\n        } else {\n          var errorResult = allResults.find(function (result) {\n            return result.message !== \"success\";\n          });\n          var errorMessage = errorResult ? errorResult.message : \"Unknown error occurred\";\n          setMessage(errorMessage);\n        }\n      } catch (error) {\n        console.error(\"Error from ReceptionCreateService:\", error);\n      }\n    });\n    return function handleReceptionInsert() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var fetchGenderNamebyGenderCode = function () {\n    var _ref7 = _asyncToGenerator(function* (genderCode) {\n      try {\n        var result = yield fetchGenderName(genderCode);\n        var _message = result.message;\n        if (_message === \"success\") {\n          setMessage(\"Optained Successfully!!\");\n          setGenderName(result.data[0].name);\n        } else {\n          setMessage(_message);\n        }\n      } catch (error) {\n        console.error(\"Error from GetGenderNameService:\", error);\n      }\n    });\n    return function fetchGenderNamebyGenderCode(_x3) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: styles.mainContainer,\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\"\n    }), _jsx(Header, {\n      titleName: \"\\u53D7\\u4ED8\\u5185\\u5BB9\\u78BA\\u8A8D\",\n      buttonName: \"\\u53D7\\u4ED8\\u3092\\u3084\\u3081\\u308B\",\n      onPress: handleSelectReceptionMethod\n    }), _jsxs(View, {\n      style: styles.bodyContainer,\n      children: [_jsx(View, {\n        style: styles.innerMainTitle,\n        children: _jsx(HiraginoKakuText, {\n          style: styles.innerMainTitleText,\n          children: \"\\u3053\\u306E\\u5185\\u5BB9\\u3067\\u53D7\\u4ED8\\u3057\\u307E\\u3059\\u304B\\uFF1F\"\n        })\n      }), _jsxs(View, {\n        style: styles.outerContainer,\n        children: [_jsxs(View, {\n          style: styles.sideScrollDiv,\n          children: [_jsxs(HiraginoKakuText, {\n            style: styles.sideTitleText,\n            children: [\"\\u53D7\\u4ED8\\u4EBA\\u6570\", groupCheckInConfirmationParams.entrantRecordList.entrantRecordList.length, \"\\u4EBA\"]\n          }), _jsx(FlatList, {\n            style: styles.scrollableGroup,\n            scrollEnabled: scrollEnabled,\n            data: transformedData,\n            renderItem: renderScrollItem,\n            keyExtractor: function keyExtractor(item) {\n              return item.id.toString();\n            },\n            onLayout: onLayoutHandler,\n            contentContainerStyle: styles.scrollableGp\n          })]\n        }), _jsxs(View, {\n          children: [_jsxs(View, {\n            style: [styles.innerBodyContainer],\n            onLayout: onLayoutBtnHandler,\n            children: [_jsxs(View, {\n              style: styles.bodyTitle,\n              children: [_jsx(HiraginoKakuText, {\n                style: styles.bodyTitleText,\n                children: \"\\u53D7\\u4ED8\\u5185\\u5BB9\"\n              }), _jsx(View, {\n                style: styles.buttonContainer,\n                children: _jsx(Button, {\n                  text: \"\\u5185\\u5BB9\\u3092\\u4FEE\\u6B63\\u3059\\u308B\",\n                  type: \"ButtonMSecondary\",\n                  style: styles.btnModify,\n                  icon: _jsx(MaterialIcons, {\n                    name: \"mode-edit\",\n                    size: 24,\n                    color: colors.primary,\n                    style: styles.iconStyle\n                  }),\n                  iconPosition: \"behind\",\n                  onPress: handleEdit\n                })\n              })]\n            }), _jsx(ScrollView, {\n              scrollEnabled: scrollInfoEnabled,\n              children: _jsx(View, {\n                style: {\n                  height: heightContainer\n                },\n                children: _jsx(View, {\n                  onLayout: onLayoutInfoHandler,\n                  children: renderInfoItem()\n                })\n              })\n            })]\n          }), isLeftCircleVisible && _jsx(View, {\n            style: {\n              position: \"absolute\",\n              top: topPosition,\n              left: -26\n            },\n            children: _jsx(Pressable, {\n              onPress: OnPreviousCirclePress,\n              style: styles.chevronLeftButton,\n              children: _jsx(Feather, {\n                name: \"chevron-left\",\n                size: 28,\n                color: colors.secondary\n              })\n            })\n          }), isRightCircleVisible && _jsx(View, {\n            style: {\n              position: \"absolute\",\n              top: topPosition,\n              right: -26\n            },\n            children: _jsx(Pressable, {\n              onPress: OnNextCirclePress,\n              style: styles.chevronRightButton,\n              children: _jsx(Feather, {\n                name: \"chevron-right\",\n                size: 28,\n                color: colors.secondary\n              })\n            })\n          })]\n        })]\n      }), isLgapIdDialogVisible && _jsx(ExistingLGaPIDDialog, {\n        onAccept: handleAccept,\n        onCancel: handleCancel\n      })]\n    }), _jsx(Footer, {\n      rightButtonText: \"\\u53D7\\u4ED8\\u3059\\u308B\",\n      hasPreviousButton: false,\n      showNextIcon: false,\n      onPressNext: handleCompletion\n    }), isModalVisible && _jsx(Completion, {\n      closeModal: closeModal\n    })]\n  });\n};\nexport default GroupCheckInConfirmation;","map":{"version":3,"names":["React","useEffect","useState","SafeAreaView","View","Pressable","FlatList","ScrollView","heightPercentageToDP","hp","styles","StatusBar","Header","HiraginoKakuText","Footer","Button","MaterialIcons","Feather","colors","Completion","useRoute","format","SelectReceptionMethodParams","GroupCheckInEditParams","deleteDataFromReception","fetchGenderName","getCountOfReceivedItems","getReceptionId","insertIntoReceptionHistory","insertReceptionData","insertReceptionDataFamily","ExistingLGaPIDDialog","DeviceInfo","ActivityLogger","jsxs","_jsxs","jsx","_jsx","GroupCheckInConfirmation","_ref","navigation","route","_ref2","params","groupCheckInConfirmationParams","lgapId","entrantRecordList","originalEntrant","DEVICE_ID","_useState","_useState2","_slicedToArray","scrollEnabled","setScrollEnabled","_useState3","_useState4","scrollInfoEnabled","setScrollInfoEnabled","_useState5","_useState6","isModalVisible","setModalVisible","_useState7","_useState8","isLgapIdDialogVisible","setIsLgapIdDialogVisible","_useState9","undefined","_useState10","heightContainer","setHeightContainer","_useState11","selectedEntrantIndex","_useState12","selectedId","setSelectedId","_useState13","_useState14","layoutHeight","setLayoutHeight","insertInfoLogEntry","user","isScanner","fetchCountOfReceivedItems","eventId","handleDivSelect","timeOut","setTimeout","closeModal","clearTimeout","onLayoutHandler","e","height","nativeEvent","layout","_ref3","_asyncToGenerator","クエリ結果_受付済み件数","data","length","count","console","warn","error","_x","_x2","apply","arguments","handleAccept","handleCancel","selectReceptionMethodParams","venueId","receptionTypeCode","navigate","onLayoutInfoHandler","percentheight","_useState15","_useState16","topPosition","setTopPosition","onLayoutBtnHandler","skipBtnPosition","_useState17","_useState18","isLeftCircleVisible","setIsLeftCircleVisible","_useState19","_useState20","isRightCircleVisible","setIsRightCircleVisible","sort","a","b","modifiedEntrant","familyOrderNumber","transformedData","map","record","index","id","lastName","firstName","modifiedFlags","renderScrollItem","_ref4","item","onPress","children","style","btnSideDivActive","btnSideDiv","scrollContent","numberOfLines","sideText","isNameModified","isKanaNameModified","isDateOfBirthModified","isGenderModified","isPostalCodeModified","isAddressModified","isRelationshipModified","sideTextWidthCorrected","sideTextWidth","normal","correctedBadge","correctedText","OnPreviousCirclePress","currentIndex","findIndex","previousIndex","OnNextCirclePress","nextIndex","renderInfoItem","selectedData","find","fetchGenderNamebyGenderCode","genderCode","relationship","row","rowContent","firstContent","innerBodyBoldText","secondContent","secondContentCorrected","innerBodyText","lastNameKana","firstNameKana","dateOfBirth","Date","genderName","postalCode","address","rowAddress","firstContentAddress","secondContentAddress","secondContentAddressCorrected","handleCompletion","_ref5","クエリ結果_target_reception_ids","receptionIDs","result","message","d","openCompletionModal","handleReceptionInsert","handleEdit","groupCheckInEditParams","handleSelectReceptionMethod","_useState21","_useState22","setGenderName","_useState23","_useState24","setMessage","_ref6","allResults","receptionId","mainEntrants","filter","familyEntrants","entrantData","formattedPostCode","replace","userId","userRank","reception_id","push","success","every","errorResult","errorMessage","_ref7","name","_x3","mainContainer","barStyle","titleName","buttonName","bodyContainer","innerMainTitle","innerMainTitleText","outerContainer","sideScrollDiv","sideTitleText","scrollableGroup","renderItem","keyExtractor","toString","onLayout","contentContainerStyle","scrollableGp","innerBodyContainer","bodyTitle","bodyTitleText","buttonContainer","text","type","btnModify","icon","size","color","primary","iconStyle","iconPosition","position","top","left","chevronLeftButton","secondary","right","chevronRightButton","onAccept","onCancel","rightButtonText","hasPreviousButton","showNextIcon","onPressNext"],"sources":["/home/runner/work/DemoReception/DemoReception/example/src/screens/group-check-in-confirmation/GroupCheckInConfirmation.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  SafeAreaView,\n  View,\n  Pressable,\n  FlatList,\n  ScrollView,\n} from \"react-native\";\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from \"react-native-responsive-screen\";\nimport styles from \"./GroupCheckInConfirmationStyles\";\nimport { StatusBar } from \"react-native\";\nimport { Header } from \"../../components/basics/header\";\nimport { HiraginoKakuText } from \"../../components/StyledText\";\nimport { Footer } from \"../../components/basics/footer\";\nimport { Button } from \"../../components/basics/Button\";\nimport { MaterialIcons, Feather } from \"@expo/vector-icons\";\nimport { colors } from \"../../styles/color\";\nimport Completion from \"../completion/Completion\";\nimport { NavigationProp, useRoute } from \"@react-navigation/native\";\nimport { format } from \"date-fns\";\nimport { SelectReceptionMethodParams } from \"../select-reception-method/SelectReceptionMethodParams\";\nimport { GroupCheckInConfirmationParams } from \"./GroupCheckInConfirmationParams\";\nimport { GroupCheckInEditParams } from \"../group-check-in-edit/GroupCheckInEditParams\";\nimport {\n  deleteDataFromReception,\n  fetchGenderName,\n  getCountOfReceivedItems,\n  getReceptionId,\n  insertIntoReceptionHistory,\n  insertReceptionData,\n  insertReceptionDataFamily,\n} from \"./GroupCheckInConfirmationService\";\nimport { Entrant } from \"../../models/Entrant\";\nimport { ModifiedFlags } from \"../../models/ModifiedFlags\";\nimport ExistingLGaPIDDialog from \"../existing-lgap-id-dialog/ExistingLGaPIDDialog\";\nimport { DeviceInfo } from \"../../environments/DeviceInfo\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\n\ntype Props = {\n  navigation: NavigationProp<any, any>;\n};\ntype Params = {\n  groupCheckInConfirmationParams: GroupCheckInConfirmationParams;\n};\n\nexport const GroupCheckInConfirmation = ({ navigation }: Props) => {\n  const route = useRoute();\n  const { groupCheckInConfirmationParams } = route.params as Params;\n  const lgapId =\n    groupCheckInConfirmationParams.entrantRecordList.entrantRecordList[0]\n      .originalEntrant.lgapId;\n  const DEVICE_ID = DeviceInfo();\n\n  const [scrollEnabled, setScrollEnabled] = useState(false);\n  const [scrollInfoEnabled, setScrollInfoEnabled] = useState(false);\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isLgapIdDialogVisible, setIsLgapIdDialogVisible] = useState(false);\n  const [heightContainer, setHeightContainer] = useState<number | undefined>(\n    undefined\n  );\n  let [selectedId, setSelectedId] = useState<number>(\n    groupCheckInConfirmationParams.selectedEntrantIndex\n  );\n  const [layoutHeight, setLayoutHeight] = useState<number>(0);\n  \n  useEffect(() => {\n    ActivityLogger.insertInfoLogEntry(groupCheckInConfirmationParams.user, 'GroupCheckInConfirmation', 'useEffect', 'screen open');\n  }, []);\n\n  useEffect(() => {\n    //LGaP_ID\n    if (lgapId && groupCheckInConfirmationParams.isScanner) {\n      fetchCountOfReceivedItems(\n        groupCheckInConfirmationParams.eventId,\n        groupCheckInConfirmationParams.entrantRecordList.entrantRecordList[0]\n          .originalEntrant.lgapId\n      );\n    }\n\n    setSelectedId(groupCheckInConfirmationParams.selectedEntrantIndex);\n    handleDivSelect(groupCheckInConfirmationParams.selectedEntrantIndex);\n  }, [groupCheckInConfirmationParams]);\n\n  useEffect(() => {\n    if (isModalVisible === true) {\n      let timeOut = setTimeout(() => {\n        closeModal();\n      }, 10000);\n      return () => clearTimeout(timeOut);\n    }\n  });\n\n  const onLayoutHandler = (e: any) => {\n    var { height } = e.nativeEvent.layout;\n    if (height > 250) {\n      setScrollEnabled(true);\n    }\n  };\n\n  useEffect(() => {}, [layoutHeight]);\n\n  // LGaP_ID\n  const fetchCountOfReceivedItems = async (eventId: number, lgapId: string) => {\n    try {\n      const クエリ結果_受付済み件数 = await getCountOfReceivedItems(\n        eventId,\n        lgapId\n      );\n\n      if (クエリ結果_受付済み件数.data.length > 0) {\n        const count = クエリ結果_受付済み件数.data[0].count;\n\n        if (count > 0) {\n          setIsLgapIdDialogVisible(true);\n          return count;\n        } else {\n          return 0;\n        }\n      } else {\n        console.warn(\"No data received from getCountOfReceivedItems\");\n        return 0;\n      }\n    } catch (error) {\n      console.error(\"Error from fetchCountOfReceivedItems:\", error);\n      return 0;\n    }\n  };\n\n  const handleAccept = () => {\n    setIsLgapIdDialogVisible(false);\n  };\n\n  const handleCancel = () => {\n    const selectReceptionMethodParams = new SelectReceptionMethodParams();\n    selectReceptionMethodParams.eventId =\n      groupCheckInConfirmationParams.eventId;\n    selectReceptionMethodParams.venueId =\n      groupCheckInConfirmationParams.venueId;\n    selectReceptionMethodParams.receptionTypeCode =\n      groupCheckInConfirmationParams.receptionTypeCode;\n    selectReceptionMethodParams.user = groupCheckInConfirmationParams.user;\n    navigation.navigate(\"SelectReceptionMethod\", {\n      selectReceptionMethodParams,\n    });\n  };\n\n  const onLayoutInfoHandler = (e: any) => {\n    const { height } = e.nativeEvent.layout;\n    setLayoutHeight(height);\n    let percentheight = hp(\"48%\") * 1;\n\n    if ((height ?? 0) == 0) {\n      setHeightContainer(undefined);\n    } else if ((height ?? 0) >= percentheight) {\n      setHeightContainer(percentheight);\n    } else if ((height ?? 0) < percentheight) {\n      setHeightContainer(undefined);\n    }\n\n    if (height > 300) {\n      setScrollInfoEnabled(true);\n    }\n  };\n\n  // prev next buttons' height\n  const [topPosition, setTopPosition] = useState(0);\n\n  const onLayoutBtnHandler = (e: any) => {\n    let skipBtnPosition = hp(\"51%\") / 2 - hp(\"3.2%\");\n    setTopPosition(skipBtnPosition);\n    var { height } = e.nativeEvent.layout;\n  };\n\n  const [isLeftCircleVisible, setIsLeftCircleVisible] = useState(false);\n  const [isRightCircleVisible, setIsRightCircleVisible] = useState(true);\n\n  interface DataItem {\n    id: number;\n    lastName: string;\n    firstName: string;\n    originalEntrant: Entrant;\n    modifiedEntrant: Entrant;\n    modifiedFlags: ModifiedFlags;\n  }\n  //Asc by familyOrderNumber\n  groupCheckInConfirmationParams.entrantRecordList.entrantRecordList =\n    groupCheckInConfirmationParams.entrantRecordList.entrantRecordList.sort(\n      (a, b) =>\n        a.modifiedEntrant.familyOrderNumber -\n        b.modifiedEntrant.familyOrderNumber\n    );\n  const transformedData: DataItem[] =\n    groupCheckInConfirmationParams.entrantRecordList.entrantRecordList.map(\n      (record, index) => ({\n        id: record.modifiedEntrant.familyOrderNumber + 1,\n        lastName: `${record.modifiedEntrant.lastName}`,\n        firstName: `${record.modifiedEntrant.firstName}`,\n        originalEntrant: record.originalEntrant,\n        modifiedEntrant: record.modifiedEntrant,\n        modifiedFlags: record.modifiedFlags,\n      })\n    );\n\n  groupCheckInConfirmationParams.user = groupCheckInConfirmationParams.user;\n  groupCheckInConfirmationParams.eventId =\n    groupCheckInConfirmationParams.eventId;\n  groupCheckInConfirmationParams.venueId =\n    groupCheckInConfirmationParams.venueId;\n  groupCheckInConfirmationParams.receptionTypeCode =\n    groupCheckInConfirmationParams.receptionTypeCode;\n  groupCheckInConfirmationParams.entrantRecordList =\n    groupCheckInConfirmationParams.entrantRecordList;\n\n  const handleDivSelect = (id: any) => {\n    setSelectedId(id);\n    if (id == 1) {\n      setIsLeftCircleVisible(false);\n      setIsRightCircleVisible(true);\n    } else if (id === transformedData[transformedData.length - 1].id) {\n      setIsLeftCircleVisible(true);\n      setIsRightCircleVisible(false);\n    } else {\n      setIsLeftCircleVisible(true);\n      setIsRightCircleVisible(true);\n    }\n  };\n\n  //Render Scroll Item(Left Container)\n  const renderScrollItem = ({ item }: { item: DataItem }) => (\n    <Pressable onPress={() => handleDivSelect(item.id)}>\n      <View\n        style={\n          selectedId === item.id ? styles.btnSideDivActive : styles.btnSideDiv\n        }\n      >\n        <View style={styles.scrollContent}>\n          <HiraginoKakuText style={styles.count}>{item.id}.</HiraginoKakuText>\n          <HiraginoKakuText\n            numberOfLines={1}\n            style={[\n              styles.sideText,\n              item.modifiedFlags.isNameModified ||\n              item.modifiedFlags.isKanaNameModified ||\n              item.modifiedFlags.isDateOfBirthModified ||\n              item.modifiedFlags.isGenderModified ||\n              item.modifiedFlags.isPostalCodeModified ||\n              item.modifiedFlags.isAddressModified ||\n              item.modifiedFlags.isRelationshipModified\n                ? styles.sideTextWidthCorrected\n                : styles.sideTextWidth,\n            ]}\n            normal\n          >\n            {item.modifiedEntrant.lastName}\n            {\"　\"}\n            {item.modifiedEntrant.firstName}\n          </HiraginoKakuText>\n        </View>\n\n        {(item.modifiedFlags.isNameModified ||\n          item.modifiedFlags.isKanaNameModified ||\n          item.modifiedFlags.isDateOfBirthModified ||\n          item.modifiedFlags.isGenderModified ||\n          item.modifiedFlags.isPostalCodeModified ||\n          item.modifiedFlags.isAddressModified ||\n          item.modifiedFlags.isRelationshipModified) && (\n          <View style={styles.correctedBadge}>\n            <HiraginoKakuText style={styles.correctedText}>\n              修正済\n            </HiraginoKakuText>\n          </View>\n        )}\n      </View>\n    </Pressable>\n  );\n\n  //Previous Person Info\n  const OnPreviousCirclePress = () => {\n    let currentIndex = transformedData.findIndex(\n      (item) => item.id === selectedId\n    );\n    if (currentIndex > 0) {\n      let previousIndex = transformedData[currentIndex - 1].id;\n      currentIndex = previousIndex;\n      setSelectedId(previousIndex);\n    }\n    if (currentIndex == 1) {\n      setIsLeftCircleVisible(false);\n      setIsRightCircleVisible(true);\n    } else if (\n      currentIndex === transformedData[transformedData.length - 1].id\n    ) {\n      setIsLeftCircleVisible(true);\n      setIsRightCircleVisible(false);\n    } else {\n      setIsLeftCircleVisible(true);\n      setIsRightCircleVisible(true);\n    }\n  };\n\n  //Next Person Info\n  const OnNextCirclePress = () => {\n    let currentIndex = transformedData.findIndex(\n      (item) => item.id === selectedId\n    );\n    if (currentIndex < transformedData.length - 1) {\n      let nextIndex = transformedData[currentIndex + 1].id;\n      currentIndex = nextIndex;\n      setSelectedId(nextIndex);\n    }\n    if (currentIndex == 1) {\n      setIsLeftCircleVisible(false);\n      setIsRightCircleVisible(true);\n    } else if (\n      currentIndex === transformedData[transformedData.length - 1].id\n    ) {\n      setIsLeftCircleVisible(true);\n      setIsRightCircleVisible(false);\n    } else {\n      setIsLeftCircleVisible(true);\n      setIsRightCircleVisible(true);\n    }\n  };\n\n  //Render Info Item(Right Container)\n  const renderInfoItem = () => {\n    const selectedData = transformedData.find((item) => item.id === selectedId);\n\n    if (selectedData) {\n      fetchGenderNamebyGenderCode(selectedData.modifiedEntrant.genderCode);\n    }\n    return (\n      <View>\n        {selectedData?.modifiedEntrant.relationship !== \"\" && (\n          <View style={styles.row}>\n            <View style={styles.rowContent}>\n              <View style={styles.firstContent}>\n                <HiraginoKakuText style={styles.innerBodyBoldText}>\n                  あなたとの関係\n                </HiraginoKakuText>\n              </View>\n\n              <View\n                style={\n                  !selectedData?.modifiedFlags.isRelationshipModified\n                    ? styles.secondContent\n                    : styles.secondContentCorrected\n                }\n              >\n                <HiraginoKakuText style={styles.innerBodyText} normal>\n                  {selectedData?.modifiedEntrant.relationship}\n                </HiraginoKakuText>\n              </View>\n            </View>\n            {selectedData?.modifiedFlags.isRelationshipModified && (\n              <View style={styles.correctedBadge}>\n                <HiraginoKakuText style={styles.correctedText}>\n                  修正済\n                </HiraginoKakuText>\n              </View>\n            )}\n          </View>\n        )}\n        {(selectedData?.firstName || selectedData?.lastName) && (\n          <View style={styles.row}>\n            <View style={styles.rowContent}>\n              <View style={styles.firstContent}>\n                <HiraginoKakuText style={styles.innerBodyBoldText}>\n                  お名前\n                </HiraginoKakuText>\n              </View>\n              <View\n                style={\n                  !selectedData.modifiedFlags.isNameModified\n                    ? styles.secondContent\n                    : styles.secondContentCorrected\n                }\n              >\n                <HiraginoKakuText style={styles.innerBodyText} normal>\n                  {selectedData?.lastName}\n                  {\"　\"}\n                  {selectedData?.firstName}\n                </HiraginoKakuText>\n              </View>\n            </View>\n            {selectedData.modifiedFlags.isNameModified && (\n              <View style={styles.correctedBadge}>\n                <HiraginoKakuText style={styles.correctedText}>\n                  修正済\n                </HiraginoKakuText>\n              </View>\n            )}\n          </View>\n        )}\n        {(selectedData?.modifiedEntrant.lastNameKana ||\n          selectedData?.modifiedEntrant.firstNameKana) && (\n          <View style={styles.row}>\n            <View style={styles.rowContent}>\n              <View style={styles.firstContent}>\n                <HiraginoKakuText style={styles.innerBodyBoldText}>\n                  お名前（カナ）\n                </HiraginoKakuText>\n              </View>\n              <View\n                style={\n                  !selectedData.modifiedFlags.isKanaNameModified\n                    ? styles.secondContent\n                    : styles.secondContentCorrected\n                }\n              >\n                <HiraginoKakuText style={styles.innerBodyText} normal>\n                  {selectedData?.modifiedEntrant.lastNameKana}\n                  {\"　\"}\n                  {selectedData?.modifiedEntrant.firstNameKana}\n                </HiraginoKakuText>\n              </View>\n            </View>\n            {selectedData.modifiedFlags.isKanaNameModified && (\n              <View style={styles.correctedBadge}>\n                <HiraginoKakuText style={styles.correctedText}>\n                  修正済\n                </HiraginoKakuText>\n              </View>\n            )}\n          </View>\n        )}\n        {selectedData?.modifiedEntrant.dateOfBirth && (\n          <View style={styles.row}>\n            <View style={styles.rowContent}>\n              <View style={styles.firstContent}>\n                <HiraginoKakuText style={styles.innerBodyBoldText}>\n                  生年月日\n                </HiraginoKakuText>\n              </View>\n              <View\n                style={\n                  !selectedData.modifiedFlags.isDateOfBirthModified\n                    ? styles.secondContent\n                    : styles.secondContentCorrected\n                }\n              >\n                <HiraginoKakuText style={styles.innerBodyText} normal>\n                  {selectedData?.modifiedEntrant.dateOfBirth\n                    ? format(\n                        new Date(selectedData.modifiedEntrant.dateOfBirth),\n                        \"yyyy年MM月dd日\"\n                      )\n                    : \"N/A\"}\n                </HiraginoKakuText>\n              </View>\n            </View>\n            {selectedData.modifiedFlags.isDateOfBirthModified && (\n              <View style={styles.correctedBadge}>\n                <HiraginoKakuText style={styles.correctedText}>\n                  修正済\n                </HiraginoKakuText>\n              </View>\n            )}\n          </View>\n        )}\n        {selectedData?.modifiedEntrant.genderCode !== \"0\" && (\n          <View style={styles.row}>\n            <View style={styles.rowContent}>\n              <View style={styles.firstContent}>\n                <HiraginoKakuText style={styles.innerBodyBoldText}>\n                  性別\n                </HiraginoKakuText>\n              </View>\n              <View\n                style={\n                  !selectedData?.modifiedFlags.isGenderModified\n                    ? styles.secondContent\n                    : styles.secondContentCorrected\n                }\n              >\n                <HiraginoKakuText style={styles.innerBodyText} normal>\n                  {genderName}\n                </HiraginoKakuText>\n              </View>\n            </View>\n            {selectedData?.modifiedFlags.isGenderModified && (\n              <View style={styles.correctedBadge}>\n                <HiraginoKakuText style={styles.correctedText}>\n                  修正済\n                </HiraginoKakuText>\n              </View>\n            )}\n          </View>\n        )}\n        {selectedData?.modifiedEntrant.postalCode && (\n          <View style={styles.row}>\n            <View style={styles.rowContent}>\n              <View style={styles.firstContent}>\n                <HiraginoKakuText style={styles.innerBodyBoldText}>\n                  郵便番号\n                </HiraginoKakuText>\n              </View>\n\n              <View\n                style={\n                  !selectedData.modifiedFlags.isPostalCodeModified\n                    ? styles.secondContent\n                    : styles.secondContentCorrected\n                }\n              >\n                <HiraginoKakuText style={styles.innerBodyText} normal>\n                  {selectedData?.modifiedEntrant.postalCode}\n                </HiraginoKakuText>\n              </View>\n            </View>\n            {selectedData.modifiedFlags.isPostalCodeModified && (\n              <View style={styles.correctedBadge}>\n                <HiraginoKakuText style={styles.correctedText}>\n                  修正済\n                </HiraginoKakuText>\n              </View>\n            )}\n          </View>\n        )}\n        {selectedData?.modifiedEntrant.address && (\n          <View style={styles.rowAddress}>\n            <View style={styles.rowContent}>\n              <View style={styles.firstContentAddress}>\n                <HiraginoKakuText style={styles.innerBodyBoldText}>\n                  住所\n                </HiraginoKakuText>\n              </View>\n              <View\n                style={\n                  !selectedData.modifiedFlags.isAddressModified\n                    ? styles.secondContentAddress\n                    : styles.secondContentAddressCorrected\n                }\n              >\n                <HiraginoKakuText style={styles.innerBodyText} normal>\n                  {selectedData?.modifiedEntrant.address}\n                </HiraginoKakuText>\n              </View>\n            </View>\n            {selectedData.modifiedFlags.isAddressModified && (\n              <View style={styles.correctedBadge}>\n                <HiraginoKakuText style={styles.correctedText}>\n                  修正済\n                </HiraginoKakuText>\n              </View>\n            )}\n          </View>\n        )}\n      </View>\n    );\n  };\n\n  const handleCompletion = async () => {\n    try {\n      const クエリ結果_受付済み件数 = await fetchCountOfReceivedItems(\n        groupCheckInConfirmationParams.eventId,\n        lgapId\n      );\n      setIsLgapIdDialogVisible(false);\n\n      if (クエリ結果_受付済み件数 > 0) {\n        const クエリ結果_target_reception_ids = await getReceptionId(\n          groupCheckInConfirmationParams.eventId,\n          lgapId\n        );\n\n        if (クエリ結果_target_reception_ids.data.length > 0) {\n          try {\n            const receptionIDs = クエリ結果_target_reception_ids.data;\n            const result = await insertIntoReceptionHistory(\n              groupCheckInConfirmationParams.eventId,\n              receptionIDs\n            );\n            if (result.message == \"success\") {\n              const d = await deleteDataFromReception(\n                groupCheckInConfirmationParams.eventId,\n                receptionIDs\n              );\n            }\n          } catch (error) {\n            console.error(\"Error:\", error);\n          }\n        }\n      }\n      openCompletionModal();\n    } catch (error) {\n      console.error(\"Error fetching count of received items:\", error);\n    }\n  };\n\n  const openCompletionModal = () => {\n    setModalVisible(true);\n  };\n\n  const closeModal = () => {\n    handleReceptionInsert();\n    setModalVisible(false);\n  };\n\n  const handleEdit = () => {\n    const groupCheckInEditParams = new GroupCheckInEditParams();\n    groupCheckInEditParams.user = groupCheckInConfirmationParams.user;\n    groupCheckInEditParams.eventId = groupCheckInConfirmationParams.eventId;\n    groupCheckInEditParams.venueId = groupCheckInConfirmationParams.venueId;\n    groupCheckInEditParams.entrantRecordList =\n      groupCheckInConfirmationParams.entrantRecordList;\n    groupCheckInEditParams.selectedEntrantIndex = selectedId;\n    navigation.navigate(\"GroupCheckInEdit\", {\n      groupCheckInEditParams,\n    });\n    ActivityLogger.insertInfoLogEntry(groupCheckInConfirmationParams.user, 'GroupCheckInConfirmation', 'handleEdit', 'transition', 'GroupCheckInEdit', groupCheckInEditParams);\n  };\n\n  const handleSelectReceptionMethod = () => {\n    const selectReceptionMethodParams = new SelectReceptionMethodParams();\n    selectReceptionMethodParams.eventId =\n      groupCheckInConfirmationParams.eventId;\n    selectReceptionMethodParams.venueId =\n      groupCheckInConfirmationParams.venueId;\n    selectReceptionMethodParams.receptionTypeCode =\n      groupCheckInConfirmationParams.receptionTypeCode;\n    selectReceptionMethodParams.user = groupCheckInConfirmationParams.user;\n    navigation.navigate(\"SelectReceptionMethod\", {\n      selectReceptionMethodParams,\n    });\n    ActivityLogger.insertInfoLogEntry(groupCheckInConfirmationParams.user, 'GroupCheckInConfirmation', 'handleSelectReceptionMethod', 'transition', 'SelectReceptionMethod', selectReceptionMethodParams);\n  };\n\n  //AWS\n  const [genderName, setGenderName] = useState<string>();\n  const [message, setMessage] = useState<string>();\n\n  //insert reception family\n\n  const handleReceptionInsert = async () => {\n    let allResults = [];\n    let receptionId = null;\n    const mainEntrants = transformedData.filter(\n      (data) => data.modifiedEntrant.familyOrderNumber === 0\n    );\n    const familyEntrants = transformedData.filter(\n      (data) => data.modifiedEntrant.familyOrderNumber !== 0\n    );\n\n    try {\n      for (const entrantData of mainEntrants) {\n        const formattedPostCode =\n          entrantData.modifiedEntrant.postalCode.replace(\"-\", \"\");\n\n        const result = await insertReceptionData(\n          groupCheckInConfirmationParams.eventId,\n          groupCheckInConfirmationParams.venueId,\n          DEVICE_ID, // Temp acceptedTerminalId\n          groupCheckInConfirmationParams.user.userId,\n          entrantData.modifiedEntrant.lgapId,\n          entrantData.modifiedEntrant.userRank,\n          entrantData.modifiedEntrant.lastName,\n          entrantData.modifiedEntrant.firstName,\n          entrantData.modifiedEntrant.lastNameKana,\n          entrantData.modifiedEntrant.firstNameKana,\n          entrantData.modifiedEntrant.dateOfBirth,\n          entrantData.modifiedEntrant.genderCode,\n          formattedPostCode,\n          entrantData.modifiedEntrant.address,\n          entrantData.modifiedEntrant.receptionTypeCode,\n          entrantData.modifiedEntrant.familyOrderNumber\n        );\n\n        receptionId = result.data[0].reception_id;\n        allResults.push(result);\n      }\n\n      // Process family entrants using the obtained receptionId\n      for (const entrantData of familyEntrants) {\n        const formattedPostCode =\n          entrantData.modifiedEntrant.postalCode.replace(\"-\", \"\");\n\n        const result = await insertReceptionDataFamily(\n          groupCheckInConfirmationParams.eventId,\n          groupCheckInConfirmationParams.venueId,\n          receptionId,\n          entrantData.modifiedEntrant.familyOrderNumber,\n          DEVICE_ID, // Temp acceptedTerminalId\n          groupCheckInConfirmationParams.user.userId,\n          entrantData.modifiedEntrant.lgapId,\n          entrantData.modifiedEntrant.userRank,\n          entrantData.modifiedEntrant.lastName,\n          entrantData.modifiedEntrant.firstName,\n          entrantData.modifiedEntrant.lastNameKana,\n          entrantData.modifiedEntrant.firstNameKana,\n          entrantData.modifiedEntrant.dateOfBirth,\n          entrantData.modifiedEntrant.genderCode,\n          formattedPostCode,\n          entrantData.modifiedEntrant.address,\n          entrantData.modifiedEntrant.relationship,\n          entrantData.modifiedEntrant.receptionTypeCode,\n          entrantData.modifiedEntrant.familyOrderNumber\n        );\n\n        allResults.push(result);\n      }\n      const success = allResults.every(\n        (result) => result.message === \"success\"\n      );\n\n      if (success) {\n        const selectReceptionMethodParams = new SelectReceptionMethodParams();\n        selectReceptionMethodParams.user = groupCheckInConfirmationParams.user;\n        selectReceptionMethodParams.eventId =\n          groupCheckInConfirmationParams.eventId;\n        selectReceptionMethodParams.venueId =\n          groupCheckInConfirmationParams.venueId;\n        selectReceptionMethodParams.receptionTypeCode =\n          groupCheckInConfirmationParams.receptionTypeCode;\n\n        navigation.navigate(\"SelectReceptionMethod\", {\n          selectReceptionMethodParams,\n        });\n        ActivityLogger.insertInfoLogEntry(groupCheckInConfirmationParams.user, 'GroupCheckInConfirmation', 'handleReceptionInsert', 'transition', 'SelectReceptionMethod', selectReceptionMethodParams);\n\n        setMessage(\"Inserted Successfully!!\");\n      } else {\n        const errorResult = allResults.find(\n          (result) => result.message !== \"success\"\n        );\n        const errorMessage = errorResult\n          ? errorResult.message\n          : \"Unknown error occurred\";\n        setMessage(errorMessage);\n      }\n    } catch (error) {\n      console.error(\"Error from ReceptionCreateService:\", error);\n    }\n  };\n\n  //get Gender Name\n  const fetchGenderNamebyGenderCode = async (genderCode: string) => {\n    try {\n      const result = await fetchGenderName(genderCode);\n      const message = result.message;\n      if (message === \"success\") {\n        setMessage(\"Optained Successfully!!\");\n        setGenderName(result.data[0].name);\n      } else {\n        setMessage(message);\n      }\n    } catch (error) {\n      console.error(\"Error from GetGenderNameService:\", error);\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.mainContainer}>\n      <StatusBar barStyle=\"dark-content\"></StatusBar>\n      <Header\n        titleName=\"受付内容確認\"\n        buttonName=\"受付をやめる\"\n        onPress={handleSelectReceptionMethod}\n      ></Header>\n\n      <View style={styles.bodyContainer}>\n        <View style={styles.innerMainTitle}>\n          <HiraginoKakuText style={styles.innerMainTitleText}>\n            この内容で受付しますか？\n          </HiraginoKakuText>\n        </View>\n        <View style={styles.outerContainer}>\n          <View style={styles.sideScrollDiv}>\n            <HiraginoKakuText style={styles.sideTitleText}>\n              受付人数\n              {\n                groupCheckInConfirmationParams.entrantRecordList\n                  .entrantRecordList.length\n              }\n              人\n            </HiraginoKakuText>\n            <FlatList\n              style={styles.scrollableGroup}\n              scrollEnabled={scrollEnabled}\n              data={transformedData}\n              renderItem={renderScrollItem}\n              keyExtractor={(item) => item.id.toString()}\n              onLayout={onLayoutHandler}\n              contentContainerStyle={styles.scrollableGp}\n            />\n          </View>\n\n          <View>\n            <View\n              style={[styles.innerBodyContainer]}\n              onLayout={onLayoutBtnHandler}\n            >\n              <View style={styles.bodyTitle}>\n                <HiraginoKakuText style={styles.bodyTitleText}>\n                  受付内容\n                </HiraginoKakuText>\n                <View style={styles.buttonContainer}>\n                  <Button\n                    text=\"内容を修正する\"\n                    type=\"ButtonMSecondary\"\n                    style={styles.btnModify}\n                    icon={\n                      <MaterialIcons\n                        name=\"mode-edit\"\n                        size={24}\n                        color={colors.primary}\n                        style={styles.iconStyle}\n                      />\n                    }\n                    iconPosition=\"behind\"\n                    onPress={handleEdit}\n                  ></Button>\n                </View>\n              </View>\n\n              <ScrollView scrollEnabled={scrollInfoEnabled}>\n                <View\n                  style={{\n                    height: heightContainer,\n                  }}\n                >\n                  <View onLayout={onLayoutInfoHandler}>{renderInfoItem()}</View>\n                </View>\n              </ScrollView>\n            </View>\n\n            {isLeftCircleVisible && (\n              <View\n                style={{\n                  position: \"absolute\",\n                  top: topPosition,\n                  left: -26,\n                }}\n              >\n                <Pressable\n                  onPress={OnPreviousCirclePress}\n                  style={styles.chevronLeftButton}\n                >\n                  <Feather\n                    name=\"chevron-left\"\n                    size={28}\n                    color={colors.secondary}\n                  />\n                </Pressable>\n              </View>\n            )}\n            {isRightCircleVisible && (\n              <View\n                style={{ position: \"absolute\", top: topPosition, right: -26 }}\n              >\n                <Pressable\n                  onPress={OnNextCirclePress}\n                  style={styles.chevronRightButton}\n                >\n                  <Feather\n                    name=\"chevron-right\"\n                    size={28}\n                    color={colors.secondary}\n                  />\n                </Pressable>\n              </View>\n            )}\n          </View>\n        </View>\n        {isLgapIdDialogVisible && (\n          <ExistingLGaPIDDialog\n            onAccept={handleAccept}\n            onCancel={handleCancel}\n          />\n        )}\n      </View>\n\n      <Footer\n        rightButtonText=\"受付する\"\n        hasPreviousButton={false}\n        showNextIcon={false}\n        onPressNext={handleCompletion}\n      ></Footer>\n      {isModalVisible && <Completion closeModal={closeModal} />}\n    </SafeAreaView>\n  );\n};\n\nexport default GroupCheckInConfirmation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}