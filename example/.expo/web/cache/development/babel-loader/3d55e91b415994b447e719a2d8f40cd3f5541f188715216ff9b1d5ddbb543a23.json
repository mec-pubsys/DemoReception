{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport { View } from \"../../components/Themed\";\nimport { HiraginoKakuText } from \"../../components/StyledText\";\nimport styles from \"./CertificationStyles\";\nimport ModalComponent from \"../../components/basics/ModalComponent\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { colors } from \"../../styles/color\";\nimport { realtimeDB } from \"../../config/firebaseConfig\";\nimport { get, ref } from \"firebase/database\";\nimport * as crypto from \"crypto-js\";\nimport { EventListParams } from \"../event-list/EventListParams\";\nimport { User } from \"../../models/User\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Certification = function Certification(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    userid = _useState2[0],\n    setUserId = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showPassword = _useState6[0],\n    setShowPassword = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    errorMessage = _useState8[0],\n    setErrorMessage = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    inputNotEmpty = _useState10[0],\n    setInputNotEmpty = _useState10[1];\n  useEffect(function () {\n    ActivityLogger.insertInfoLogEntry(new User(), 'Certificatin', 'useEffect', 'screen open');\n  }, []);\n  var togglePasswordVisibility = function togglePasswordVisibility() {\n    setShowPassword(!showPassword);\n  };\n  var handleInputChange = function handleInputChange(text) {\n    var isPassword = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (isPassword) {\n      setPassword(text);\n      setInputNotEmpty(userid.trim().length > 0 && text.trim().length > 0);\n    } else {\n      setUserId(text);\n      setInputNotEmpty(text.trim().length > 0 && password.trim().length > 0);\n    }\n  };\n  var handleLoginVerification = function handleLoginVerification() {\n    ActivityLogger.insertInfoLogEntry(new User(), 'Certificatin', 'handleLoginVerification', 'login', '', null, '', 'userid=' + userid + ',password=' + password);\n    var userRef = ref(realtimeDB, \"baseMember\");\n    get(userRef).then(function (snapshot) {\n      if (snapshot.exists()) {\n        var userData = snapshot.val();\n        var loggedIn = false;\n        for (var userId in userData) {\n          if (userData.hasOwnProperty(userId)) {\n            var user = userData[userId];\n            var hashpassword = crypto.SHA256(password).toString(crypto.enc.Hex);\n            if (user.id === userid && user.password === hashpassword) {\n              loggedIn = true;\n              setErrorMessage(\"\");\n              var eventListParams = new EventListParams();\n              var _user = new User();\n              _user.userId = userid;\n              eventListParams.user = _user;\n              props.navigation.navigate(\"EventList\", {\n                eventListParams: eventListParams\n              });\n              ActivityLogger.insertInfoLogEntry(_user, 'Certificatin', 'handleLoginVerification', 'transition', 'EventList', eventListParams);\n              console.log(\"ログイン成功\");\n              break;\n            }\n          }\n        }\n        if (!loggedIn) {\n          setErrorMessage(\"IDまたはパスワードが正しくありません\");\n          console.log(\"IDまたはパスワードが正しくありません\");\n        }\n      } else {\n        console.log(\"ユーザーデータが見つかりません\");\n      }\n    }).catch(function (error) {\n      console.error(\"ユーザーデータの取得に失敗しました\", error);\n    });\n  };\n  return _jsx(ModalComponent, {\n    text: \"\\u7BA1\\u7406\\u8005\\u753B\\u9762\",\n    firstButtonText: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\",\n    secondButtonText: \"\\u30ED\\u30B0\\u30A4\\u30F3\",\n    onFirstButtonPress: props.onCancelButtonPress,\n    onSecondButtonPress: handleLoginVerification,\n    modalHeight: errorMessage !== \"\" ? 434 : 402,\n    toggleModal: props.toggleModal,\n    secondButtonDisable: !inputNotEmpty,\n    children: _jsx(\"form\", {\n      autoComplete: \"off\",\n      children: _jsxs(View, {\n        style: styles.bodyContainer,\n        children: [_jsx(HiraginoKakuText, {\n          style: styles.bodyText,\n          normal: true,\n          children: \"\\u7BA1\\u7406\\u8005\\u753B\\u9762\\u3078\\u306E\\u79FB\\u52D5\\u306F\\u3001\\u30ED\\u30B0\\u30A4\\u30F3\\u304C\\u5FC5\\u8981\\u3067\\u3059\\u3002\"\n        }), _jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsxs(View, {\n            style: styles.inputItem,\n            children: [_jsx(HiraginoKakuText, {\n              style: styles.headingText,\n              children: \"ID\"\n            }), _jsx(TextInput, {\n              style: styles.idInput,\n              placeholder: \"ID\",\n              onChangeText: function onChangeText(text) {\n                return handleInputChange(text, false);\n              },\n              value: userid,\n              placeholderTextColor: colors.placeholderTextColor\n            })]\n          }), _jsxs(View, {\n            style: styles.inputItem,\n            children: [_jsx(HiraginoKakuText, {\n              style: styles.headingText,\n              children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n            }), _jsxs(View, {\n              style: [styles.pwContainer],\n              children: [_jsx(TextInput, {\n                style: styles.pwInput,\n                secureTextEntry: !showPassword,\n                placeholder: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n                placeholderTextColor: colors.placeholderTextColor,\n                value: password,\n                onChangeText: function onChangeText(text) {\n                  return handleInputChange(text, true);\n                }\n              }), _jsx(Pressable, {\n                style: styles.eyeIconContainer,\n                onPress: togglePasswordVisibility,\n                hitSlop: 16,\n                children: showPassword ? _jsx(Ionicons, {\n                  name: \"eye\",\n                  size: 24,\n                  color: \"black\",\n                  style: styles.eyeIcon\n                }) : _jsx(Ionicons, {\n                  name: \"eye-off\",\n                  size: 24,\n                  color: \"black\",\n                  style: styles.eyeIcon\n                })\n              }), _jsx(View, {\n                style: styles.messageContainer,\n                children: errorMessage !== \"\" && _jsx(HiraginoKakuText, {\n                  style: styles.errorMessage,\n                  normal: true,\n                  children: errorMessage\n                })\n              })]\n            })]\n          })]\n        })]\n      })\n    })\n  });\n};","map":{"version":3,"names":["React","useEffect","useState","View","HiraginoKakuText","styles","ModalComponent","TextInput","Pressable","Ionicons","colors","realtimeDB","get","ref","crypto","EventListParams","User","ActivityLogger","jsx","_jsx","jsxs","_jsxs","Certification","props","_useState","_useState2","_slicedToArray","userid","setUserId","_useState3","_useState4","password","setPassword","_useState5","_useState6","showPassword","setShowPassword","_useState7","_useState8","errorMessage","setErrorMessage","_useState9","_useState10","inputNotEmpty","setInputNotEmpty","insertInfoLogEntry","togglePasswordVisibility","handleInputChange","text","isPassword","arguments","length","undefined","trim","handleLoginVerification","userRef","then","snapshot","exists","userData","val","loggedIn","userId","hasOwnProperty","user","hashpassword","SHA256","toString","enc","Hex","id","eventListParams","navigation","navigate","console","log","catch","error","firstButtonText","secondButtonText","onFirstButtonPress","onCancelButtonPress","onSecondButtonPress","modalHeight","toggleModal","secondButtonDisable","children","autoComplete","style","bodyContainer","bodyText","normal","inputContainer","inputItem","headingText","idInput","placeholder","onChangeText","value","placeholderTextColor","pwContainer","pwInput","secureTextEntry","eyeIconContainer","onPress","hitSlop","name","size","color","eyeIcon","messageContainer"],"sources":["/home/runner/work/DemoReception/DemoReception/example/src/screens/certification/Certification.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View } from \"../../components/Themed\";\nimport { HiraginoKakuText } from \"../../components/StyledText\";\nimport styles from \"./CertificationStyles\";\nimport ModalComponent from \"../../components/basics/ModalComponent\";\nimport { TextInput, Pressable } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { colors } from \"../../styles/color\";\nimport { NavigationProp } from \"@react-navigation/native\";\nimport { realtimeDB } from \"../../config/firebaseConfig\";\nimport { get, ref } from \"firebase/database\";\nimport * as crypto from \"crypto-js\";\nimport { EventListParams } from \"../event-list/EventListParams\";\nimport { User } from \"../../models/User\";\nimport { ActivityLogger } from \"../../log/ActivityLogger\";\n\ntype CertificationProps = {\n  onCancelButtonPress?: () => void;\n  toggleModal?: () => void;\n  navigation: NavigationProp<any>;\n  user: User;\n};\n\nexport const Certification = (props: CertificationProps) => {\n  const [userid, setUserId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [inputNotEmpty, setInputNotEmpty] = useState(false);\n\n  useEffect(() => {\n    ActivityLogger.insertInfoLogEntry(new User(), 'Certificatin', 'useEffect', 'screen open');\n  }, []);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleInputChange = (text: string, isPassword: boolean = false) => {\n    if (isPassword) {\n      setPassword(text);\n      setInputNotEmpty(userid.trim().length > 0 && text.trim().length > 0);\n    } else {\n      setUserId(text);\n      setInputNotEmpty(text.trim().length > 0 && password.trim().length > 0);\n    }\n  };\n\n  const handleLoginVerification = () => {\n    ActivityLogger.insertInfoLogEntry(new User(), 'Certificatin', 'handleLoginVerification', 'login', '', null, '', 'userid=' + userid + ',password=' + password);\n\n    const userRef = ref(realtimeDB, \"baseMember\");\n    // 'baseMember'ノードからデータをフェッチする\n    get(userRef)\n      .then((snapshot) => {\n        if (snapshot.exists()) {\n          const userData = snapshot.val();\n\n          // ログインをチェック\n          let loggedIn = false;\n          for (const userId in userData) {\n            if (userData.hasOwnProperty(userId)) {\n              const user = userData[userId];\n              let hashpassword = crypto\n                .SHA256(password)\n                .toString(crypto.enc.Hex);\n              if (user.id === userid && user.password === hashpassword) {\n                loggedIn = true;\n                setErrorMessage(\"\");\n\n                const eventListParams = new EventListParams();\n                const user = new User();\n                user.userId = userid;\n                eventListParams.user = user;\n                props.navigation.navigate(\"EventList\", { eventListParams });\n                ActivityLogger.insertInfoLogEntry(user, 'Certificatin', 'handleLoginVerification', 'transition', 'EventList', eventListParams);\n                console.log(\"ログイン成功\");\n                break;\n              }\n            }\n          }\n          if (!loggedIn) {\n            setErrorMessage(\"IDまたはパスワードが正しくありません\");\n            console.log(\"IDまたはパスワードが正しくありません\");\n          }\n        } else {\n          console.log(\"ユーザーデータが見つかりません\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"ユーザーデータの取得に失敗しました\", error);\n      });\n  };\n\n  return (\n    <ModalComponent\n      text=\"管理者画面\"\n      firstButtonText=\"キャンセル\"\n      secondButtonText=\"ログイン\"\n      onFirstButtonPress={props.onCancelButtonPress}\n      onSecondButtonPress={handleLoginVerification}\n      modalHeight={errorMessage !== \"\" ? 434 : 402}\n      toggleModal={props.toggleModal}\n      secondButtonDisable={!inputNotEmpty}\n    >\n      <form autoComplete=\"off\">\n        <View style={styles.bodyContainer}>\n          <HiraginoKakuText style={styles.bodyText} normal>\n            管理者画面への移動は、ログインが必要です。\n          </HiraginoKakuText>\n          <View style={styles.inputContainer}>\n            <View style={styles.inputItem}>\n              <HiraginoKakuText style={styles.headingText}>ID</HiraginoKakuText>\n              <TextInput\n                style={styles.idInput}\n                placeholder=\"ID\"\n                onChangeText={(text) => handleInputChange(text, false)}\n                value={userid}\n                placeholderTextColor={colors.placeholderTextColor}\n              />\n            </View>\n            <View style={styles.inputItem}>\n              <HiraginoKakuText style={styles.headingText}>\n                パスワード\n              </HiraginoKakuText>\n              <View style={[styles.pwContainer]}>\n                <TextInput\n                  style={styles.pwInput}\n                  secureTextEntry={!showPassword}\n                  placeholder=\"パスワード\"\n                  placeholderTextColor={colors.placeholderTextColor}\n                  value={password}\n                  onChangeText={(text) => handleInputChange(text, true)}\n                />\n                <Pressable\n                  style={styles.eyeIconContainer}\n                  onPress={togglePasswordVisibility}\n                  hitSlop={16}\n                >\n                  {showPassword ? (\n                    <Ionicons\n                      name=\"eye\"\n                      size={24}\n                      color=\"black\"\n                      style={styles.eyeIcon}\n                    />\n                  ) : (\n                    <Ionicons\n                      name=\"eye-off\"\n                      size={24}\n                      color=\"black\"\n                      style={styles.eyeIcon}\n                    />\n                  )}\n                </Pressable>\n                <View style={styles.messageContainer}>\n                  {errorMessage !== \"\" && (\n                    <HiraginoKakuText style={styles.errorMessage} normal>\n                      {errorMessage}\n                    </HiraginoKakuText>\n                  )}\n                </View>\n              </View>\n            </View>\n          </View>\n        </View>\n      </form>\n    </ModalComponent>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI;AACb,SAASC,gBAAgB;AACzB,OAAOC,MAAM;AACb,OAAOC,cAAc;AAA+C,OAAAC,SAAA;AAAA,OAAAC,SAAA;AAEpE,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,MAAM;AAEf,SAASC,UAAU;AACnB,SAASC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;AAC5C,OAAO,KAAKC,MAAM,MAAM,WAAW;AACnC,SAASC,eAAe;AACxB,SAASC,IAAI;AACb,SAASC,cAAc;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAS1D,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,KAAyB,EAAK;EAC1D,IAAAC,SAAA,GAA4BtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,UAAA,GAAgC3B,QAAQ,CAAC,EAAE,CAAC;IAAA4B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAwC/B,QAAQ,CAAC,KAAK,CAAC;IAAAgC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAhDE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAAwCnC,QAAQ,CAAC,EAAE,CAAC;IAAAoC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA7CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAA0CvC,QAAQ,CAAC,KAAK,CAAC;IAAAwC,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAlDE,aAAa,GAAAD,WAAA;IAAEE,gBAAgB,GAAAF,WAAA;EAEtCzC,SAAS,CAAC,YAAM;IACdgB,cAAc,CAAC4B,kBAAkB,CAAC,IAAI7B,IAAI,CAAC,CAAC,EAAE,cAAc,EAAE,WAAW,EAAE,aAAa,CAAC;EAC3F,CAAC,EAAE,EAAE,CAAC;EAEN,IAAM8B,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAA,EAAS;IACrCV,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,IAAMY,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,IAAY,EAAkC;IAAA,IAAhCC,UAAmB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IAClE,IAAID,UAAU,EAAE;MACdjB,WAAW,CAACgB,IAAI,CAAC;MACjBJ,gBAAgB,CAACjB,MAAM,CAAC0B,IAAI,CAAC,CAAC,CAACF,MAAM,GAAG,CAAC,IAAIH,IAAI,CAACK,IAAI,CAAC,CAAC,CAACF,MAAM,GAAG,CAAC,CAAC;IACtE,CAAC,MAAM;MACLvB,SAAS,CAACoB,IAAI,CAAC;MACfJ,gBAAgB,CAACI,IAAI,CAACK,IAAI,CAAC,CAAC,CAACF,MAAM,GAAG,CAAC,IAAIpB,QAAQ,CAACsB,IAAI,CAAC,CAAC,CAACF,MAAM,GAAG,CAAC,CAAC;IACxE;EACF,CAAC;EAED,IAAMG,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAA,EAAS;IACpCrC,cAAc,CAAC4B,kBAAkB,CAAC,IAAI7B,IAAI,CAAC,CAAC,EAAE,cAAc,EAAE,yBAAyB,EAAE,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,GAAGW,MAAM,GAAG,YAAY,GAAGI,QAAQ,CAAC;IAE7J,IAAMwB,OAAO,GAAG1C,GAAG,CAACF,UAAU,EAAE,YAAY,CAAC;IAE7CC,GAAG,CAAC2C,OAAO,CAAC,CACTC,IAAI,CAAC,UAACC,QAAQ,EAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACrB,IAAMC,QAAQ,GAAGF,QAAQ,CAACG,GAAG,CAAC,CAAC;QAG/B,IAAIC,QAAQ,GAAG,KAAK;QACpB,KAAK,IAAMC,MAAM,IAAIH,QAAQ,EAAE;UAC7B,IAAIA,QAAQ,CAACI,cAAc,CAACD,MAAM,CAAC,EAAE;YACnC,IAAME,IAAI,GAAGL,QAAQ,CAACG,MAAM,CAAC;YAC7B,IAAIG,YAAY,GAAGnD,MAAM,CACtBoD,MAAM,CAACnC,QAAQ,CAAC,CAChBoC,QAAQ,CAACrD,MAAM,CAACsD,GAAG,CAACC,GAAG,CAAC;YAC3B,IAAIL,IAAI,CAACM,EAAE,KAAK3C,MAAM,IAAIqC,IAAI,CAACjC,QAAQ,KAAKkC,YAAY,EAAE;cACxDJ,QAAQ,GAAG,IAAI;cACfrB,eAAe,CAAC,EAAE,CAAC;cAEnB,IAAM+B,eAAe,GAAG,IAAIxD,eAAe,CAAC,CAAC;cAC7C,IAAMiD,KAAI,GAAG,IAAIhD,IAAI,CAAC,CAAC;cACvBgD,KAAI,CAACF,MAAM,GAAGnC,MAAM;cACpB4C,eAAe,CAACP,IAAI,GAAGA,KAAI;cAC3BzC,KAAK,CAACiD,UAAU,CAACC,QAAQ,CAAC,WAAW,EAAE;gBAAEF,eAAe,EAAfA;cAAgB,CAAC,CAAC;cAC3DtD,cAAc,CAAC4B,kBAAkB,CAACmB,KAAI,EAAE,cAAc,EAAE,yBAAyB,EAAE,YAAY,EAAE,WAAW,EAAEO,eAAe,CAAC;cAC9HG,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;cACrB;YACF;UACF;QACF;QACA,IAAI,CAACd,QAAQ,EAAE;UACbrB,eAAe,CAAC,qBAAqB,CAAC;UACtCkC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QACpC;MACF,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAChC;IACF,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CAAC;EACN,CAAC;EAED,OACE1D,IAAA,CAACb,cAAc;IACb0C,IAAI,EAAC,gCAAO;IACZ8B,eAAe,EAAC,gCAAO;IACvBC,gBAAgB,EAAC,0BAAM;IACvBC,kBAAkB,EAAEzD,KAAK,CAAC0D,mBAAoB;IAC9CC,mBAAmB,EAAE5B,uBAAwB;IAC7C6B,WAAW,EAAE5C,YAAY,KAAK,EAAE,GAAG,GAAG,GAAG,GAAI;IAC7C6C,WAAW,EAAE7D,KAAK,CAAC6D,WAAY;IAC/BC,mBAAmB,EAAE,CAAC1C,aAAc;IAAA2C,QAAA,EAEpCnE,IAAA;MAAMoE,YAAY,EAAC,KAAK;MAAAD,QAAA,EACtBjE,KAAA,CAAClB,IAAI;QAACqF,KAAK,EAAEnF,MAAM,CAACoF,aAAc;QAAAH,QAAA,GAChCnE,IAAA,CAACf,gBAAgB;UAACoF,KAAK,EAAEnF,MAAM,CAACqF,QAAS;UAACC,MAAM;UAAAL,QAAA,EAAC;QAEjD,CAAkB,CAAC,EACnBjE,KAAA,CAAClB,IAAI;UAACqF,KAAK,EAAEnF,MAAM,CAACuF,cAAe;UAAAN,QAAA,GACjCjE,KAAA,CAAClB,IAAI;YAACqF,KAAK,EAAEnF,MAAM,CAACwF,SAAU;YAAAP,QAAA,GAC5BnE,IAAA,CAACf,gBAAgB;cAACoF,KAAK,EAAEnF,MAAM,CAACyF,WAAY;cAAAR,QAAA,EAAC;YAAE,CAAkB,CAAC,EAClEnE,IAAA,CAACZ,SAAS;cACRiF,KAAK,EAAEnF,MAAM,CAAC0F,OAAQ;cACtBC,WAAW,EAAC,IAAI;cAChBC,YAAY,EAAE,SAAAA,aAACjD,IAAI;gBAAA,OAAKD,iBAAiB,CAACC,IAAI,EAAE,KAAK,CAAC;cAAA,CAAC;cACvDkD,KAAK,EAAEvE,MAAO;cACdwE,oBAAoB,EAAEzF,MAAM,CAACyF;YAAqB,CACnD,CAAC;UAAA,CACE,CAAC,EACP9E,KAAA,CAAClB,IAAI;YAACqF,KAAK,EAAEnF,MAAM,CAACwF,SAAU;YAAAP,QAAA,GAC5BnE,IAAA,CAACf,gBAAgB;cAACoF,KAAK,EAAEnF,MAAM,CAACyF,WAAY;cAAAR,QAAA,EAAC;YAE7C,CAAkB,CAAC,EACnBjE,KAAA,CAAClB,IAAI;cAACqF,KAAK,EAAE,CAACnF,MAAM,CAAC+F,WAAW,CAAE;cAAAd,QAAA,GAChCnE,IAAA,CAACZ,SAAS;gBACRiF,KAAK,EAAEnF,MAAM,CAACgG,OAAQ;gBACtBC,eAAe,EAAE,CAACnE,YAAa;gBAC/B6D,WAAW,EAAC,gCAAO;gBACnBG,oBAAoB,EAAEzF,MAAM,CAACyF,oBAAqB;gBAClDD,KAAK,EAAEnE,QAAS;gBAChBkE,YAAY,EAAE,SAAAA,aAACjD,IAAI;kBAAA,OAAKD,iBAAiB,CAACC,IAAI,EAAE,IAAI,CAAC;gBAAA;cAAC,CACvD,CAAC,EACF7B,IAAA,CAACX,SAAS;gBACRgF,KAAK,EAAEnF,MAAM,CAACkG,gBAAiB;gBAC/BC,OAAO,EAAE1D,wBAAyB;gBAClC2D,OAAO,EAAE,EAAG;gBAAAnB,QAAA,EAEXnD,YAAY,GACXhB,IAAA,CAACV,QAAQ;kBACPiG,IAAI,EAAC,KAAK;kBACVC,IAAI,EAAE,EAAG;kBACTC,KAAK,EAAC,OAAO;kBACbpB,KAAK,EAAEnF,MAAM,CAACwG;gBAAQ,CACvB,CAAC,GAEF1F,IAAA,CAACV,QAAQ;kBACPiG,IAAI,EAAC,SAAS;kBACdC,IAAI,EAAE,EAAG;kBACTC,KAAK,EAAC,OAAO;kBACbpB,KAAK,EAAEnF,MAAM,CAACwG;gBAAQ,CACvB;cACF,CACQ,CAAC,EACZ1F,IAAA,CAAChB,IAAI;gBAACqF,KAAK,EAAEnF,MAAM,CAACyG,gBAAiB;gBAAAxB,QAAA,EAClC/C,YAAY,KAAK,EAAE,IAClBpB,IAAA,CAACf,gBAAgB;kBAACoF,KAAK,EAAEnF,MAAM,CAACkC,YAAa;kBAACoD,MAAM;kBAAAL,QAAA,EACjD/C;gBAAY,CACG;cACnB,CACG,CAAC;YAAA,CACH,CAAC;UAAA,CACH,CAAC;QAAA,CACH,CAAC;MAAA,CACH;IAAC,CACH;EAAC,CACO,CAAC;AAErB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}