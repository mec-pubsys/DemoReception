{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport findIndex from 'lodash/findIndex';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { extractCalendarProps, extractHeaderProps } from \"../componentUpdater\";\nimport { parseDate, toMarkingFormat, xdateToData } from \"../interface\";\nimport { page, sameDate, sameMonth } from \"../dateutils\";\nimport constants from \"../commons/constants\";\nimport { useDidUpdate } from \"../hooks\";\nimport styleConstructor from \"./style\";\nimport Calendar from \"../calendar\";\nimport CalendarListItem from \"./item\";\nimport CalendarHeader from \"../calendar/header/index\";\nimport isEqual from 'lodash/isEqual';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CALENDAR_WIDTH = constants.screenWidth;\nvar CALENDAR_HEIGHT = 360;\nvar PAST_SCROLL_RANGE = 50;\nvar FUTURE_SCROLL_RANGE = 50;\nvar CalendarList = function CalendarList(props, ref) {\n  useImperativeHandle(ref, function () {\n    return {\n      scrollToDay: function scrollToDay(date, offset, animated) {\n        _scrollToDay(date, offset, animated);\n      },\n      scrollToMonth: function scrollToMonth(date) {\n        _scrollToMonth(date);\n      }\n    };\n  });\n  var theme = props.theme,\n    current = props.current,\n    firstDay = props.firstDay,\n    markedDates = props.markedDates,\n    headerStyle = props.headerStyle,\n    onMonthChange = props.onMonthChange,\n    onVisibleMonthsChange = props.onVisibleMonthsChange,\n    _props$pastScrollRang = props.pastScrollRange,\n    pastScrollRange = _props$pastScrollRang === void 0 ? PAST_SCROLL_RANGE : _props$pastScrollRang,\n    _props$futureScrollRa = props.futureScrollRange,\n    futureScrollRange = _props$futureScrollRa === void 0 ? FUTURE_SCROLL_RANGE : _props$futureScrollRa,\n    _props$calendarHeight = props.calendarHeight,\n    calendarHeight = _props$calendarHeight === void 0 ? CALENDAR_HEIGHT : _props$calendarHeight,\n    _props$calendarWidth = props.calendarWidth,\n    calendarWidth = _props$calendarWidth === void 0 ? CALENDAR_WIDTH : _props$calendarWidth,\n    calendarStyle = props.calendarStyle,\n    _props$animateScroll = props.animateScroll,\n    animateScroll = _props$animateScroll === void 0 ? false : _props$animateScroll,\n    _props$showScrollIndi = props.showScrollIndicator,\n    showScrollIndicator = _props$showScrollIndi === void 0 ? false : _props$showScrollIndi,\n    staticHeader = props.staticHeader,\n    testID = props.testID,\n    propsStyle = props.style,\n    onLayout = props.onLayout,\n    removeClippedSubviews = props.removeClippedSubviews,\n    _props$horizontal = props.horizontal,\n    horizontal = _props$horizontal === void 0 ? false : _props$horizontal,\n    pagingEnabled = props.pagingEnabled,\n    _props$scrollEnabled = props.scrollEnabled,\n    scrollEnabled = _props$scrollEnabled === void 0 ? true : _props$scrollEnabled,\n    _props$nestedScrollEn = props.nestedScrollEnabled,\n    nestedScrollEnabled = _props$nestedScrollEn === void 0 ? true : _props$nestedScrollEn,\n    _props$scrollsToTop = props.scrollsToTop,\n    scrollsToTop = _props$scrollsToTop === void 0 ? false : _props$scrollsToTop,\n    _props$keyExtractor = props.keyExtractor,\n    keyExtractor = _props$keyExtractor === void 0 ? function (_, index) {\n      return String(index);\n    } : _props$keyExtractor,\n    keyboardShouldPersistTaps = props.keyboardShouldPersistTaps,\n    onScrollBeginDrag = props.onScrollBeginDrag,\n    onScrollEndDrag = props.onScrollEndDrag,\n    onMomentumScrollBegin = props.onMomentumScrollBegin,\n    onMomentumScrollEnd = props.onMomentumScrollEnd,\n    contentContainerStyle = props.contentContainerStyle,\n    onEndReachedThreshold = props.onEndReachedThreshold,\n    onEndReached = props.onEndReached,\n    onHeaderLayout = props.onHeaderLayout,\n    accessibilityElementsHidden = props.accessibilityElementsHidden,\n    importantForAccessibility = props.importantForAccessibility;\n  var calendarProps = extractCalendarProps(props);\n  var headerProps = extractHeaderProps(props);\n  var calendarSize = horizontal ? calendarWidth : calendarHeight;\n  var shouldUseStaticHeader = staticHeader && horizontal;\n  var _useState = useState(parseDate(current)),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentMonth = _useState2[0],\n    setCurrentMonth = _useState2[1];\n  var shouldFixRTL = useMemo(function () {\n    return !constants.isRN73() && constants.isAndroidRTL && horizontal;\n  }, [horizontal]);\n  var shouldMeasureHeader = useRef(true);\n  var style = useRef(styleConstructor(theme));\n  var list = useRef();\n  var range = useRef(horizontal ? 1 : 3);\n  var initialDate = useRef(parseDate(current) || new XDate());\n  var visibleMonth = useRef(currentMonth);\n  var items = useMemo(function () {\n    var months = [];\n    for (var i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n      var _initialDate$current;\n      var rangeDate = (_initialDate$current = initialDate.current) == null ? void 0 : _initialDate$current.clone().addMonths(i - pastScrollRange, true);\n      months.push(rangeDate);\n    }\n    return months;\n  }, [pastScrollRange, futureScrollRange]);\n  var staticHeaderStyle = useMemo(function () {\n    return [style.current.staticHeader, headerStyle];\n  }, [headerStyle]);\n  var listStyle = useMemo(function () {\n    return [style.current.container, propsStyle];\n  }, [propsStyle]);\n  var initialDateIndex = useMemo(function () {\n    return findIndex(items, function (item) {\n      var _initialDate$current2;\n      return item.toString() === ((_initialDate$current2 = initialDate.current) == null ? void 0 : _initialDate$current2.toString());\n    });\n  }, [items]);\n  var getDateIndex = useCallback(function (date) {\n    return findIndex(items, function (item) {\n      return item.toString() === date.toString();\n    });\n  }, [items]);\n  useEffect(function () {\n    if (current) {\n      _scrollToMonth(new XDate(current));\n    }\n  }, [current]);\n  useDidUpdate(function () {\n    var currMont = currentMonth == null ? void 0 : currentMonth.clone();\n    if (currMont) {\n      var data = xdateToData(currMont);\n      onMonthChange == null ? void 0 : onMonthChange(data);\n      onVisibleMonthsChange == null ? void 0 : onVisibleMonthsChange([data]);\n      AccessibilityInfo.announceForAccessibility(currMont.toString('MMMM yyyy'));\n    }\n  }, [currentMonth]);\n  var _scrollToDay = function _scrollToDay(date, offset, animated) {\n    var _initialDate$current3;\n    var scrollTo = parseDate(date);\n    var diffMonths = Math.round(initialDate == null ? void 0 : (_initialDate$current3 = initialDate.current) == null ? void 0 : _initialDate$current3.clone().setDate(1).diffMonths(scrollTo == null ? void 0 : scrollTo.clone().setDate(1)));\n    var scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n    if (!horizontal) {\n      var week = 0;\n      var days = page(scrollTo, firstDay);\n      for (var i = 0; i < days.length; i++) {\n        week = Math.floor(i / 7);\n        if (sameDate(days[i], scrollTo)) {\n          scrollAmount += 46 * week;\n          break;\n        }\n      }\n    }\n    if (scrollAmount !== 0) {\n      var _list$current;\n      list == null ? void 0 : (_list$current = list.current) == null ? void 0 : _list$current.scrollToOffset({\n        offset: scrollAmount,\n        animated: animated\n      });\n    }\n  };\n  var _scrollToMonth = useCallback(function (date) {\n    var _initialDate$current4;\n    var scrollTo = parseDate(date);\n    var diffMonths = Math.round(initialDate == null ? void 0 : (_initialDate$current4 = initialDate.current) == null ? void 0 : _initialDate$current4.clone().setDate(1).diffMonths(scrollTo == null ? void 0 : scrollTo.clone().setDate(1)));\n    var scrollAmount = calendarSize * (shouldFixRTL ? pastScrollRange - diffMonths : pastScrollRange + diffMonths);\n    if (scrollAmount !== 0) {\n      var _list$current2;\n      list == null ? void 0 : (_list$current2 = list.current) == null ? void 0 : _list$current2.scrollToOffset({\n        offset: scrollAmount,\n        animated: animateScroll\n      });\n    }\n  }, [calendarSize, shouldFixRTL, pastScrollRange, animateScroll]);\n  var addMonth = useCallback(function (count) {\n    var day = currentMonth == null ? void 0 : currentMonth.clone().addMonths(count, true);\n    if (sameMonth(day, currentMonth) || getDateIndex(day) === -1) {\n      return;\n    }\n    _scrollToMonth(day);\n    setCurrentMonth(day);\n  }, [currentMonth, _scrollToMonth]);\n  var getMarkedDatesForItem = useCallback(function (item) {\n    if (markedDates && item) {\n      for (var _ref of Object.entries(markedDates)) {\n        var _ref2 = _slicedToArray(_ref, 2);\n        var key = _ref2[0];\n        var _ = _ref2[1];\n        if (sameMonth(new XDate(key), new XDate(item))) {\n          return markedDates;\n        }\n      }\n    }\n  }, [markedDates]);\n  var getItemLayout = useCallback(function (_, index) {\n    return {\n      length: calendarSize,\n      offset: calendarSize * index,\n      index: index\n    };\n  }, []);\n  var isDateInRange = useCallback(function (date) {\n    for (var i = -range.current; i <= range.current; i++) {\n      var newMonth = currentMonth == null ? void 0 : currentMonth.clone().addMonths(i, true);\n      if (sameMonth(date, newMonth)) {\n        return true;\n      }\n    }\n    return false;\n  }, [currentMonth]);\n  var renderItem = useCallback(function (_ref3) {\n    var item = _ref3.item;\n    var dateString = toMarkingFormat(item);\n    var _dateString$split = dateString.split('-'),\n      _dateString$split2 = _slicedToArray(_dateString$split, 2),\n      year = _dateString$split2[0],\n      month = _dateString$split2[1];\n    var testId = `${testID}.item_${year}-${month}`;\n    var onHeaderLayoutToPass = shouldMeasureHeader.current ? onHeaderLayout : undefined;\n    shouldMeasureHeader.current = false;\n    return _jsx(CalendarListItem, _objectSpread(_objectSpread({}, calendarProps), {}, {\n      testID: testId,\n      markedDates: getMarkedDatesForItem(item),\n      item: item,\n      style: calendarStyle,\n      horizontal: horizontal,\n      calendarWidth: calendarWidth,\n      calendarHeight: calendarHeight,\n      scrollToMonth: _scrollToMonth,\n      visible: isDateInRange(item),\n      onHeaderLayout: onHeaderLayoutToPass\n    }));\n  }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n  var renderStaticHeader = function renderStaticHeader() {\n    if (shouldUseStaticHeader) {\n      var onHeaderLayoutToPass = shouldMeasureHeader.current ? onHeaderLayout : undefined;\n      shouldMeasureHeader.current = false;\n      return _jsx(CalendarHeader, _objectSpread(_objectSpread({}, headerProps), {}, {\n        testID: `${testID}.staticHeader`,\n        style: staticHeaderStyle,\n        month: currentMonth,\n        addMonth: addMonth,\n        onHeaderLayout: onHeaderLayoutToPass,\n        accessibilityElementsHidden: accessibilityElementsHidden,\n        importantForAccessibility: importantForAccessibility\n      }));\n    }\n  };\n  var viewabilityConfig = useRef({\n    viewAreaCoveragePercentThreshold: 20\n  });\n  var onViewableItemsChanged = useCallback(function (_ref4) {\n    var _viewableItems$;\n    var viewableItems = _ref4.viewableItems;\n    var newVisibleMonth = parseDate((_viewableItems$ = viewableItems[0]) == null ? void 0 : _viewableItems$.item);\n    if (shouldFixRTL) {\n      var centerIndex = items.findIndex(function (item) {\n        return isEqual(parseDate(current), item);\n      });\n      var adjustedOffset = centerIndex - items.findIndex(function (item) {\n        return isEqual(newVisibleMonth, item);\n      });\n      visibleMonth.current = items[centerIndex + adjustedOffset];\n      setCurrentMonth(visibleMonth.current);\n    } else {\n      if (!sameDate(visibleMonth == null ? void 0 : visibleMonth.current, newVisibleMonth)) {\n        visibleMonth.current = newVisibleMonth;\n        setCurrentMonth(visibleMonth.current);\n      }\n    }\n  }, [items, shouldFixRTL, current]);\n  var viewabilityConfigCallbackPairs = useRef([{\n    viewabilityConfig: viewabilityConfig.current,\n    onViewableItemsChanged: onViewableItemsChanged\n  }]);\n  return _jsxs(View, {\n    style: style.current.flatListContainer,\n    testID: testID,\n    children: [_jsx(FlatList, {\n      ref: list,\n      windowSize: shouldFixRTL ? pastScrollRange + futureScrollRange + 1 : undefined,\n      style: listStyle,\n      showsVerticalScrollIndicator: showScrollIndicator,\n      showsHorizontalScrollIndicator: showScrollIndicator,\n      data: items,\n      renderItem: renderItem,\n      getItemLayout: getItemLayout,\n      initialNumToRender: range.current,\n      initialScrollIndex: initialDateIndex,\n      viewabilityConfigCallbackPairs: viewabilityConfigCallbackPairs.current,\n      testID: `${testID}.list`,\n      onLayout: onLayout,\n      removeClippedSubviews: removeClippedSubviews,\n      pagingEnabled: pagingEnabled,\n      scrollEnabled: scrollEnabled,\n      scrollsToTop: scrollsToTop,\n      horizontal: horizontal,\n      keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n      keyExtractor: keyExtractor,\n      onEndReachedThreshold: onEndReachedThreshold,\n      onEndReached: onEndReached,\n      nestedScrollEnabled: nestedScrollEnabled,\n      onMomentumScrollBegin: onMomentumScrollBegin,\n      onMomentumScrollEnd: onMomentumScrollEnd,\n      onScrollBeginDrag: onScrollBeginDrag,\n      onScrollEndDrag: onScrollEndDrag,\n      contentContainerStyle: contentContainerStyle\n    }), renderStaticHeader()]\n  });\n};\nexport default forwardRef(CalendarList);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = _objectSpread(_objectSpread({}, Calendar.propTypes), {}, {\n  pastScrollRange: PropTypes.number,\n  futureScrollRange: PropTypes.number,\n  calendarWidth: PropTypes.number,\n  calendarHeight: PropTypes.number,\n  calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticHeader: PropTypes.bool,\n  showScrollIndicator: PropTypes.bool,\n  animateScroll: PropTypes.bool,\n  scrollEnabled: PropTypes.bool,\n  scrollsToTop: PropTypes.bool,\n  pagingEnabled: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  keyExtractor: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onEndReached: PropTypes.func,\n  nestedScrollEnabled: PropTypes.bool\n});","map":{"version":3,"names":["findIndex","PropTypes","XDate","React","forwardRef","useCallback","useEffect","useImperativeHandle","useMemo","useRef","useState","AccessibilityInfo","FlatList","View","extractCalendarProps","extractHeaderProps","parseDate","toMarkingFormat","xdateToData","page","sameDate","sameMonth","constants","useDidUpdate","styleConstructor","Calendar","CalendarListItem","CalendarHeader","isEqual","jsx","_jsx","jsxs","_jsxs","CALENDAR_WIDTH","screenWidth","CALENDAR_HEIGHT","PAST_SCROLL_RANGE","FUTURE_SCROLL_RANGE","CalendarList","props","ref","scrollToDay","date","offset","animated","scrollToMonth","theme","current","firstDay","markedDates","headerStyle","onMonthChange","onVisibleMonthsChange","_props$pastScrollRang","pastScrollRange","_props$futureScrollRa","futureScrollRange","_props$calendarHeight","calendarHeight","_props$calendarWidth","calendarWidth","calendarStyle","_props$animateScroll","animateScroll","_props$showScrollIndi","showScrollIndicator","staticHeader","testID","propsStyle","style","onLayout","removeClippedSubviews","_props$horizontal","horizontal","pagingEnabled","_props$scrollEnabled","scrollEnabled","_props$nestedScrollEn","nestedScrollEnabled","_props$scrollsToTop","scrollsToTop","_props$keyExtractor","keyExtractor","_","index","String","keyboardShouldPersistTaps","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","contentContainerStyle","onEndReachedThreshold","onEndReached","onHeaderLayout","accessibilityElementsHidden","importantForAccessibility","calendarProps","headerProps","calendarSize","shouldUseStaticHeader","_useState","_useState2","_slicedToArray","currentMonth","setCurrentMonth","shouldFixRTL","isRN73","isAndroidRTL","shouldMeasureHeader","list","range","initialDate","visibleMonth","items","months","i","_initialDate$current","rangeDate","clone","addMonths","push","staticHeaderStyle","listStyle","container","initialDateIndex","item","_initialDate$current2","toString","getDateIndex","currMont","data","announceForAccessibility","_initialDate$current3","scrollTo","diffMonths","Math","round","setDate","scrollAmount","week","days","length","floor","_list$current","scrollToOffset","_initialDate$current4","_list$current2","addMonth","count","day","getMarkedDatesForItem","_ref","Object","entries","_ref2","key","getItemLayout","isDateInRange","newMonth","renderItem","_ref3","dateString","_dateString$split","split","_dateString$split2","year","month","testId","onHeaderLayoutToPass","undefined","_objectSpread","visible","renderStaticHeader","viewabilityConfig","viewAreaCoveragePercentThreshold","onViewableItemsChanged","_ref4","_viewableItems$","viewableItems","newVisibleMonth","centerIndex","adjustedOffset","viewabilityConfigCallbackPairs","flatListContainer","children","windowSize","showsVerticalScrollIndicator","showsHorizontalScrollIndicator","initialNumToRender","initialScrollIndex","displayName","propTypes","number","oneOfType","object","array","bool","oneOf","func"],"sources":["/home/runner/work/DemoReception/DemoReception/example/node_modules/react-native-calendars/src/calendar-list/index.js"],"sourcesContent":["import findIndex from 'lodash/findIndex';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { AccessibilityInfo, FlatList, View } from 'react-native';\nimport { extractCalendarProps, extractHeaderProps } from '../componentUpdater';\nimport { parseDate, toMarkingFormat, xdateToData } from '../interface';\nimport { page, sameDate, sameMonth } from '../dateutils';\nimport constants from '../commons/constants';\nimport { useDidUpdate } from '../hooks';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\nimport isEqual from 'lodash/isEqual';\nconst CALENDAR_WIDTH = constants.screenWidth;\nconst CALENDAR_HEIGHT = 360;\nconst PAST_SCROLL_RANGE = 50;\nconst FUTURE_SCROLL_RANGE = 50;\n/**\n * @description: Calendar List component for both vertical and horizontal calendars\n * @extends: Calendar\n * @extendslink: docs/Calendar\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendarsList.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar-list.gif\n */\nconst CalendarList = (props, ref) => {\n    useImperativeHandle(ref, () => ({\n        scrollToDay: (date, offset, animated) => {\n            scrollToDay(date, offset, animated);\n        },\n        scrollToMonth: (date) => {\n            scrollToMonth(date);\n        }\n    }));\n    const { \n    /** Calendar props */\n    theme, current, firstDay, markedDates, headerStyle, onMonthChange, onVisibleMonthsChange, \n    /** CalendarList props */\n    pastScrollRange = PAST_SCROLL_RANGE, futureScrollRange = FUTURE_SCROLL_RANGE, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, calendarStyle, animateScroll = false, showScrollIndicator = false, staticHeader, \n    /** View props */\n    testID, style: propsStyle, onLayout, removeClippedSubviews, \n    /** ScrollView props */\n    horizontal = false, pagingEnabled, scrollEnabled = true, nestedScrollEnabled = true, scrollsToTop = false, keyExtractor = (_, index) => String(index), keyboardShouldPersistTaps, onScrollBeginDrag, onScrollEndDrag, onMomentumScrollBegin, onMomentumScrollEnd, \n    /** FlatList props */\n    contentContainerStyle, onEndReachedThreshold, onEndReached, onHeaderLayout, accessibilityElementsHidden, importantForAccessibility } = props;\n    const calendarProps = extractCalendarProps(props);\n    const headerProps = extractHeaderProps(props);\n    const calendarSize = horizontal ? calendarWidth : calendarHeight;\n    const shouldUseStaticHeader = staticHeader && horizontal;\n    const [currentMonth, setCurrentMonth] = useState(parseDate(current));\n    const shouldFixRTL = useMemo(() => !constants.isRN73() && constants.isAndroidRTL && horizontal, [horizontal]);\n    /**\n     * we render a lot of months in the calendar list and we need to measure the header only once\n     * so we use this ref to limit the header measurement to the first render\n     */\n    const shouldMeasureHeader = useRef(true);\n    const style = useRef(styleConstructor(theme));\n    const list = useRef();\n    const range = useRef(horizontal ? 1 : 3);\n    const initialDate = useRef(parseDate(current) || new XDate());\n    const visibleMonth = useRef(currentMonth);\n    const items = useMemo(() => {\n        const months = [];\n        for (let i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n            const rangeDate = initialDate.current?.clone().addMonths(i - pastScrollRange, true);\n            months.push(rangeDate);\n        }\n        return months;\n    }, [pastScrollRange, futureScrollRange]);\n    const staticHeaderStyle = useMemo(() => {\n        return [style.current.staticHeader, headerStyle];\n    }, [headerStyle]);\n    const listStyle = useMemo(() => {\n        return [style.current.container, propsStyle];\n    }, [propsStyle]);\n    const initialDateIndex = useMemo(() => {\n        return findIndex(items, function (item) {\n            return item.toString() === initialDate.current?.toString();\n        });\n    }, [items]);\n    const getDateIndex = useCallback((date) => {\n        return findIndex(items, function (item) {\n            return item.toString() === date.toString();\n        });\n    }, [items]);\n    useEffect(() => {\n        if (current) {\n            scrollToMonth(new XDate(current));\n        }\n    }, [current]);\n    useDidUpdate(() => {\n        const currMont = currentMonth?.clone();\n        if (currMont) {\n            const data = xdateToData(currMont);\n            onMonthChange?.(data);\n            onVisibleMonthsChange?.([data]);\n            AccessibilityInfo.announceForAccessibility(currMont.toString('MMMM yyyy'));\n        }\n    }, [currentMonth]);\n    const scrollToDay = (date, offset, animated) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        let scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n        if (!horizontal) {\n            let week = 0;\n            const days = page(scrollTo, firstDay);\n            for (let i = 0; i < days.length; i++) {\n                week = Math.floor(i / 7);\n                if (sameDate(days[i], scrollTo)) {\n                    scrollAmount += 46 * week;\n                    break;\n                }\n            }\n        }\n        if (scrollAmount !== 0) {\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated });\n        }\n    };\n    const scrollToMonth = useCallback((date) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        const scrollAmount = calendarSize * (shouldFixRTL ? pastScrollRange - diffMonths : pastScrollRange + diffMonths);\n        if (scrollAmount !== 0) {\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated: animateScroll });\n        }\n    }, [calendarSize, shouldFixRTL, pastScrollRange, animateScroll]);\n    const addMonth = useCallback((count) => {\n        const day = currentMonth?.clone().addMonths(count, true);\n        if (sameMonth(day, currentMonth) || getDateIndex(day) === -1) {\n            return;\n        }\n        scrollToMonth(day);\n        setCurrentMonth(day);\n    }, [currentMonth, scrollToMonth]);\n    const getMarkedDatesForItem = useCallback((item) => {\n        if (markedDates && item) {\n            for (const [key, _] of Object.entries(markedDates)) {\n                if (sameMonth(new XDate(key), new XDate(item))) {\n                    return markedDates;\n                }\n            }\n        }\n    }, [markedDates]);\n    const getItemLayout = useCallback((_, index) => {\n        return {\n            length: calendarSize,\n            offset: calendarSize * index,\n            index\n        };\n    }, []);\n    const isDateInRange = useCallback((date) => {\n        for (let i = -range.current; i <= range.current; i++) {\n            const newMonth = currentMonth?.clone().addMonths(i, true);\n            if (sameMonth(date, newMonth)) {\n                return true;\n            }\n        }\n        return false;\n    }, [currentMonth]);\n    const renderItem = useCallback(({ item }) => {\n        const dateString = toMarkingFormat(item);\n        const [year, month] = dateString.split('-');\n        const testId = `${testID}.item_${year}-${month}`;\n        const onHeaderLayoutToPass = shouldMeasureHeader.current ? onHeaderLayout : undefined;\n        shouldMeasureHeader.current = false;\n        return (<CalendarListItem {...calendarProps} testID={testId} markedDates={getMarkedDatesForItem(item)} item={item} style={calendarStyle} \n        // @ts-expect-error - type mismatch - ScrollView's 'horizontal' is nullable\n        horizontal={horizontal} calendarWidth={calendarWidth} calendarHeight={calendarHeight} scrollToMonth={scrollToMonth} visible={isDateInRange(item)} onHeaderLayout={onHeaderLayoutToPass}/>);\n    }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n    const renderStaticHeader = () => {\n        if (shouldUseStaticHeader) {\n            const onHeaderLayoutToPass = shouldMeasureHeader.current ? onHeaderLayout : undefined;\n            shouldMeasureHeader.current = false;\n            return (<CalendarHeader {...headerProps} testID={`${testID}.staticHeader`} style={staticHeaderStyle} month={currentMonth} addMonth={addMonth} onHeaderLayout={onHeaderLayoutToPass} accessibilityElementsHidden={accessibilityElementsHidden} // iOS\n             importantForAccessibility={importantForAccessibility} // Android\n            />);\n        }\n    };\n    /** Viewable month */\n    const viewabilityConfig = useRef({\n        viewAreaCoveragePercentThreshold: 20\n    });\n    const onViewableItemsChanged = useCallback(({ viewableItems }) => {\n        const newVisibleMonth = parseDate(viewableItems[0]?.item);\n        if (shouldFixRTL) {\n            const centerIndex = items.findIndex((item) => isEqual(parseDate(current), item));\n            const adjustedOffset = centerIndex - items.findIndex((item) => isEqual(newVisibleMonth, item));\n            visibleMonth.current = items[centerIndex + adjustedOffset];\n            setCurrentMonth(visibleMonth.current);\n        }\n        else {\n            if (!sameDate(visibleMonth?.current, newVisibleMonth)) {\n                visibleMonth.current = newVisibleMonth;\n                setCurrentMonth(visibleMonth.current);\n            }\n        }\n    }, [items, shouldFixRTL, current]);\n    const viewabilityConfigCallbackPairs = useRef([\n        {\n            viewabilityConfig: viewabilityConfig.current,\n            onViewableItemsChanged\n        }\n    ]);\n    return (<View style={style.current.flatListContainer} testID={testID}>\n      <FlatList ref={list} windowSize={shouldFixRTL ? pastScrollRange + futureScrollRange + 1 : undefined} style={listStyle} showsVerticalScrollIndicator={showScrollIndicator} showsHorizontalScrollIndicator={showScrollIndicator} data={items} renderItem={renderItem} getItemLayout={getItemLayout} initialNumToRender={range.current} initialScrollIndex={initialDateIndex} viewabilityConfigCallbackPairs={viewabilityConfigCallbackPairs.current} testID={`${testID}.list`} onLayout={onLayout} removeClippedSubviews={removeClippedSubviews} pagingEnabled={pagingEnabled} scrollEnabled={scrollEnabled} scrollsToTop={scrollsToTop} horizontal={horizontal} keyboardShouldPersistTaps={keyboardShouldPersistTaps} keyExtractor={keyExtractor} onEndReachedThreshold={onEndReachedThreshold} onEndReached={onEndReached} nestedScrollEnabled={nestedScrollEnabled} onMomentumScrollBegin={onMomentumScrollBegin} onMomentumScrollEnd={onMomentumScrollEnd} onScrollBeginDrag={onScrollBeginDrag} onScrollEndDrag={onScrollEndDrag} contentContainerStyle={contentContainerStyle}/>\n      {renderStaticHeader()}\n    </View>);\n};\nexport default forwardRef(CalendarList);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = {\n    ...Calendar.propTypes,\n    pastScrollRange: PropTypes.number,\n    futureScrollRange: PropTypes.number,\n    calendarWidth: PropTypes.number,\n    calendarHeight: PropTypes.number,\n    calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    staticHeader: PropTypes.bool,\n    showScrollIndicator: PropTypes.bool,\n    animateScroll: PropTypes.bool,\n    scrollEnabled: PropTypes.bool,\n    scrollsToTop: PropTypes.bool,\n    pagingEnabled: PropTypes.bool,\n    horizontal: PropTypes.bool,\n    keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n    keyExtractor: PropTypes.func,\n    onEndReachedThreshold: PropTypes.number,\n    onEndReached: PropTypes.func,\n    nestedScrollEnabled: PropTypes.bool\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}